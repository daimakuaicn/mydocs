const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":197,\"nextId\":197,\"documentIds\":{\"0\":\"v-2e3eac9e\",\"1\":\"v-2e3eac9e#幻灯片演示\",\"2\":\"v-2e3eac9e#标注幻灯片\",\"3\":\"v-2e3eac9e#标注幻灯片-1\",\"4\":\"v-2e3eac9e#markdown\",\"5\":\"v-2e3eac9e#markdown-1\",\"6\":\"v-2e3eac9e#这是一个-h3\",\"7\":\"v-2e3eac9e#markdown-2\",\"8\":\"v-2e3eac9e#markdown-3\",\"9\":\"v-2e3eac9e#markdown-4\",\"10\":\"v-2e3eac9e#markdown-5\",\"11\":\"v-2e3eac9e#布局\",\"12\":\"v-2e3eac9e#布局-1\",\"13\":\"v-2e3eac9e#布局-2\",\"14\":\"v-2e3eac9e#布局-3\",\"15\":\"v-2e3eac9e#背景\",\"16\":\"v-2e3eac9e#动画片段\",\"17\":\"v-2e3eac9e#动画片段-1\",\"18\":\"v-2e3eac9e#动画片段-2\",\"19\":\"v-2e3eac9e#动画-class\",\"20\":\"v-2e3eac9e#动画片段-3\",\"21\":\"v-2e3eac9e#动画-class-1\",\"22\":\"v-2e3eac9e#动画片段-4\",\"23\":\"v-2e3eac9e#多个动画片段\",\"24\":\"v-2e3eac9e#动画片段-5\",\"25\":\"v-2e3eac9e#顺序\",\"26\":\"v-2e3eac9e#渐变\",\"27\":\"v-2e3eac9e#渐变-1\",\"28\":\"v-2e3eac9e#渐变-2\",\"29\":\"v-2e3eac9e#过渡动画\",\"30\":\"v-2e3eac9e#功能\",\"31\":\"v-2e3eac9e#功能-1\",\"32\":\"v-2e3eac9e#代码\",\"33\":\"v-2e3eac9e#功能-2\",\"34\":\"v-2e3eac9e#预览模式\",\"35\":\"v-2e3eac9e#功能-3\",\"36\":\"v-2e3eac9e#全屏模式\",\"37\":\"v-2e3eac9e#功能-4\",\"38\":\"v-2e3eac9e#缩放\",\"39\":\"v-2e3eac9e#结束\",\"40\":\"v-4e65ec78\",\"41\":\"v-4e65ec78@0\",\"42\":\"v-4e65ec78@1\",\"43\":\"v-c151bf32\",\"44\":\"v-c151bf32@0\",\"45\":\"v-c151bf32@1\",\"46\":\"v-438ffe52\",\"47\":\"v-438ffe52#markdown-介绍\",\"48\":\"v-438ffe52#markdown-配置\",\"49\":\"v-438ffe52#markdown-扩展\",\"50\":\"v-438ffe52#vuepress-扩展\",\"51\":\"v-438ffe52#主题扩展\",\"52\":\"v-438ffe52#自定义容器\",\"53\":\"v-438ffe52#代码块\",\"54\":\"v-438ffe52#上下角标\",\"55\":\"v-438ffe52#自定义对齐\",\"56\":\"v-438ffe52#attrs\",\"57\":\"v-438ffe52#脚注\",\"58\":\"v-438ffe52#标记\",\"59\":\"v-438ffe52#任务列表\",\"60\":\"v-438ffe52#图片增强\",\"61\":\"v-438ffe52#卡片\",\"62\":\"v-438ffe52@0\",\"63\":\"v-438ffe52@1\",\"64\":\"v-6e19edb7\",\"65\":\"v-6e19edb7#页面信息\",\"66\":\"v-6e19edb7#页面内容\",\"67\":\"v-6e19edb7#页面结构\",\"68\":\"v-6e19edb7@0\",\"69\":\"v-6e19edb7@1\",\"70\":\"v-1473bf53\",\"71\":\"v-1473bf53#目录\",\"72\":\"v-1473bf53@0\",\"73\":\"v-fffb8e28\",\"74\":\"v-fffb8e28#功能亮点\",\"75\":\"v-fffb8e28#bar\",\"76\":\"v-fffb8e28#foo\",\"77\":\"v-6956c0b7\",\"78\":\"v-6956c0b7#目录\",\"79\":\"v-6956c0b7@0\",\"80\":\"v-7fb92488\",\"81\":\"v-7fb92488#_1-基本概念\",\"82\":\"v-7fb92488#_1-1单体架构\",\"83\":\"v-7fb92488#_1-2微服务架构\",\"84\":\"v-7fb92488#_2-springcloud初体验\",\"85\":\"v-7fb92488#_2-1什么是springcloud\",\"86\":\"v-7fb92488#_2-2springcloud组成\",\"87\":\"v-7fb92488#_2-3springcloud初体验\",\"88\":\"v-7fb92488#_2-3-1工程结构说明\",\"89\":\"v-7fb92488#_2-3-2-父工程搭建\",\"90\":\"v-7fb92488#_2-3-3子工程搭建\",\"91\":\"v-7fb92488#_2-4-1传统调用\",\"92\":\"v-7fb92488#_2-4-2传统方式调用的问题所在\",\"93\":\"v-7fb92488#_2-4-3其他问题须知\",\"94\":\"v-7fb92488#_3-nacos注册中心\",\"95\":\"v-7fb92488#_3-1-nacos注册中心简介\",\"96\":\"v-7fb92488#_3-2注册中心产品\",\"97\":\"v-7fb92488#eurela\",\"98\":\"v-7fb92488#nacos\",\"99\":\"v-7fb92488#_3-3微服务集成nacos\",\"100\":\"v-7fb92488#_3-3-1准备工作\",\"101\":\"v-7fb92488#_3-3-2远程调用\",\"102\":\"v-7fb92488#_3-3-2-1方案一\",\"103\":\"v-7fb92488#_3-3-2-2方案二\",\"104\":\"v-7fb92488#_3-4nacos高级特性-服务集群\",\"105\":\"v-7fb92488#_3-4-1服务集群\",\"106\":\"v-7fb92488#_3-4-1-1集群概述\",\"107\":\"v-7fb92488#_3-4-1-2集群配置\",\"108\":\"v-7fb92488#_3-4-1-3集群访问\",\"109\":\"v-7fb92488#_3-5nacos高级特性-权重配置-了解\",\"110\":\"v-7fb92488#_3-6nacos高级特性-环境隔离\",\"111\":\"v-7fb92488#_3-6-1环境隔离概述\",\"112\":\"v-7fb92488#_3-6-2创建名称空间\",\"113\":\"v-7fb92488#_3-6-3微服务配置名称空间\",\"114\":\"v-7fb92488#_3-7nacos高级特性-实例类型\",\"115\":\"v-7fb92488#_4-loadbalancer\",\"116\":\"v-7fb92488#_4-1简介\",\"117\":\"v-7fb92488#_4-2-loadbalancer的执行流程\",\"118\":\"v-7fb92488#_4-3源码跟踪\",\"119\":\"v-7fb92488#_4-4补充知识-负载均衡算法\",\"120\":\"v-7fb92488#_4-5更改负载均衡算法\",\"121\":\"v-7fb92488#_5-openfeign组件\",\"122\":\"v-7fb92488#_5-1openfeign组件介绍\",\"123\":\"v-7fb92488#_5-2openfeign初体验\",\"124\":\"v-7fb92488#_5-3openfeign自定义配置\",\"125\":\"v-7fb92488#_5-3-1-日志配置\",\"126\":\"v-7fb92488#基于配置文件的方式\",\"127\":\"v-7fb92488#java代码的方式\",\"128\":\"v-7fb92488#_5-3-2-超时配置\",\"129\":\"v-7fb92488#_5-3-3-重试配置\",\"130\":\"v-7fb92488#_5-4代码优化\",\"131\":\"v-7fb92488#_6-gateway组件\",\"132\":\"v-7fb92488#_6-1认识gateway\",\"133\":\"v-7fb92488#_6-2三个核心概念\",\"134\":\"v-7fb92488#_6-2-1路由\",\"135\":\"v-7fb92488#_6-2-2断言-匹配关系\",\"136\":\"v-7fb92488#_6-2-3过滤器\",\"137\":\"v-7fb92488#_6-3gateway工作流程\",\"138\":\"v-7fb92488#_6-4gateway初体验\",\"139\":\"v-7fb92488#_6-5predicate的使用-路由断言工厂\",\"140\":\"v-7fb92488#_6-6过滤器\",\"141\":\"v-7fb92488#_6-6-1-过滤器简介\",\"142\":\"v-7fb92488#_6-6-2-内置过滤器\",\"143\":\"v-7fb92488#_6-6-3-路由过滤器\",\"144\":\"v-7fb92488#_6-6-4-默认过滤器\",\"145\":\"v-7fb92488#_6-6-5-全局过滤器\",\"146\":\"v-7fb92488#_6-6-6-过滤器执行顺序\",\"147\":\"v-7fb92488#_7-nacos配置中心\",\"148\":\"v-7fb92488#_7-1-统一配置管理\",\"149\":\"v-7fb92488#_7-2-nacos入门\",\"150\":\"v-7fb92488#_7-2-1-nacos中添加配置\",\"151\":\"v-7fb92488#_7-2-2-微服务集成配置中心\",\"152\":\"v-7fb92488#_7-2-3-读取自定义配置\",\"153\":\"v-7fb92488#value\",\"154\":\"v-7fb92488#configurationproperties\",\"155\":\"v-7fb92488#_7-3-配置热更新\",\"156\":\"v-7fb92488#_7-4-配置优先级\",\"157\":\"v-7fb92488#_8-sentinel部分\",\"158\":\"v-7fb92488#_8-1-初识sentinel\",\"159\":\"v-7fb92488#_8-1-1-雪崩效应\",\"160\":\"v-7fb92488#_8-1-2-解决方案\",\"161\":\"v-7fb92488#超时处理\",\"162\":\"v-7fb92488#隔离处理\",\"163\":\"v-7fb92488#熔断处理\",\"164\":\"v-7fb92488#流量控制\",\"165\":\"v-7fb92488#最终的目的\",\"166\":\"v-7fb92488#qps-query-per-seconds\",\"167\":\"v-7fb92488#阈值\",\"168\":\"v-7fb92488#_8-1-3-sentinel介绍\",\"169\":\"v-7fb92488#_8-2-sentinel入门\",\"170\":\"v-7fb92488#_8-2-1-下载sentinel控制台\",\"171\":\"v-7fb92488#_8-2-2-启动sentinel\",\"172\":\"v-7fb92488#_8-2-3-访问sentinel\",\"173\":\"v-7fb92488#_8-2-4-整合sentinel\",\"174\":\"v-7fb92488#_8-3-流量控制\",\"175\":\"v-7fb92488#_8-3-1-相关概念\",\"176\":\"v-7fb92488#_8-3-2-快速入门\",\"177\":\"v-7fb92488#_8-3-3-流控模式\",\"178\":\"v-7fb92488#流控模式简介\",\"179\":\"v-7fb92488#关联模式\",\"180\":\"v-7fb92488#链路模式\",\"181\":\"v-7fb92488#_8-3-4-流控效果\",\"182\":\"v-7fb92488#warm-up\",\"183\":\"v-7fb92488#排队等待\",\"184\":\"v-7fb92488#_8-3-5-热点参数限流\",\"185\":\"v-7fb92488#配置介绍\",\"186\":\"v-7fb92488#案例演示\",\"187\":\"v-7fb92488@0\",\"188\":\"v-7fb92488@1\",\"189\":\"v-177e1f06\",\"190\":\"v-5d5c2d30\",\"191\":\"v-5d5c2d30#介绍\",\"192\":\"v-5d5c2d30#详情\",\"193\":\"v-0b6fc5f8\",\"194\":\"v-5d5821d6\",\"195\":\"v-5d5821d6#介绍\",\"196\":\"v-5d5821d6#详情\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[1,5],\"2\":[1,2],\"3\":[1,12],\"4\":[1,4],\"5\":[1,4],\"6\":[2,11],\"7\":[1,11],\"8\":[1,12],\"9\":[1,10],\"10\":[1,8],\"11\":[1,1],\"12\":[1,7],\"13\":[1,8],\"14\":[1],\"15\":[1,5],\"16\":[1,1],\"17\":[1,6],\"18\":[1],\"19\":[2,10],\"20\":[1],\"21\":[2,9],\"22\":[1],\"23\":[1,8],\"24\":[1],\"25\":[1,9],\"26\":[1,1],\"27\":[1,15],\"28\":[1],\"29\":[1,8],\"30\":[1,1],\"31\":[1],\"32\":[1,20],\"33\":[1],\"34\":[1,6],\"35\":[1],\"36\":[1,6],\"37\":[1],\"38\":[1,9],\"39\":[1,2],\"40\":[1,18],\"41\":[null,null,1],\"42\":[null,null,1],\"43\":[1,7],\"44\":[null,null,1],\"45\":[null,null,1],\"46\":[2,11],\"47\":[2,8],\"48\":[2,13],\"49\":[2,11],\"50\":[2,10],\"51\":[1,10],\"52\":[1,19],\"53\":[1,1],\"54\":[1,3],\"55\":[1,3],\"56\":[1,5],\"57\":[1,3],\"58\":[1,3],\"59\":[1,5],\"60\":[1,2],\"61\":[1],\"62\":[null,null,1],\"63\":[null,null,1],\"64\":[1,3],\"65\":[1,20],\"66\":[1,17],\"67\":[1,16],\"68\":[null,null,1],\"69\":[null,null,2],\"70\":[1],\"71\":[1,5],\"72\":[null,null,1],\"73\":[1],\"74\":[1],\"75\":[1,2],\"76\":[1,2],\"77\":[1],\"78\":[1,5],\"79\":[null,null,1],\"80\":[1],\"81\":[2],\"82\":[2,15],\"83\":[2,52],\"84\":[2],\"85\":[2,10],\"86\":[2,26],\"87\":[2],\"88\":[3,5],\"89\":[3,81],\"90\":[3,100],\"91\":[3,65],\"92\":[3,9],\"93\":[3,7],\"94\":[2,5],\"95\":[3,18],\"96\":[2],\"97\":[1,2],\"98\":[1,36],\"99\":[2],\"100\":[2,44],\"101\":[2,4],\"102\":[3,65],\"103\":[3,49],\"104\":[3],\"105\":[3],\"106\":[4,45],\"107\":[4,33],\"108\":[4,25],\"109\":[5,39],\"110\":[3],\"111\":[3,20],\"112\":[3,5],\"113\":[3,24],\"114\":[3,22],\"115\":[2],\"116\":[2,10],\"117\":[3,11],\"118\":[2,43],\"119\":[4,6],\"120\":[2,55],\"121\":[2],\"122\":[2,16],\"123\":[2,81],\"124\":[2],\"125\":[4,39],\"126\":[1,44],\"127\":[1,30],\"128\":[4,54],\"129\":[3,68],\"130\":[2,95],\"131\":[2],\"132\":[2,18],\"133\":[2],\"134\":[4,1],\"135\":[5,9],\"136\":[4,4],\"137\":[2,28],\"138\":[2,111],\"139\":[4,84],\"140\":[2],\"141\":[3,9],\"142\":[3,37],\"143\":[3,55],\"144\":[3,32],\"145\":[3,86],\"146\":[2,79],\"147\":[2,7],\"148\":[3,15],\"149\":[3],\"150\":[4,7],\"151\":[3,49],\"152\":[4],\"153\":[2,37],\"154\":[2,62],\"155\":[3,16],\"156\":[3,11],\"157\":[2],\"158\":[3],\"159\":[3,16],\"160\":[4],\"161\":[1,9],\"162\":[1,18],\"163\":[1,47],\"164\":[1,19],\"165\":[1,2],\"166\":[4,2],\"167\":[1,5],\"168\":[4,78],\"169\":[3],\"170\":[4,11],\"171\":[3,31],\"172\":[4,18],\"173\":[4,45],\"174\":[3,5],\"175\":[4,39],\"176\":[4,61],\"177\":[3],\"178\":[1,23],\"179\":[1,89],\"180\":[1,103],\"181\":[4,22],\"182\":[2,61],\"183\":[1,68],\"184\":[4],\"185\":[1,34],\"186\":[1,73],\"187\":[null,null,1],\"188\":[null,null,1],\"189\":[1,2],\"190\":[2],\"191\":[1,4],\"192\":[1,2],\"193\":[1,2],\"194\":[2],\"195\":[1,4],\"196\":[1,2]},\"averageFieldLength\":[1.9389853259521186,20.397519183818734,0.1866640743170684],\"storedFields\":{\"0\":{\"h\":\"幻灯片页\",\"t\":[\"@slidestart\"]},\"1\":{\"h\":\"幻灯片演示\",\"t\":[\"一个简单的幻灯片演示与各种小贴士。\",\"作者 Mr.Hope. 请滚动鼠标滚轮进入下一页\"]},\"2\":{\"h\":\"标注幻灯片\",\"t\":[\"👇\",\"--\"]},\"3\":{\"h\":\"标注幻灯片\",\"t\":[\"使用 --- 标注水平幻灯片\",\"在水平幻灯片中使用 -- 分割垂直幻灯片\",\"使用 <!-- .slide: ... --> 在幻灯片上添加属性\",\"使用 <!-- .element: ... --> 在前一个 HTML 元素上添加属性\"]},\"4\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"--\"]},\"5\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\"]},\"6\":{\"h\":\"这是一个 H3\",\"t\":[\"标题默认会自动转换为大写。\",\"这是一个有着 粗体, 斜体, 删除线 文字并包含 一个链接 的段落，并且它会自动换行。所以你无需担心它的长度。\",\"--\"]},\"7\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"列表默认为 inline-block\",\"项目\",\"项目\",\"项目\",\"项目 1\",\"项目 2\",\"项目 3\",\"--\"]},\"8\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"在你启用 highlight 插件后，代码块会自动高亮。\",\"const a = 1; \",\"--\"]},\"9\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"在你启用 math 插件后，你也可以使用 TEX 格式使用数学公式。\",\"--\"]},\"10\":{\"h\":\"Markdown\",\"t\":[\"你可以在幻灯片中使用 Markdown 语法的各种标记.\",\"⚠请注意: 表格和分割线，以及所有不在 Markdown 标准语法中的内容均不受支持。\"]},\"11\":{\"h\":\"布局\",\"t\":[\"--\"]},\"12\":{\"h\":\"布局\",\"t\":[\"👆 r-fit-text class 会让文字在不超出幻灯片范围的情况下尽可能大。\",\"--\"]},\"13\":{\"h\":\"布局\",\"t\":[\"Logo\",\"👆 r-stretch class 帮助你控制注入图片或视频的大小，使它们填充满幻灯片垂直方向上的剩余空间。\",\"--\"]},\"14\":{\"h\":\"布局\"},\"15\":{\"h\":\"背景\",\"t\":[\"你可以通过向特定幻灯片添加 data-background 属性自定义幻灯片背景.\"]},\"16\":{\"h\":\"动画片段\",\"t\":[\"--\"]},\"17\":{\"h\":\"动画片段\",\"t\":[\"动画片段用于高亮或显隐幻灯片中的元素。\",\"你需要在元素上添加 fragment 和动画 class。\",\"--\"]},\"18\":{\"h\":\"动画片段\"},\"19\":{\"h\":\"动画 class\",\"t\":[\"fade-in\",\"fade-out\",\"fade-up\",\"fade-down\",\"fade-left\",\"fade-right\",\"fade-in-then-out\",\"fade-in-then-semi-out\",\"--\"]},\"20\":{\"h\":\"动画片段\"},\"21\":{\"h\":\"动画 class\",\"t\":[\"grow\",\"shrink\",\"strike\",\"highlight-red\",\"highlight-green\",\"highlight-blue\",\"highlight-current-red\",\"highlight-current-green\",\"highlight-current-blue\",\"--\"]},\"22\":{\"h\":\"动画片段\"},\"23\":{\"h\":\"多个动画片段\",\"t\":[\"你可以按照顺序包裹一个 HTML 元素使其拥有多个动画片段 渐入 > 变红 > 渐出 \",\"--\"]},\"24\":{\"h\":\"动画片段\"},\"25\":{\"h\":\"顺序\",\"t\":[\"你可以使用 data-fragment-index 属性改变元素的动画顺序。\",\"不同元素可以有相同的动画顺序。\",\"最后显示\",\"第二个显示\",\"第一个显示\",\"第二个显示\"]},\"26\":{\"h\":\"渐变\",\"t\":[\"--\"]},\"27\":{\"h\":\"渐变\",\"t\":[\"Transition 可以通过配置中的 transition 选项全局设置，也可以通过在特定幻灯片添加 data-transition 属性局部设置.\",\"可能的值:\",\"none\",\"fade\",\"slide\",\"convex\",\"concave\",\"zoom\",\"--\"]},\"28\":{\"h\":\"渐变\"},\"29\":{\"h\":\"过渡动画\",\"t\":[\"你可以在相邻的幻灯片上添加 data-auto-animate 使相同的 HTML 元素产生过渡动画效果。\"]},\"30\":{\"h\":\"功能\",\"t\":[\"--\"]},\"31\":{\"h\":\"功能\"},\"32\":{\"h\":\"代码\",\"t\":[\"通过启用 highlight 插件，你可以对代码块进行高亮。\",\"你可以使用 [a-b|c-d] 语法来分布高亮特定行。\",\"let a = 1; let b = 2; let c = (x) => 1 + 2 + x; c(3); \",\"--\"]},\"33\":{\"h\":\"功能\"},\"34\":{\"h\":\"预览模式\",\"t\":[\"按下 Esc 或 O 即可在幻灯片获得焦点时进入预览模式。\",\"--\"]},\"35\":{\"h\":\"功能\"},\"36\":{\"h\":\"全屏模式\",\"t\":[\"按下 F 或 F11 即可在幻灯片获得焦点时进入全屏模式。\",\"--\"]},\"37\":{\"h\":\"功能\"},\"38\":{\"h\":\"缩放\",\"t\":[\"按下 alt (Linux 上使用 ctrl) 的同时点击幻灯片的任何元素，即可以向此元素进行放大。\",\"再次点击即可缩小。\"]},\"39\":{\"h\":\"结束\",\"t\":[\"@slideend\"]},\"40\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"41\":{\"c\":[\"使用指南\"]},\"42\":{\"c\":[\"禁用\"]},\"43\":{\"h\":\"密码加密的文章\",\"t\":[\"实际的文章内容。\",\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\",\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"]},\"44\":{\"c\":[\"使用指南\"]},\"45\":{\"c\":[\"文章加密\"]},\"46\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"47\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"48\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"相关信息\",\"Frontmatter 是 VuePress 中很重要的一个概念，如果你不了解它，你需要阅读 Frontmatter 介绍。\"]},\"49\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"50\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"51\":{\"h\":\"主题扩展\",\"t\":[\"通过 vuepress-plugin-md-enhance，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"52\":{\"h\":\"自定义容器\",\"t\":[\"安全的在 Markdown 中使用 {{ variable }}。\",\"自定义标题\",\"信息容器，包含 代码 与 链接。\",\"const a = 1; \",\"自定义标题\",\"提示容器\",\"自定义标题\",\"警告容器\",\"自定义标题\",\"危险容器\",\"自定义标题\",\"详情容器\",\"查看详情\"]},\"53\":{\"h\":\"代码块\",\"t\":[\"查看详情\"]},\"54\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"55\":{\"h\":\"自定义对齐\",\"t\":[\"我是居中的\",\"我在右对齐\",\"查看详情\"]},\"56\":{\"h\":\"Attrs\",\"t\":[\"一个拥有 ID 的 单词。\",\"查看详情\"]},\"57\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注[1].\",\"查看详情\"]},\"58\":{\"h\":\"标记\",\"t\":[\"你可以标记 重要的内容 。\",\"查看详情\"]},\"59\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"60\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小\",\"查看详情\"]},\"61\":{\"h\":\"卡片\"},\"62\":{\"c\":[\"使用指南\"]},\"63\":{\"c\":[\"Markdown\"]},\"64\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"65\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"66\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"提示\",\"你可以将图片和 Markdown 文件放置在一起，但是你需要使用相对链接./ 进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\",\"主题包含了一个自定义徽章可以使用:\",\"文字结尾应该有深蓝色的 徽章文字 徽章。 \"]},\"67\":{\"h\":\"页面结构\",\"t\":[\"此页面应当包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"导航栏\",\"侧边栏\",\"页脚\",\"返回顶部按钮\",\"你可以通过主题选项和页面 Frontmatter 自定义它们。\"]},\"68\":{\"c\":[\"使用指南\"]},\"69\":{\"c\":[\"页面配置\",\"使用指南\"]},\"70\":{\"h\":\"主要功能与配置演示\"},\"71\":{\"h\":\"目录\",\"t\":[\"Markdown 展示\",\"页面展示\",\"禁用展示\",\"加密展示\"]},\"72\":{\"c\":[\"使用指南\"]},\"73\":{\"h\":\"指南\"},\"74\":{\"h\":\"功能亮点\"},\"75\":{\"h\":\"Bar\",\"t\":[\"baz\",\"...\"]},\"76\":{\"h\":\"Foo\",\"t\":[\"ray\",\"...\"]},\"77\":{\"h\":\"SpringBoot\"},\"78\":{\"h\":\"目录\",\"t\":[\"Markdown 展示\",\"页面展示\",\"禁用展示\",\"加密展示\"]},\"79\":{\"c\":[\"使用指南\"]},\"80\":{\"h\":\"SpringCloud\"},\"81\":{\"h\":\"1.基本概念\"},\"82\":{\"h\":\"1.1单体架构\",\"t\":[\"单体架构: 把项目中所有功能模块全部写在一个工程中\",\"缺点\",\"代码混乱,维护困难.\",\"修改一个功能,对其他功能产生影响,牵一发动全身.\",\"拓展性差,可靠性差,风险高\",\"优点\",\"结构简单,部署方便,易于维护\"]},\"83\":{\"h\":\"1.2微服务架构\",\"t\":[\"微服务架构: 微小服务,把一个完整项目,按照功能拆分成多个独立的服务模块,每个服务模块独立运行,独立部署,可以使用不同的数据库,可以使用不同的语言.\",\"image-20231025150308975\",\"优点:\",\"相互独立,谁修改某个服务,其他服务不受影响,解耦合\",\"可拓展性好\",\"容错性高\",\"高效性强\",\"灵活性强\",\"缺点:\",\"部署不是很方便\",\"微服务的管理\",\"服务间的通讯\",\"前端访问问题\",\"配置文件管理\",\"特点:\",\"单一职责:每个服务做到对应唯一业务能力\",\"自治:团队独立,数据独立,堵路部署和交付\",\"面向服务:服务提供唯一标准的接口,与语言和技术无关\",\"###1.3分布式和集群\",\"image-20231025150319539\",\"部署项目的时候,使用大于两台服务器进行部署:\",\"负载均衡:平均负担压力\",\"image-20231025150331327\",\"**集群:**多台服务器上部署相同的项目(内容)分担服务器访问压力\",\"每台服务器放的不同内容,不同模块.\",\"image-20231025150343310\",\"**分布式:**多台服务器上面部署不同内容模块\"]},\"84\":{\"h\":\"2.SpringCloud初体验\"},\"85\":{\"h\":\"2.1什么是SpringCloud\",\"t\":[\"SpringCloud并不是一种技术,springcloud是一系列框架或者组件的集合,springcloud里面包含了很多组件和框架,使用这些组件可以实现微服务架构.\",\"SpringCloud是一系列框架的有序集合.在SpringCloud这个项目中包含很多的组件,子框架,每一个组件都是用来解决问题架构中所遇到的问题,因此SpringCloud可以看做是一套微服务的解决方案.\",\"springcloud实现微服务架构离不开SpringBoot\"]},\"86\":{\"h\":\"2.2SpringCloud组成\",\"t\":[\"SpringCloud包含很多组件\",\"原生组件:由网飞公司开发,随着时间推迟,处于维护状态,不再更新.\",\"Spring Cloud alibaba组件:目前最流行的组件\",\"Spring Cloud 腾讯组件:\",\"SpringCloud组件自己研发的组件:GatWay网关\",\"常用组件\",\"⭐Nacos(注册中心,配置中心)\",\"⭐Openfeign(远程调用)\",\"⭐LoadBalancer(负载均衡)\",\"⭐Gateway(服务网关)\",\"⭐Sentinel(服务保护组件)\"]},\"87\":{\"h\":\"2.3SpringCloud初体验\"},\"88\":{\"h\":\"2.3.1工程结构说明\",\"t\":[\"在创建微服务工程的时候都需要先提供一个工程,使用父工程来管理多个微服务所需的依赖,我们的微服务系统结构如下:\",\"image-20231025150259507\"]},\"89\":{\"h\":\"2.3.2 父工程搭建\",\"t\":[\"步骤\",\"创建一个maven父工程\",\"添加依赖:\",\"<!-- 定义属性 --> <properties> <maven.compiler.source>17</maven.compiler.source> <maven.compiler.target>17</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <spring-cloud.version>2022.0.2</spring-cloud.version> <spring-cloud-alibaba.version>2022.0.0.0-RC2</spring-cloud-alibaba.version> <mybatis-spring-boot.version>3.0.1</mybatis-spring-boot.version> <mysql.version>8.0.30</mysql.version> </properties> <!-- 指定spring boot父工程 --> <parent> <artifactId>spring-boot-starter-parent</artifactId> <groupId>org.springframework.boot</groupId> <version>3.0.5</version> </parent> <dependencyManagement> <!-- 在dependencyManagement标签中所定义的依赖不会被子工程直接进行继承 --> <dependencies> <!-- spring cloud的依赖 --> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-dependencies</artifactId> <version>${spring-cloud.version}</version> <type>pom</type> <scope>import</scope> </dependency> <!-- spring cloud alibaba的依赖 --> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-alibaba-dependencies</artifactId> <version>${spring-cloud-alibaba.version}</version> <type>pom</type> <scope>import</scope> </dependency> <!-- mysql的驱动 --> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>${mysql.version}</version> </dependency> <!-- mybatis和spring boot整合的起步依赖 --> <dependency> <groupId>org.mybatis.spring.boot</groupId> <artifactId>mybatis-spring-boot-starter</artifactId> <version>${mybatis-spring-boot.version}</version> </dependency> </dependencies> </dependencyManagement> \",\"删除src目录\"]},\"90\":{\"h\":\"2.3.3子工程搭建\",\"t\":[\"创建子模块\",\"在子模块中添加依赖:\",\"<properties> <maven.compiler.source>17</maven.compiler.source> <maven.compiler.target>17</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> </properties> <dependencies> <!-- spring boot的web开发所需要的起步依赖 --> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-web</artifactId> </dependency> <!-- mysql的驱动 --> <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> </dependency> <!-- mybatis和spring boot整合的起步依赖 --> <dependency> <groupId>org.mybatis.spring.boot</groupId> <artifactId>mybatis-spring-boot-starter</artifactId> </dependency> <!-- lombok依赖，快速生成getter和setter方法 --> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> </dependency> </dependencies> \",\"在resourse目录下面创建一个application.yml文件,文件如下:\",\"# 配置服务端口号 server: port: 10100 # 配置数据库的连接信息 spring: datasource: driver-class-name: com.mysql.cj.jdbc.Driver url: jdbc:mysql://localhost:3306/spzx-cloud-user?characterEncoding=UTF8 username: root password: root # 配置mybatis的相关信息 mybatis: configuration: log-impl: org.apache.ibatis.logging.stdout.StdOutImpl type-aliases-package: com.atguigu.spzx.cloud.user.entity mapper-locations: classpath:/mapper/*.xml \",\"###2.4 SpringCloud远程调用\",\"image-20231025150254012\",\"image-20231025150247970\"]},\"91\":{\"h\":\"2.4.1传统调用\",\"t\":[\"如果想完成上面的需求,我们就需要在Order为服务中向User微服务发起一个http请求,调用http://localhost:10100/api/user/findUserByuserId/{userId}这个接口\",\"第一步:在调用端order模块创建配置类,创建RestTemplate对象\",\"image-20231025181951482\",\"第二步:在调用端order模块创建User实体类,接收返回主句\",\"第三步:在Order实现类的方法使用RestTemplate发起远程调用(在Order微服务的Spring容器中注册一个RestTemplate)\",\"// com.atguigu.spzx.cloud.order.config; @Configuration public class RestTemplateConfiguration { @Bean public RestTemplate restTemplate() { return new RestTemplate() ; } } \",\"第四步:获取RestTemplate远程调用返回结果,数据封装\",\"public class OrderServiceImpl implement OrderService{ @AutoWired private RestTemplate restTemplate; @AutoWired private OrderMapper orderMapper; @Override public Order findOrderByOrderId(Long OrderId){ //根据Id查询订单数据 Order order = orderMapper.findOrderByOrderId(orderId); //发起远程调用 User User = restTemplate.getForObject(\\\"http://localhost:10100/api/user/findUserByUserId/1\\\"+order.getUserId(),User.class); order.serUser(user); //返回订单数据 return order; } } \"]},\"92\":{\"h\":\"2.4.2传统方式调用的问题所在\",\"t\":[\"维护性差:服务方提供IP地址发生改变,那么此时服务消费方就需要修改代码\",\"缺少负载均衡机制:负载均衡就是负载请求通过多台服务器进行处理\",\"image-20231025150240929\",\"image-20231025150235228\",\"image-20231025183404072\"]},\"93\":{\"h\":\"2.4.3其他问题须知\",\"t\":[\"SpringBoot \",\"SpringCloud是一系列框架集合,使用这些框架(组件)实现微服务\",\"SpringCloud实现微服务框架,必须使用SpringBoot\"]},\"94\":{\"h\":\"3.Nacos注册中心\",\"t\":[\"解决传统远程调用所存在的问题,SpringCloud Alibaba 提供了nacos注册中心:\"]},\"95\":{\"h\":\"3.1 Nacos注册中心简介\",\"t\":[\"通过注册中心可以对服务提供方和消费方解耦合.\",\"image-20231025150229500\",\"image-20231025183451126\",\"工作流程: 服务提供方在启动的时候,会向注册中心注册自己服务的详情信息(ip,端口号等).在注册中心会维护一张服务清单,保存这些注册信息,注册中心需要以心跳的方式去检测清单中的服务是否可用,如果不可用,需要在服务清单中剔除不可用的服务.\",\"服务消费方向服务注册中心咨询服务,并获取所有服务的实例清单,然后按照指定的负载均衡算法从服务清单中选择一个服务实例进行访问.\"]},\"96\":{\"h\":\"3.2注册中心产品\"},\"97\":{\"h\":\"Eurela\",\"t\":[\"image-20231025150223666\"]},\"98\":{\"h\":\"nacos\",\"t\":[\"image-20231025150218218\",\"docker安装nacos:\",\"# 拉取镜像 docker pull nacos/nacos-server:v2.2.2 # 创建容器 docker run --name nacos -e MODE=standalone -p 8848:8848 -p 9848:9848 -d nacos/nacos-server:v2.2.2 # nacos2.x的版本新增了一个客户端与服务端的gRpc的通讯端口号9848 \",\"打开浏览器访问nacos的所提供的后端管理界面：http://192.168.136.142:8848/nacos\",\"用户名和密码：nacos/nacos\",\"nacos启动:\",\"#cmd方式进入bin里面,执行命令: startup.cmd -m standalone \"]},\"99\":{\"h\":\"3.3微服务集成nacos\"},\"100\":{\"h\":\"3.3.1准备工作\",\"t\":[\"需求：将两个微服务(user、order)注册到nacos中\",\"实现步骤：\",\"1、在两个子工程中引入如下依赖\",\"<!-- nacos作为注册中心的依赖 --> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> </dependency> \",\"2、在application.yml文件中添加如下配置\",\"spring: # 配置nacos注册中心的地址 cloud: nacos: discovery: server-addr: localhost:8848 application: name: spzx-cloud-user # 每一个服务注册到nacos注册中心都需要提供一个服务名称,order微服务注册的时候需要更改微服务名称 \",\"3、启动两个微服务：就可以在nacos的后台管理系统中，看到如下的注册信息：\",\"image-20230809100204178\"]},\"101\":{\"h\":\"3.3.2远程调用\",\"t\":[\"当我们把微服务都注册到注册中心以后，那么此时就可以根据服务的名称从注册中心获取服务的ip地址和端口号了，进而就可以更改远程调用代码！\"]},\"102\":{\"h\":\"3.3.2.1方案一\",\"t\":[\"使用到Spring Cloud中所提供的一个服务发现的客户端对象：DiscoveryClient。\",\"代码实现：\",\"@Service public class OrderServiceImpl implements OrderService { @Autowired // 注入RestTemplate远程调用工具 private RestTemplate restTemplate ; @Autowired private DiscoveryClient discoveryClient ; @Autowired private OrderMapper orderMapper ; @Override public Order findOrderByOrderId(Long orderId) { // 根据id查询订单数据 Order order = orderMapper.findOrderByOrderId(orderId); // 根据服务名称从注册中心中获取服务实例列表 ServiceInstance serviceInstance = chooseServiceInstance(\\\"spzx-cloud-user\\\"); // 发起远程调用 User user = restTemplate.getForObject(\\\"http://\\\" + serviceInstance.getHost() +\\\":\\\" + serviceInstance.getPort() +\\\"/api/user/findUserByUserId/\\\" + order.getUserId(), User.class); order.setUser(user); // 返回订单数据 return order; } // 根据服务的名称从注册中心中获取服务地址信息 public ServiceInstance chooseServiceInstance(String applicationName) { // 获取服务实例列表 List<ServiceInstance> instances = discoveryClient.getInstances(applicationName); // 编写一个简易的随机负载均衡算法 int size = instances.size(); Random random = new Random() ; int instanceIndex = random.nextInt(size); ServiceInstance serviceInstance = instances.get(instanceIndex); // 返回服务实例 return serviceInstance ; } } \",\"可以启动多个user微服务实例进行负载均衡的测试。\"]},\"103\":{\"h\":\"3.3.2.2方案二\",\"t\":[\"使用Spring Cloud中所提供的一个组件：spring-cloud-loadbalancer负载均衡\",\"使用步骤：\",\"1、在order微服务中添加依赖\",\"<!-- spring cloud 所提供的负载均衡器 --> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-loadbalancer</artifactId> </dependency> \",\"2、在声明RestTemplate的方法上添加**@LoadBalanced**注解\",\"@Bean @LoadBalanced // 让RestTemplate具有负载均衡的能力 public RestTemplate restTemplate() { return new RestTemplate() ; } \",\"3、更改远程调用代码\",\"// 服务提供方的服务ip地址和端口号可以使用服务提供方的服务名称进行替换 restTemplate.getForObject(\\\"http://spzx-cloud-user/api/user/findUserByUserId/\\\" + order.getUserId(), User.class); \",\"注意：默认使用的负载均衡算法就是轮询【依次调用对应服务】\"]},\"104\":{\"h\":\"3.4Nacos高级特性:服务集群\"},\"105\":{\"h\":\"3.4.1服务集群\"},\"106\":{\"h\":\"3.4.1.1集群概述\",\"t\":[\"在实际生产环境中，为了保证每一个服务的高可用，那么此时就需要去构建服务集群，但是并不是说把所有的服务都部署在一个机房里。而是将多个服务分散的部署到不同的机房中，每一个机房的服务可以看做成是一个集群。如下所示：\",\"image-20231025144212023\",\"微服务互相访问时，应该尽可能访问同集群实例，因为本地访问速度更快。当本集群内不可用时，才访问其它集群。例如：上海机房内的order微服务应该优先访问同机房的user微服务。\",\"image-20231025184553633\",\"根据机房进行配置,指定当前服务默认是哪个机房.保证集群的高可用\",\"❓怎么保证服务的高可用\",\"第一步:在User模块配置文件添加配置,指定访问集群机房\",\"第二步:在服务端User进行配置:配置所属区域\",\"第三步:在调用端Order进行配置:配置Order模块远程访问的集群是什么,配置负载均衡效果\",\"第四步:测试:如果错误,检查配置文件格式\",\"轮循环效果:其中一个地区服务器下线就会访问另外一个,恢复,会重新进行访问第一个.\",\"❌上线下线会重新访问原来的,如果是服务器挂了,就不会访问之前的了\",\"解决方案:把之前的缓存删除,重新进行启动\"]},\"107\":{\"h\":\"3.4.1.2集群配置\",\"t\":[\"修改spzx-cloud-user的application.yml文件，添加集群配置：\",\"spring: cloud: nacos: discovery: cluster-name: SH # 配置服务所属集群 \",\"启动三个服务user微服务实例，实例所属集群分配情况：实例1属于SH，实例2和实例3属于BJ\",\"通过添加添加JVM参数更改服务实例所属集群，启动实例2和实例3\",\"image-20230809102346561\",\"实例2：10101\",\"-Dserver.port=10101 -Dspring.cloud.nacos.discovery.cluster-name=BJ \",\"实例3：10103\",\"-Dserver.port=10103 -Dspring.cloud.nacos.discovery.cluster-name=BJ \",\"启动三个用户微服务实例，查看实例分配情况：\",\"image-20230503183655565\",\"image-20230503183721175\"]},\"108\":{\"h\":\"3.4.1.3集群访问\",\"t\":[\"需求：当order服务优先访问SH集群中的user微服务实例，当SH集群中的user微服务实例出现问题以后，在访问BJ集群中的实例。\",\"步骤：\",\"1、给order微服务的application.yml文件，添加集群配置：\",\"spring: cloud: nacos: discovery: cluster-name: SH # 配置服务所属集群 \",\"2、order微服务在loadbalancer组件中集成nacos\",\"spring: # 配置nacos注册中心的地址 cloud: loadbalancer: nacos: # 集成nacos的负载均衡算法 enabled: true \"]},\"109\":{\"h\":\"3.5Nacos高级特性:权重配置(了解)\",\"t\":[\"使用LoadBalance,默认效果是轮循机制,,我们可以设置权重,权重值越高,被访问的概率越大.一般来讲修改权重的概率不大,场景不多.了解.\",\"image-20231025144200255\",\"实际部署中会出现这样的场景：服务器设备性能有差异，部分实例所在机器性能较好，另一些较差，我们希望性能好的机器承担更多的用户请求。\",\"但默认情况下Nacos的负载均衡算法是同集群内随机挑选，不会考虑机器的性能问题。\",\"因此，Nacos提供了权重配置来控制访问频率，权重越大则访问频率越高。\",\"在Nacos控制台，找到spzx-cloud-user的实例列表，点击编辑，即可修改权重：\",\"image-20230503185416608\",\"权重取值范围：0~1\",\"在配置文件中进行权重配置：\",\"spring: cloud: nacos: discovery: weight: 0.1 \",\"注意：如果权重修改为0，则该实例永远不会被访问\"]},\"110\":{\"h\":\"3.6Nacos高级特性:环境隔离\"},\"111\":{\"h\":\"3.6.1环境隔离概述\",\"t\":[\"在实际的开发过程中，可能会存在很多个软件环境：开发环境、测试环境、生产环境。\",\"nacos也是支持多环境隔离配置的，在nacos是通过namespace来实现多环境的隔离。\",\"完整的服务注册数据存储结构如下所示：\",\"image-20230503185847770\",\"namespace + group 才可以确定具体的微服务实例。默认情况下，所有service、group都在同一个namespace，名为public。如下所示：\",\"image-20230503190738675\"]},\"112\":{\"h\":\"3.6.2创建名称空间\",\"t\":[\"我们也可以创建新的名称空间，来将不同的服务隔离到不同的环境下面，如下所示：\",\"image-20230503191050511\"]},\"113\":{\"h\":\"3.6.3微服务配置名称空间\",\"t\":[\"给微服务添加名称空间的配置，来指定该微服务所属环境。\",\"例如，修改spzx-cloud-order的application.yml文件：\",\"spring: # 配置nacos注册中心的地址 cloud: nacos: discovery: namespace: 4a88035e-acf3-45a9-924f-2421acbff67a # 配置服务实例所属名称空间 \",\"此时order微服务所对应的服务实例就属于新的名称空间，user微服务所对应的服务实例属于public的名称空间，那么此时在进行远程调用的时候，就会出现如下的错误：\",\"image-20230503191655562\"]},\"114\":{\"h\":\"3.7Nacos高级特性:实例类型\",\"t\":[\"Nacos中的服务实例存在两种类型：\",\"1、临时实例：如果实例宕机超过一定时间，会从服务列表剔除，并且实例会定时上报自身的健康状态给Nacos注册中心，默认的类型。\",\"2、非临时实例：如果实例宕机，不会从服务列表剔除，Nacos注册中心会主动询问实例的健康状态，也可以叫永久实例。\",\"配置一个服务实例为永久实例：\",\"spring: cloud: nacos: discovery: ephemeral: false # 配置该实例为非临时实例 \"]},\"115\":{\"h\":\"4.LoadBalancer\"},\"116\":{\"h\":\"4.1简介\",\"t\":[\"Spring Cloud LoadBalancer是Spring Cloud中负责客户端负载均衡的模块，其主要原理是通过选择合适的服务实例来实现负载均衡。\",\"客户端负载均衡：就是负载均衡算法由客户端提供\",\"如下图所示：\",\"image-20230503213502251\"]},\"117\":{\"h\":\"4.2 LoadBalancer的执行流程\",\"t\":[\"image-20231025190315177\",\"通过LoadBalancerInterceptor请求拦截器拦截我们的RestTemplate请求:\",\"获取请求URL,然后从请求中获取提供方的主机名称\",\"然后调用LoadBalancerClient中execute方法,将服务提供方的名称传递过去\",\"在LoadBalancerClient的choose方法通过ReactiveLoadBalancer.Factory从Nacos注册中心获取列表以及负载均衡算法实例对象\",\"通过ReactieloadBalancer从服务列表中选择一个服务实例地址,然后发起远程调用\"]},\"118\":{\"h\":\"4.3源码跟踪\",\"t\":[\"LoadBalancerInterceptor\",\"核心源码如下所示：\",\"image-20230503223822056\",\"可以看到这里的intercept方法，拦截了用户的HttpRequest请求，然后做了几件事：\",\"1、request.getURI()：获取请求uri，本例中就是 http://spzx-cloud-user/api/user/findUserByUserId/1\",\"2、originalUri.getHost()：获取uri路径的主机名，其实就是服务id，spzx-cloud-user\",\"3、this.loadBalancer.execute()：处理服务id，和用户请求。\",\"这里的this.loadBalancer是BlockingLoadBalancerClient类型，我们继续跟入。\",\"BlockingLoadBalancerClient\",\"核心源码如下所示：\",\"image-20230503224702411\",\"ReactiveLoadBalancer.Factory的getInstance方法做了两件事情：\",\"1、获取了一个具体的负载均衡算法对象\",\"2、根据服务的id从Nacos注册中心中获取服务地址列表\",\"紧跟着调用了RoundRobinLoadBalancer#choose方法，从服务列表中选择一个服务实例对象。\",\"默认的负载均衡算法：RoundRobinLoadBalancer\"]},\"119\":{\"h\":\"4.4补充知识:负载均衡算法:\",\"t\":[\"按照特定的方式实现特定功能就是算法:\",\"轮循算法:\",\"数学知识:\",\"轮循算法数学原理\",\"请求次数%服务器数量=\"]},\"120\":{\"h\":\"4.5更改负载均衡算法\",\"t\":[\"LoadBalancer默认的负载均衡算法是RoundRobinLoadBalancer，如果想更改默认的负载均衡算法，那么此时需要向Spring容器中注册一个Bean，并且配置负载均衡的使用者。\",\"代码如下所示：\",\"1、在Spring容器中注册一个Bean\",\"public class CustomLoadBalancerConfiguration { /** * @param environment: 用于获取环境属性配置，其中LoadBalancerClientFactory.PROPERTY_NAME表示该负载均衡器要应用的服务名称。 * @param loadBalancerClientFactory: 是Spring Cloud中用于创建负载均衡器的工厂类，通过getLazyProvider方法获取ServiceInstanceListSupplier对象，以提供可用的服务列表。 * ServiceInstanceListSupplier：用于提供ServiceInstance列表的接口，可以从DiscoveryClient或者其他注册中心中获取可用的服务实例列表。 * @return */ @Bean ReactorLoadBalancer<ServiceInstance> randomLoadBalancer(Environment environment, LoadBalancerClientFactory loadBalancerClientFactory) { String name = environment.getProperty(LoadBalancerClientFactory.PROPERTY_NAME); return new RandomLoadBalancer(loadBalancerClientFactory.getLazyProvider(name, ServiceInstanceListSupplier.class), name); } } \",\"2、配置负载均衡算法的使用者\",\"@Configuration @LoadBalancerClients(value = { @LoadBalancerClient(name = \\\"spzx-cloud-user\\\" , configuration = CustomLoadBalancerConfiguration.class) // 将负载均衡算法应用到指定的服务提供方中 }) public class RestTemplateConfiguration { @Bean @LoadBalanced // 让RestTemplate具有负载均衡的能力 public RestTemplate restTemplate() { return new RestTemplate() ; } } \"]},\"121\":{\"h\":\"5.OpenFeign组件\"},\"122\":{\"h\":\"5.1OpenFeign组件介绍\",\"t\":[\"基于Nacos和OpenFeign组件一起使用,实现远程调用过程\",\"概述：feign是一个声明式的http客户端，官方地址：https://github.com/OpenFeign/feign其作用就是帮助我们优雅的实现http请求的发送。\",\"image-20230624093622996\",\"使用RestTemplate进行远程调用代码回顾：\",\"image-20230624093650991\",\"存在的弊端：参数传递不太方便\"]},\"123\":{\"h\":\"5.2OpenFeign初体验\",\"t\":[\"OpenFeign的使用步骤如下：\",\"1、我们在spzx-cloud-order服务的pom文件中引入OpenFeign的依赖\",\"<!-- 加入OpenFeign的依赖 --> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-openfeign</artifactId> </dependency> \",\"2、在启动类上添加**@EnableFeignClients**开启OpenFeign的功能支持\",\"3、编写OpenFeign的客户端\",\"@FeignClient(value = \\\"spzx-cloud-user\\\") // 声明当前接口是一个访问user-service的feign的客户端 public interface UserFeignClient { @GetMapping(\\\"/api/user/findUserByUserId/{userId}\\\") public abstract User queryById(@PathVariable(\\\"userId\\\") Long userId) ; // 根据userId查询用户信息的接口方法 } \",\"这个客户端主要是基于SpringMVC的注解来声明远程调用的信息，比如：\",\"① 请求方式：GET\",\"② 请求路径：/api/user/findUserByUserId/\",\"③ 请求参数：Long userId\",\"④ 返回值类型：User\",\"这样，Feign就可以帮助我们发送http请求，无需自己使用RestTemplate来发送了。\",\"4、修改OrderService中的远程调用代码，使用Feign客户端代替RestTemplate：\",\"@Service public class OrderServiceImpl implements OrderService { @Autowired private OrderMapper orderMapper ; @Autowired private UserFeignClient userFeignClient ; @Override public Order findOrderByOrderId(Long orderId) { Order order = orderMapper.findOrderByOrderId(orderId); // 远程调用 User user = userFeignClient.queryById(order.getUserId()); order.setUser(user); return order ; } } \"]},\"124\":{\"h\":\"5.3OpenFeign自定义配置\"},\"125\":{\"h\":\"5.3.1 日志配置\",\"t\":[\"OpenFeign可以支持很多的自定义配置，如下表所示：\",\"类型\",\"作用\",\"说明\",\"feign.Logger.Level\",\"修改日志级别\",\"包含四种不同的级别：NONE、BASIC、HEADERS、FULL\",\"feign.codec.Decoder\",\"响应结果的解析器\",\"http远程调用的结果做解析，例如解析json字符串为java对象\",\"feign.codec.Encoder\",\"请求参数编码\",\"将请求参数编码，便于通过http请求发送\",\"feign.Contract\",\"支持的注解格式\",\"默认是SpringMVC的注解\",\"feign.Retryer\",\"失败重试机制\",\"请求失败的重试机制，默认是没有，不过会使用Ribbon的重试\",\"一般情况下，默认值就能满足我们使用，如果要自定义时，只需要创建自定义的@Bean覆盖默认Bean即可。\",\"下面以日志为例来演示如何自定义配置，支持两种方式的配置：\"]},\"126\":{\"h\":\"基于配置文件的方式\",\"t\":[\"基于配置文件修改feign的日志级别可以针对单个服务：\",\"# 将feign包下产生的日志的级别设置为debug logging: level: com.atguigu.spzx.cloud.order.feign: debug # openfeign日志级别配置 spring: cloud: openfeign: client: config: spzx-cloud-user: loggerLevel: full \",\"也可以针对所有服务：\",\"# 将feign包下产生的日志的级别设置为debug logging: level: com.atguigu.spzx.cloud.order.feign: debug # openfeign日志级别配置 spring: cloud: openfeign: client: config: default: # 这里用default就是全局配置，如果是写服务名称，则是针对某个微服务的配置 loggerLevel: full \",\"而日志的级别分为四种：\",\"① NONE：不记录任何日志信息，这是默认值。\",\"② BASIC：仅记录请求的方法，URL以及响应状态码和执行时间\",\"③ HEADERS：在BASIC的基础上，额外记录了请求和响应的头信息\",\"④ FULL：记录所有请求和响应的明细，包括头信息、请求体、元数据。\"]},\"127\":{\"h\":\"Java代码的方式\",\"t\":[\"也可以基于Java代码来修改日志级别，先声明一个类，然后声明一个Logger.Level的对象：\",\"public class DefaultFeignConfiguration { @Bean public Logger.Level feignLogLevel(){ return Logger.Level.BASIC; // 日志级别为BASIC } } \",\"如果要全局生效，将其放到启动类的@EnableFeignClients这个注解中：\",\"@EnableFeignClients(defaultConfiguration = DefaultFeignConfiguration .class) \",\"如果是局部生效，则把它放到对应的@FeignClient这个注解中：\",\"@FeignClient(value = \\\"spzx-cloud-user\\\", configuration = DefaultFeignConfiguration .class) \"]},\"128\":{\"h\":\"5.3.2 超时配置\",\"t\":[\"超时机制概述：Feign 的超时机制是指在使用 Feign 进行服务间的 HTTP 调用时，设置请求的超时时间。当请求超过设定的超时时间后，Feign 将会中断该请求并抛出相应的异常。\",\"超时机制的意义：\",\"1、防止长时间等待：通过设置适当的超时时间，可以避免客户端在请求服务时长时间等待响应而导致的性能问题。如果没有超时机制，客户端可能会一直等待，从而影响整个系统的吞吐量和响应时间。\",\"2、避免资源浪费：超时机制可以帮助及时释放占用的资源，例如连接、线程等。如果请求一直处于等待状态而不超时，将导致资源的浪费和系统的负载增加。\",\"3、优化用户体验：超时机制可以防止用户长时间等待无响应的情况发生，提供更好的用户体验。当请求超时时，可以及时给出错误提示或进行相应的处理，以提醒用户或采取其他措施。\",\"feign默认的超时配置为：\",\"image-20230624103625541\",\"超时时间越长，资源浪费的时间就越长，系统的稳定性就越差，因此需要设置为一个较为合理的超时时间，设置防止如下所示：\",\"spring: cloud: openfeign: client: config: default: loggerLevel: full read-timeout: 2000 # 读取数据的超时时间设置为2s connect-timeout: 2000 # 建立连接的超时时间设置为2s \"]},\"129\":{\"h\":\"5.3.3 重试配置\",\"t\":[\"feign一旦请求超时了，那么此时就会直接抛出SocketTimeoutException: Read timed out的异常。请求超时的原因有很多种，如网络抖动、服务不可用等。如果由于网络暂时不可用导致触发了超时机制，那么此时直接返回异常信息就并不是特别的合理，尤其针对查询请求，肯定希望得到一个结果。合理的做法：触发超时以后，让feign进行重试。\",\"具体步骤：\",\"1、自定义重试器\",\"public class FeignClientRetryer implements Retryer { // 定义两个成员变量来决定重试次数 private int start = 1 ; private int end = 3 ; @Override public void continueOrPropagate(RetryableException e) { // 是否需要进行重试取决于该方法是否抛出异常，如果抛出异常重试结束 if(start >= end) { throw new RuntimeException(e) ; } start++ ; } @Override public Retryer clone() { // 框架底层调用该方法得到一个重试器 return new FeignClientRetryer(); } } \",\"2、配置重试器\",\"spring: cloud: openfeign: client: config: default: loggerLevel: full read-timeout: 2000 connect-timeout: 2000 retryer: com.atguigu.spzx.cloud.order.feign.FeignClientRetryer # 配置自定义重试器 \"]},\"130\":{\"h\":\"5.4代码优化\",\"t\":[\"现有代码缺点\",\"上述代码存在的弊端：每一个服务消费方要调用服务提供方，都是需要去定义一个Feign的接口，不利于后期代码维护在实际的工作过程中，都是将Feign的接口抽取到一个独立的模块中，并且会将数据库所对应的实体类也抽取到一个独立的模块中，供其他的模块进行使用。\",\"例如，将UserFeginClient、Feign的默认配置都抽取到一个spzx-feign-api包中，Order、User实体类抽取到一个独立的模块中，其他的微服务引用该依赖包，即可直接使用。\",\"调用优化原理\",\"优化过程图解\",\"面向对象:实现组件复用的目的\",\"代码实现：\",\"1、定义一个新的模块spzx-cloud-model，并加入如下的依赖\",\"<!-- lombok依赖，快速生成getter和setter方法 --> <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> </dependency> \",\"2、将spzx-cloud-order微服务和spzx-cloud-user微服务中所对应的实体类抽取到spzx-cloud-model\",\"3、删除spzx-cloud-order微服务和spzx-cloud-user微服务中所定义的实体类\",\"4、在spzx-cloud-user微服务中加入如下依赖\",\"<dependency> <groupId>com.atguigu.springcloud</groupId> <artifactId>spzx-cloud-model</artifactId> <version>1.0-SNAPSHOT</version> </dependency> \",\"5、定义一个新的模块spzx-feign-api，加入如下依赖\",\"<!-- 加入fegin的依赖 --> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-openfeign</artifactId> </dependency> <!-- 实体类所对应的依赖 --> <dependency> <groupId>com.atguigu.springcloud</groupId> <artifactId>spzx-cloud-model</artifactId> <version>1.0-SNAPSHOT</version> </dependency> \",\"6、将spzx-cloud-order中编写的UserFeginClient、DefaultFeignConfiguration、DefaultFeignConfiguration都复制到spzx-feign-api项目中\",\"image-20230624113033761\",\"7、spzx-cloud-order微服务引入spzx-feign-api依赖，并且在启动类上添加feign接口的包扫描路径\",\"@SpringBootApplication @EnableFeignClients(basePackages = { \\\"com.atguigu.spzx.cloud.feign.api\\\" }) public class OrderApplication { public static void main(String[] args) { SpringApplication.run(OrderApplication.class , args) ; } } \"]},\"131\":{\"h\":\"6.Gateway组件\"},\"132\":{\"h\":\"6.1认识Gateway\",\"t\":[\"Gatway是网关组件,是SpringCloud公司研发的\",\"Gateway网关底层使用**Filter(过滤器)**对请求进行拦截 \",\"限流(拦截下来,进行分时放行)\",\"黑名单(客户端访问)\",\"统一功能处理(跨域,登录校验等)\",\"网关有多个过滤器,叫做过滤链\",\"通过网关多一层处理保障服务器安全\",\"网关架构原理\"]},\"133\":{\"h\":\"6.2三个核心概念\"},\"134\":{\"h\":\"6.2.1路由:\",\"t\":[\"不同路由访问不同内容\"]},\"135\":{\"h\":\"6.2.2断言(匹配关系):\",\"t\":[\"/api/user/**\",\"/api/user/fing/1\",\"/api/order/find/2(不能访问)\"]},\"136\":{\"h\":\"6.2.3过滤器:\",\"t\":[\"底层是过滤器,网关有很多过滤器,过滤器链.\"]},\"137\":{\"h\":\"6.3Gateway工作流程\",\"t\":[\"image-20231027093301407\",\"客户端向Spring Cloud Gateway发出请求。然后在Gateway Handler Mapping中找到与请求匹配的路由，将其发送到Gateway Web Handler.\",\"Handler再通过指定的过滤器链来将请求发送给我们实际的服务执行业务逻辑，然后返回。\",\"过滤器之间用虚线分开是因为过滤器可能会在发送代理请求之前（\\\"pre\\\"）或之后(\\\"post\\\")执行业务逻辑。\",\"Filter在\\\"pre\\\"类型的过滤器可以做参数校验、权限校验、流量监控、日志输出、协议转换等，在\\\"post\\\"类型的过滤器中可以做响应内容、响应头的修改，日志的输出，流量控制等有着非常重要的作用\"]},\"138\":{\"h\":\"6.4Gateway初体验\",\"t\":[\"下面，我们就演示下网关的基本路由功能。基本步骤如下：\",\"创建网关微服务模块\",\"配置文件\",\"创建启动类\",\"引入依赖\",\"将网关在nacos中进行注册\",\"修改配置文件\",\"重点配置\",\"在网关模块中配置文件中,配置路由信息.\",\"1、在spzx-cloud-parent下创建子模块spzx-cloud-gateway(创建网关微服务模块)\",\"image-20230721101439700\",\"2、引入如下依赖：\",\"<!--网关--> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-starter-gateway</artifactId> </dependency> <!--nacos服务发现依赖--> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> </dependency> <!-- 负载均衡组件 --> <dependency> <groupId>org.springframework.cloud</groupId> <artifactId>spring-cloud-loadbalancer</artifactId> </dependency> \",\"image-20230721092532222\",\"3、编写启动类\",\"// com.atguigu.spzx.cloud.gateway @SpringBootApplication public class GatewayApplication { public static void main(String[] args) { SpringApplication.run(GatewayApplication.class, args); } } \",\"4、在application.yml配置文件中编写基础配置和路由规则\",\"server: port: 8222 spring: application: name: spzx-cloud-gateway cloud: gateway: discovery: locator: enabled: true routes: - id: spzx-cloud-user # 路由id，可以自定义，只要唯一即可 uri: lb://spzx-cloud-user # 路由的目标地址 lb就是负载均衡，后面跟服务名称 predicates: - Path=/*/user/** # 路径匹配 - id: spzx-cloud-order uri: lb://spzx-cloud-order predicates: - Path=/*/order/** # 路径匹配 nacos: discovery: server-addr: 127.0.0.1:8848 \",\"server.port=8222 spring.application.name=spzx-cloud-gateway spring.cloud.gateway.discovery.locator.enabled=true spring.cloud.gateway.routes[0].id=spzx-cloud-user spring.cloud.gateway.routes[0].uri=lb://spzx-cloud-user spring.cloud.gateway.routes[0].predicates[0]=Path=/*/user/** spring.cloud.gateway.routes[1].id=spzx-cloud-order spring.cloud.gateway.routes[1].uri=lb://spzx-cloud-order spring.cloud.gateway.routes[1].predicates[0]=Path=/*/order/** spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848 \",\"5、重启测试\",\"重启网关，访问http://localhost:8222/api/user/findUserByUserId/1时，符合`/api/user/**`规则，\",\"请求转发到uri：http://spzx-cloud-user/api/user/findUserByUserId/1，得到了结果：\",\"image-20230624163155679\"]},\"139\":{\"h\":\"6.5Predicate的使用(路由断言工厂)\",\"t\":[\"断言工厂\",\"启动网关服务后，在控制台可以看到如下信息：\",\"image-20230721101903404\",\"思考问题：我们在配置文件中只是配置了一个访问路径的规则，怎么就可以实现路由呢?\",\"底层原理：框架底层会自动读取配置文件中的内容，然后通过制定的路由工厂将其转换成对应的判断条件，然后进行判断。在Gateway中提供了很多的路由工厂如下所示：https://docs.spring.io/spring-cloud-gateway/docs/4.0.6/reference/html/#gateway-request-predicates-factories\",\"image-20230624163811030\",\"大致有12个，每一种路由工厂的使用Spring Cloud的官网都给出了具体的示例代码，我们可以参考示例代码进行使用。以After Route Predicate\",\"Factory路由工厂举例，如下所示：\",\"spring: cloud: gateway: routes: - id: spzx-cloud-user uri: lb://spzx-cloud-user predicates: - Path=/api/user/** - After=2023-07-21T10:23:06.978038800+08:00[Asia/Shanghai] # 系统时间在2023-07-21之后才可以进行访问 \",\"//获取当前时区时间代码 ZonedDateTime zonedDateTime = ZonedDateTime.now(); System.out.println(zonedDateTime); \",\"总结\",\"Spring Cloud Gateway将路由匹配作为Spring WebFlux HandlerMapper基础框架的一部分。 Spring Cloud Gateway包括许多内置的Route Predicate工厂。所有这些Predicate都与HTTP请求的不同属性匹配。多个Route Predicate工厂可以进行组合 Spring Cloud Gateway创建Route对象时，使用RoutePredicateFactory创建Predicate对象，Predicate对象可以赋值给 Route。Spring Cloud Gateway包含许多内置的Route Predicate Factories。所有这些谓词都匹配HTTP请求的不同属性。多种谓词工厂可以组合，并通过逻辑and 。\"]},\"140\":{\"h\":\"6.6过滤器\"},\"141\":{\"h\":\"6.6.1 过滤器简介\",\"t\":[\"在gateway中要实现其他的功能：权限控制、流量监控、统一日志处理等。就需要使用到gateway中所提供的过滤器了。过滤器，可以对进入网关的请求和微服务返回的响应做处理：\",\"image-20230624164230054\"]},\"142\":{\"h\":\"6.6.2 内置过滤器\",\"t\":[\"spring gateway提供了31种不同的过滤器。\",\"官网地址：https://docs.spring.io/spring-cloud-gateway/docs/2.2.9.RELEASE/reference/html/#gatewayfilter-factories\",\"例如：\",\"名称\",\"说明\",\"AddRequestHeader\",\"给当前请求添加一个请求头\",\"RemoveRequestHeader\",\"移除请求中的一个请求头\",\"AddResponseHeader\",\"给响应结果中添加一个响应头\",\"RemoveResponseHeader\",\"从响应结果中移除有一个响应头\",\"RequestRateLimiter\",\"限制请求的流量\",\"在Gateway中提供了三种级别的类型的过滤器：\",\"1、路由过滤器：只针对当前路由有效\",\"2、默认过滤器：针对所有的路由都有效\",\"3、全局过滤器：针对所有的路由都有效，需要进行自定义\"]},\"143\":{\"h\":\"6.6.3 路由过滤器\",\"t\":[\"需求：给所有进入spzx-cloud-user的请求添加一个请求头：Truth=atguigu\",\"实现：\",\"1、修改gateway服务的application.yml文件，添加路由过滤\",\"spring: cloud: gateway: routes: - id: spzx-cloud-user uri: lb://spzx-cloud-user predicates: - Path=/api/user/** filters: - AddRequestHeader=Truth, daimakuai # 配置路由基本的过滤器，给访问user微服务的所有接口添加Truth请求头 \",\"当前过滤器写在spzx-cloud-user路由下，因此仅仅对访问spzx-cloud-user的请求有效。\",\"2、在spzx-cloud-user的接口方法中读取请求头数据，进行测试\",\"@GetMapping(value = \\\"/findUserByUserId/{userId}\\\") public User findUserByUserId(@PathVariable(value = \\\"userId\\\") Long userId , @RequestHeader(name = \\\"Truth\\\")String header) { log.info(\\\"UserController...findUserByUserId方法执行了... ,header: {} \\\" , header); return userService.findUserByUserId(userId) ; } \"]},\"144\":{\"h\":\"6.6.4 默认过滤器\",\"t\":[\"如果要对所有的路由都生效，则可以将过滤器工厂写到default下。格式如下：\",\"spring: cloud: gateway: routes: - id: spzx-cloud-user uri: lb://spzx-cloud-user predicates: - Path=/api/user/** - After=2017-01-20T17:42:47.789-07:00[America/Denver] default-filters: - AddRequestHeader=Truth, daimakuai is good \"]},\"145\":{\"h\":\"6.6.5 全局过滤器\",\"t\":[\"概述\",\"**上述的过滤器是gateway中提供的默认的过滤器，每一个过滤器的功能都是固定的。**但是如果我们希望拦截请求，做自己的业务逻辑，默认的过滤器就没办法实现。此时就需求使用全局过滤器，全局过滤器的作用也是处理一切进入网关的请求和微服务响应，与GatewayFilter的作用一样。区别在于GatewayFilter通过配置定义，处理逻辑是固定的；而GlobalFilter的逻辑需要自己写代码实现。\",\"需求：定义全局过滤器，拦截请求，判断请求的参数是否满足下面条件：\",\"请求参数中是否有username，如果同时满足则放行，否则拦截\",\"步骤分析：\",\"定义一个类实现GlobalFilter接口❓全局过滤器接口\",\"重写filter方法\",\"将该类纳入到spring容器中\",\"实现Ordered接口定义该过滤器的顺序❓过滤器顺接口\",\"实现globleFilter里面的方法,然后进行放行操作\",\"实现getOrder方法,实现过滤器排序\",\"实现代码：判断请求路径中第一个参数是否是username,如果是正常访问,如果不是就不能正常访问\",\"具体\",\"@Component//类交给Spring进行管理 public class AuthorizationFilter implements GlobalFilter, Ordered {//实现来年两个接口 //实现过滤器逻辑 @Override public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) { //获取请求路径中参数,判断参数是否是username,如果是放行,如果不是不能访问,就不放行 //参数中exchage:通过这个可以获得request对象 //参数中chain: //方法getQueryParams()会返回一个Map对象,保存参数的信息,参数名是可以,参数值是value //遍历map,获取所有的key根据key进行遍历 String username = exchange.getRequest().getQueryParams().getFirst(\\\"username\\\"); if(!StringUtils.hasText(username)){ //设置响应状态码 exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED); return exchange.getResponse().setComplete(); } return chain.filter(exchange); } //定义该过滤器的优先级 @Override public int getOrder() { return 0; } } \"]},\"146\":{\"h\":\"6.6.6 过滤器执行顺序\",\"t\":[\"请求进入网关会碰到三类过滤器：当前路由的过滤器、DefaultFilter、GlobalFilter\",\"请求路由后，会将当前路由过滤器和DefaultFilter、GlobalFilter，合并到一个过滤器链（集合）中，排序后依次执行每个过滤器：\",\"image-20230624170925571\",\"排序的规则是什么呢？\",\"1、按照order的值进行排序，order的值越小，优先级越高，执行顺序越靠前。\",\"2、路由过滤器和默认过滤器会按照order的值进行排序，这个值由spring进行指定，默认是按照声明顺序从1递增\",\"3、当过滤器的order值一样时，会按照 globalFilter > defaultFilter > 路由过滤器的顺序执行\",\"核心源码分析：org.springframework.cloud.gateway.handler.FilteringWebHandler#handle方法会加载全局过滤器，与前面的过滤器合并后根据order排序，组织过滤器链\",\"public Mono<Void> handle(ServerWebExchange exchange) { Route route = (Route)exchange.getRequiredAttribute(ServerWebExchangeUtils.GATEWAY_ROUTE_ATTR); // 获取路由级别的过滤器和默认过滤器的集合 List<GatewayFilter> gatewayFilters = route.getFilters(); // 获取全局过滤器的集合 List<GatewayFilter> combined = new ArrayList(this.globalFilters); // 将取路由级别的过滤器和默认过滤器的集合中的元素添加到全局过滤器的集合中 combined.addAll(gatewayFilters); // 进行排序 AnnotationAwareOrderComparator.sort(combined); if (logger.isDebugEnabled()) { logger.debug(\\\"Sorted gatewayFilterFactories: \\\" + combined); } // 调用过滤器链中的filter方法 return (new DefaultGatewayFilterChain(combined)).filter(exchange); } \"]},\"147\":{\"h\":\"7.Nacos配置中心\",\"t\":[\"Nacos除了可以做注册中心，同样可以做配置管理来使用。\",\"把多个为服务模块中相同配置,配置到配置中心中,所有模块读取配置中心中的内容.\",\"注册中心\",\"配置中心\"]},\"148\":{\"h\":\"7.1 统一配置管理\",\"t\":[\"相同配置部分进行抽取.\",\"当微服务部署的实例越来越多，达到数十、数百时，逐个修改微服务配置就显得十分的不方便，而且很容易出错。我们需要一种统一配置管理方案，可以集中管理所有实例的配置。\",\"image-20230624171403235\",\"nacos一方面可以将配置集中管理，另一方可以在配置变更时，及时通知微服务，实现配置的热更新。\"]},\"149\":{\"h\":\"7.2 Nacos入门\"},\"150\":{\"h\":\"7.2.1 Nacos中添加配置\",\"t\":[\"在Nacos服务端创建一个配置，如下所示：\",\"image-20230624171530387\",\"然后在弹出的表单中，填写配置信息：\",\"image-20210714164856664\"]},\"151\":{\"h\":\"7.2.2 微服务集成配置中心\",\"t\":[\"微服务需要进行改造，从Nacos配置中心中获取配置信息进行使用。\",\"步骤：\",\"1、在spzx-cloud-user微服务中，引入spring-cloud-starter-alibaba-nacos-config依赖\",\"<!-- nacos作为配置中心时所对应的依赖 --> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId> </dependency> \",\"2、在spzx-cloud-user项目的 /src/main/resources/application.yml 配置文件中配置 Nacos Config 地址并引入服务配置\",\"# 配置数据库的连接信息 spring: cloud: nacos: config: server-addr: 192.168.136.142:8848 config: import: - nacos:spzx-cloud-user-dev.yml \"]},\"152\":{\"h\":\"7.2.3 读取自定义配置\"},\"153\":{\"h\":\"@Value\",\"t\":[\"通过@Value注解读取自定义配置，如下所示：\",\"@RestController @RequestMapping(value = \\\"/api/user\\\") @Slf4j public class UserController { @Autowired private UserService userService ; @Value(\\\"${pattern.dateformat}\\\") private String pattern ; @GetMapping(value = \\\"/findUserByUserId/{userId}\\\") public User findUserByUserId(@PathVariable(value = \\\"userId\\\") Long userId , @RequestHeader(name = \\\"Truth\\\")String header) { log.info(\\\"UserController...findUserByUserId方法执行了... ,header: {} , dateformat: {} \\\" , header , pattern); return userService.findUserByUserId(userId) ; } } \"]},\"154\":{\"h\":\"@ConfigurationProperties\",\"t\":[\"也可以通过实体类，配合@ConfigurationProperties注解读取自定义配置，代码如下所示：\",\"1、定义一个实体类，代码如下所示：\",\"@Data @ConfigurationProperties(prefix = \\\"pattern\\\") public class PatternProperties { private String dateformat ; } \",\"2、在启动类上添加@EnableConfigurationProperties注解，如下所示：\",\"@SpringBootApplication @EnableConfigurationProperties(value = { PatternProperties.class }) public class UserApplication { public static void main(String[] args) { SpringApplication.run(UserApplication.class , args) ; } } \",\"3、使用该实体类，代码如下所示：\",\"@RestController @RequestMapping(value = \\\"/api/user\\\") @Slf4j public class UserController { @Autowired private UserService userService ; @Value(\\\"${pattern.dateformat}\\\") private String pattern ; @Autowired // 注入实体类 private PatternProperties patternProperties ; @GetMapping(value = \\\"/findUserByUserId/{userId}\\\") public User findUserByUserId(@PathVariable(value = \\\"userId\\\") Long userId , @RequestHeader(name = \\\"Truth\\\")String header) { log.info(\\\"UserController...findUserByUserId方法执行了... ,header: {} , dateformat: {} \\\" , header , patternProperties.getDateformat()); return userService.findUserByUserId(userId) ; } } \"]},\"155\":{\"h\":\"7.3 配置热更新\",\"t\":[\"⭐我们最终的目的，是修改Nacos中的配置后，微服务中无需重启即可让配置生效，也就是配置热更新。实现配置的热更新有两种方式：\",\"方式一：在@Value注入的变量所在类上添加注解**@RefreshScope**\",\"image-20230624200928589\",\"方式二：通过实体类，配合@ConfigurationProperties注解读取配置信息，自动支持热更新\"]},\"156\":{\"h\":\"7.4 配置优先级\",\"t\":[\"思考问题：如果在application.yml文件中和Nacos配置中心中都定义了相同的配置内容，那么哪一个配置的优先级较高呢?\",\"优先级顺序：Nacos配置中心的配置(后导入的配置 > 先导入的配置) > application.yml\"]},\"157\":{\"h\":\"8.Sentinel部分\"},\"158\":{\"h\":\"8.1 初识sentinel\"},\"159\":{\"h\":\"8.1.1 雪崩效应\",\"t\":[\"概述：在微服务系统架构中，服务间调用关系错综复杂，一个微服务往往依赖于多个其它微服务。一个服务的不可用导致整个系统的不可用的现象就被称之为雪崩效应。\",\"雪崩原理\",\"如下图所示：\",\"image-20230624203044831\",\"当服务D出现了问题了以后，调用服务D的服务A的线程就得不到及时的释放，在高并发情况下，随着时间的不断推移服务A的系统资源会被线程耗尽，最终导致服务A出现了问题，同理就会导致其他的服务也不能进行访问了。\"]},\"160\":{\"h\":\"8.1.2 解决方案\"},\"161\":{\"h\":\"超时处理\",\"t\":[\"超时处理：设定超时时间，请求超过一定时间没有响应就返回错误信息，不会无休止等待\",\"称为:服务降级\",\"image-20230624203153340\",\"超时处理原理\"]},\"162\":{\"h\":\"隔离处理\",\"t\":[\"隔离处理：将错误隔离在可控的范围之内，不要让其影响到其他的程序的运行。\",\"这种设计思想，来源于船舱的设计，如下图所示：\",\"image-20230624203222353\",\"船舱都会被隔板分离为多个独立空间，当船体破损时，只会导致部分空间进入，将故障控制在一定范围内，避免整个船体都被淹没。于此类似，我们业务系统也可以使用这种思想来防止出现雪崩效应，常见的隔离方式：线程隔离\",\"image-20230624203256590\"]},\"163\":{\"h\":\"熔断处理\",\"t\":[\"类似于保险丝,电压过高会进行熔断.熔断是在降级的基础之上发生的.\",\"熔断处理：由断路器统计业务执行的异常比例，如果超出阈值则会熔断该业务，拦截访问该业务的一切请求。\",\"断路器会统计访问某个服务的请求数量，异常比例如下所示：\",\"熔断是在降级的基础上发生的\",\"⭐设置远程调用的超时时间.如果只做降级处理,都只会发送兜底数据,我们需要做熔断操作,1调用2,多次调用都是失败,不再调用执行熔断,1调用2直接返回兜底数据.\",\"制定一个规则,十次调用中有五次是调用失败,我们就会执行熔断\",\"特点:提高很高的数据,熔断不可以无限,熔断需要设置时长,熔断五秒,超过五秒之后,会继续进行访问.这就是熔断的机制.\",\"image-20230624203334370\",\"请求了三次，两次出现异常，一次成功。当发现访问服务D的请求异常比例过高时，认为服务D有导致雪崩的风险，会拦截访问服务D的一切请求，形成熔断：\",\"image-20230624203409785\",\"触发熔断了以后，当在访问服务A的时候，就不会在通过服务A去访问服务D了，立马给用户进行返回，返回的是一种默认值，这种返回就是一种兜底方案。这种兜底方案也将其称之为降级逻辑。\"]},\"164\":{\"h\":\"流量控制\",\"t\":[\"流量控制原理图\",\"流量控制：限制业务访问的QPS(每秒的请求数)，避免服务因流量的突增而故障。\",\"设置等待时间,时间过了就会返回兜底信息.\",\"服务器在压力过大的情况下会发生宕机,所以我们对流量进行控制\",\"image-20230624203508014\",\"限流是一种预防措施，避免因瞬间高并发流量而导致服务故障，进而避免雪崩。其他的处理方式是一种补救措施，在部分服务故障时，将故障控制在一定范围，避免雪崩。\"]},\"165\":{\"h\":\"最终的目的\",\"t\":[\"保护服务器,防止宕机\"]},\"166\":{\"h\":\"QPS:query per seconds\",\"t\":[\"服务器每秒能处理的请求数量,衡量服务器的吞吐量\"]},\"167\":{\"h\":\"阈值\",\"t\":[\"临界值,比如服务器的qps是5,每秒处理5个请求,这个就叫做阈值.\"]},\"168\":{\"h\":\"8.1.3 sentinel介绍\",\"t\":[\"⭐:分为两部分:\",\"第一部分:核心库(java客户端)使用java代码能实现sentinel使用\",\"第二部分:控制台,图形化界面,通过界面配置sentinel的控制\",\"官网地址：https://sentinelguard.io/zh-cn/\",\"随着微服务的流行，服务和服务之间的稳定性变得越来越重要。Sentinel 以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。\",\"Sentinel 的历史：\",\"- 2012 年，Sentinel 诞生，主要功能为入口流量控制。\",\"- 2013-2017 年，Sentinel 在阿里巴巴集团内部迅速发展，成为基础技术模块，覆盖了所有的核心场景。Sentinel 也因此积累了大量的流量归整场景以及生产实践。\",\"- 2018 年，Sentinel 开源，并持续演进。\",\"- 2019 年，Sentinel 朝着多语言扩展的方向不断探索，推出 C++ 原生版本，同时针对 Service Mesh 场景也推出了 Envoy 集群流量控制支持，以解决 Service Mesh 架构下多语言限流的问题。\",\"- 2020 年，推出 Sentinel Go 版本，继续朝着云原生方向演进。\",\"Sentinel 分为两个部分:\",\"- 核心库（Java 客户端）不依赖任何框架/库，能够运行于所有 Java 运行时环境，同时对 Dubbo / Spring Cloud 等框架也有较好的支持。\",\"- 控制台（Dashboard）基于 Spring Boot 开发，打包后可以直接运行，不需要额外的 Tomcat 等应用容器。\",\"image-20230624203655208\",\"具有的特征:\",\"image-20230624203730680\"]},\"169\":{\"h\":\"8.2 sentinel入门\"},\"170\":{\"h\":\"8.2.1 下载sentinel控制台\",\"t\":[\"sentinel管理后台下载地址：https://github.com/alibaba/Sentinel/releases\",\"image-20230624215112184\",\"下载完毕以后就会得到一个jar包\",\"image-20230624215403344\"]},\"171\":{\"h\":\"8.2.2 启动sentinel\",\"t\":[\"将jar包放到任意非中文目录，执行命令：\",\"java -jar sentinel-dashboard-2.0.0-alpha-preview.jar \",\"如果要修改Sentinel的默认端口、账户、密码，可以通过下列配置：\",\"配置项\",\"默认值\",\"说明\",\"server.port\",\"8080\",\"服务端口\",\"sentinel.dashboard.auth.username\",\"sentinel\",\"默认用户名\",\"sentinel.dashboard.auth.password\",\"sentinel\",\"默认密码\",\"例如，修改端口：\",\"java -Dserver.port=8090 -jar sentinel-dashboard-2.0.0-alpha-preview.jar \"]},\"172\":{\"h\":\"8.2.3 访问sentinel\",\"t\":[\"访问http://localhost:8080页面，就可以看到sentinel的控制台了：\",\"image-20230624215635555\",\"需要输入账号和密码，默认都是：sentinel\",\"登录后，发现一片空白，什么都没有：因为还没有监控任何服务。另外，sentinel是懒加载的，如果服务没有访问，看不到该服务信息。\",\"image-20230624215704921\"]},\"173\":{\"h\":\"8.2.4 整合sentinel\",\"t\":[\"我们在spzx-cloud-user中整合sentinel，并连接sentinel的控制台，步骤如下：\",\"1、引入sentinel依赖\",\"<!--sentinel--> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId> </dependency> \",\"2、配置控制台\",\"修改application.yaml文件，添加下面内容\",\"spring: cloud: sentinel: transport: dashboard: localhost:8080 # 配置sentinel控制台地址 \",\"3、访问spzx-cloud-user的任意接口\",\"打开浏览器，访问http://localhost:10100/api/user/findUserByUserId/1，这样才能触发sentinel的监控。然后再访问sentinel的控制台，查看效果：\",\"image-20230624220303385\"]},\"174\":{\"h\":\"8.3 流量控制\",\"t\":[\"雪崩问题虽然有四种方案，但是限流是避免服务因突发的流量而发生故障，是对微服务雪崩问题的预防。我们先学习这种模式。\"]},\"175\":{\"h\":\"8.3.1 相关概念\",\"t\":[\"簇点链路：当请求进入微服务时，首先会访问DispatcherServlet，然后进入Controller、Service、Mapper，这样的一个调用链就叫做簇点链路。\",\"资源：簇点链路中被监控的每一个接口就是一个资源，流控、熔断等都是针对簇点链路中的资源来设置的。\",\"默认情况下sentinel会监控spring mvc的每一个端点（Endpoint，也就是controller中的方法），因此spring mvc的每一个端点就是调用链路中的一个资源。\",\"例如，我们刚才访问的spzx-cloud-user中的UserController中的端点：/api/user/findUserByUserId/\",\"image-20230624220603571\",\"我们可以点击对应资源后面的按钮来设置规则：\",\"1、流控：流量控制\",\"2、降级：降级熔断\",\"3、热点：热点参数限流，是限流的一种\",\"4、授权：请求的权限控制\"]},\"176\":{\"h\":\"8.3.2 快速入门\",\"t\":[\"需求：给 /api/user/findUserByUserId/{userId}这个资源设置流控规则，QPS不能超过 5，然后测试。\",\"步骤：\",\"1、首先在sentinel控制台添加限流规则\",\"image-20230628090407483\",\"2、利用jmeter测试(模拟并发请求)\",\"Apache JMeter 是 Apache 组织基于 Java 开发的压力测试工具，用于对软件做压力测试。\",\"下载地址：https://archive.apache.org/dist/jmeter/binaries/\",\"课前资料提供了编写好的Jmeter测试样例\",\"image-20230628115300889\",\"通过如下命令打开jmeter\",\"java -jar ApacheJMeter.jar \",\"导入课前资料提供的测试样例\",\"image-20220320111824238\",\"选择流控入门\",\"image-20220320111955904\",\"10个线程，1秒内运行完，QPS是10，超过了5。\",\"选中流控入门，QPS<5右键运行\",\"image-20220320112040803\",\"注意：不要点击菜单中的执行按钮来运行。\",\"点击查看结果树，理想的请求执行结果应该如下所示：\",\"image-20220320112142379\",\"可以看到，成功的请求每次只有5个。\",\"注意：如果测试结果不是上述情况，那是因为sentinel在统计请求的时候，把一部分的请求统计到了下一秒中导致的。\"]},\"177\":{\"h\":\"8.3.3 流控模式\"},\"178\":{\"h\":\"流控模式简介\",\"t\":[\"在添加限流规则时，点击高级选项，可以选择三种流控模式：\",\"1、直接：统计当前资源的请求，触发阈值时对当前资源直接限流，也是默认的模式\",\"2、关联：统计与当前资源相关的另一个资源，触发阈值时，对当前资源限流\",\"3、链路：统计从指定链路访问到本资源的请求，触发阈值时，对指定链路限流\",\"理解\",\"如下所示：\",\"image-20230628091856122\",\"快速入门测试的就是直接模式。\"]},\"179\":{\"h\":\"关联模式\",\"t\":[\"A关联B,设置阈值1,访问B时候超过阈值,B不限流,对A进行限流\",\"image-20231027163806970\",\"关联模式：统计与当前资源相关的另一个资源，触发阈值时，对当前资源限流\",\"配置方式：\",\"image-20230628092034118\",\"**语法说明：**对/api/user/updateUserById资源的请求进行统计，当访问流量超过阈值时，就对/api/user/findUserByUserId/{userId}进行限流，避免影响/api/user/updateUserById资源。\",\"使用场景：比如用户支付时需要修改订单状态，同时用户要查询订单。查询和修改操作会争抢数据库锁，产生竞争。业务需求是优先支付和更新订单的业务，因此当修改订单业务触发阈值时，需要对查询订单业务限流。\",\"案例实现：\",\"1、在UserController新建一个端点：/api/user/updateUserById，无需实现业务\",\"// 修改用户数据端点 @GetMapping(value = \\\"/updateUserById\\\") public String updateUserById() { return \\\"修改用户数据成功\\\"; } \",\"2、重启服务，访问对应的端点，让其产生簇点链路\",\"image-20230628092515666\",\"3、配置流控规则，当/api/user/updateUserById资源被访问的QPS超过5时，对/api/user/findUserByUserId/1请求限流。对哪个端点限流，就点击哪个端点后面的按钮。我们是对用户查询/api/user/findUserByUserId/1限流，因此点击它后面的按钮：\",\"image-20230628092751648\",\"4、在Jmeter中进行测试\",\"选择《流控模式-关联》：\",\"image-20220320114459422\",\"可以看到1000个线程，100秒，因此QPS为10，超过了我们设定的阈值：5\",\"查看http请求：\",\"image-20230628093126793\",\"请求的目标是/api/user/updateUserById，这样这个端点就会触发阈值。但限流的目标是/api/user/findUserByUserId/1，我们在浏览器访问，可以发现：\",\"image-20230628093300378\",\"确实被限流了。\",\"关联流控模式的使用场景：\",\"1、两个有竞争关系的资源\",\"2、一个优先级较高，一个优先级较低\",\"对高优先级的资源的流量进行统计，当超过阈值对低优先级的资源进行限流。\"]},\"180\":{\"h\":\"链路模式\",\"t\":[\"image-20231027163905542\",\"链路模式：只针对从指定链路访问到本资源的请求做统计，判断是否超过阈值，如果超过阈值对从该链路请求进行限流。\",\"配置方式：\",\"1、/api/user/save --> users\",\"2、/api/user/query --> users\",\"如果只希望统计从/api/user/query进入到users的请求，并进行限流操作，则可以这样配置：\",\"image-20230628095013326\",\"案例实现：\",\"1、在UserService中添加一个queryUsers方法，不用实现业务\",\"public void queryUsers(){ System.err.println(\\\"查询用户\\\"); } \",\"2、在UserController中，添加两个端点，在这两个端点中分别调用UserService中的queryUsers方法\",\"@GetMapping(value = \\\"/save\\\") public String save() { userService.queryUsers(); System.out.println(\\\"保存用户\\\"); return \\\"订单保存成功\\\" ; } @GetMapping(value = \\\"/query\\\") public String query() { userService.queryUsers(); System.out.println(\\\"查询用户\\\"); return \\\"查询用户成功\\\" ; } \",\"4、通过**@SentinelResource**标记UserService中的queryUsers方法为一个sentinel监控的资源(默认情况下，sentinel只监控controller方法)\",\"@SentinelResource(\\\"users\\\") public void queryUsers(){ System.err.println(\\\"查询用户\\\"); } \",\"5、更改application.yml文件中的sentinel配置\",\"链路模式中，是对不同来源的两个链路做监控。但是sentinel默认会给进入spring mvc的所有请求设置同一个root资源，会导致链路模式失效。因此需要关闭这种资源整合。\",\"spring: cloud: sentinel: web-context-unify: false # 关闭context整合 \",\"6、重启服务，访问/api/user/save和/api/user/query，可以查看到sentinel的簇点链路规则中，出现了新的资源\",\"image-20230628094306219\",\"7、添加流控规则\",\"点击users资源后面的流控按钮，在弹出的表单中填写下面信息：\",\"image-20230628094433574\",\"只统计从/api/user/query进入/users的资源，QPS阈值为2，超出则被限流。\",\"8、jmeter测试\",\"选择《流控模式-链路》\",\"image-20220320150559229\",\"可以看到这里200个线程，50秒内发完，QPS为4，超过了我们设定的阈值2。\",\"一个http请求是访问/api/user/save\",\"image-20230628094648097\",\"另一个是访问/api/user/query\",\"image-20230628094713655\",\"运行测试，察看结果树：\",\"访问/api/user/save,没有进行限流\",\"image-20230628094814795\",\"访问/api/user/query,进行限流了\",\"image-20230628094857374\"]},\"181\":{\"h\":\"8.3.4 流控效果\",\"t\":[\"在流控的高级选项中，还有一个流控效果选项\",\"image-20230628095109686\",\"流控效果是指请求达到流控阈值时应该采取的措施，包括三种：\",\"1、快速失败：达到阈值后，新的请求会被立即拒绝并抛出FlowException异常，是默认的处理方式\",\"2、warm up：预热模式，对超出阈值的请求同样是拒绝并抛出异常，但这种模式阈值会动态变化，从一个较小值逐渐增加到最大阈值\",\"3、排队等待：让所有的请求按照先后次序进入到一个队列中进行排队，当某一个请求最大的预期等待时间超过了所设定的超时时间时同样是拒绝并抛出异常\"]},\"182\":{\"h\":\"warm up\",\"t\":[\"阈值一般是一个微服务能承担的最大QPS，但是一个服务刚刚启动时，一切资源尚未初始化（冷启动），如果直接将QPS跑到最大值，可能导致服务瞬间宕机。\",\"warm up也叫预热模式，是应对服务冷启动的一种方案。阈值会动态变化，从一个较小值逐渐增加到最大阈值。\",\"工作特点：请求阈值初始值是 maxThreshold / coldFactor, 持续指定时长(预热时间)后，逐渐提高到maxThreshold值，而coldFactor的默认值是3。\",\"例如，我设置QPS的maxThreshold为10，预热时间为5秒，那么初始阈值就是 10 / 3 ，也就是3，然后在5秒后逐渐增长到10。\",\"image-20220320152944101\",\"案例需求：给/api/user/findUserByUserId/{userId}这个资源设置限流，最大QPS为10，利用warm up效果，预热时长为5秒\",\"1、配置流控规则\",\"image-20230628095505037\",\"2、jmeter测试\",\"选择《流控效果，warm up》\",\"image-20220320153409220\",\"QPS为10\",\"刚刚启动时，大部分请求失败，成功的只有3个，说明QPS被限定在3：\",\"image-20220320153522505\",\"随着时间推移，成功比例越来越高\",\"image-20220320153646510\",\"到sentinel控制台查看实时监控\",\"image-20230628095925921\"]},\"183\":{\"h\":\"排队等待\",\"t\":[\"排队等待：让所有的请求按照先后次序进入到一个队列中进行排队，当某一个请求最大的预期等待时间超过了所设定的超时时间时同样是拒绝并抛出异常\",\"例如：QPS = 5，意味着每200ms处理一个队列中的请求；timeout = 2000，意味着预期等待时长超过2000ms的请求会被拒绝并抛出异常。\",\"那什么叫做预期等待时长呢？\",\"比如现在一下子来了12 个请求，因为每200ms执行一个请求，那么：\",\"1、第6个请求的预期等待时长 = 200 * （6 - 1） = 1000ms\",\"2、第12个请求的预期等待时长 = 200 * （12-1） = 2200ms\",\"现在，第1秒同时接收到10个请求，但第2秒只有1个请求，此时QPS的曲线这样的：\",\"image-20230628100019712\",\"如果使用队列模式做流控，所有进入的请求都要排队，以固定的200ms的间隔执行，QPS会变的很平滑\",\"image-20230628100049968\",\"平滑的QPS曲线，对于服务器来说是更友好的。\",\"案例需求：给/api/user/findUserByUserId/{userId}这个资源设置限流，最大QPS为10，利用排队的流控效果，超时时长设置为5s\",\"1、添加流控规则\",\"image-20230628100313331\",\"2、jmeter测试\",\"image-20220320154801992\",\"QPS为15，已经超过了我们设定的10。\",\"运行测试用例，察看结果树：\",\"image-20220320155103019\",\"全部都通过了。\",\"再去sentinel查看实时监控的QPS曲线\",\"image-20220320155202523\",\"QPS非常平滑，一致保持在10，但是超出的请求没有被拒绝，而是放入队列。因此响应时间（等待时间）会越来越长。\"]},\"184\":{\"h\":\"8.3.5 热点参数限流\"},\"185\":{\"h\":\"配置介绍\",\"t\":[\"之前的限流是统计访问某个资源的所有请求，判断是否超过QPS阈值。而热点参数限流是分别统计参数值相同的请求，判断是否超过QPS阈值。\",\"例如，一个根据id查询商品的接口：\",\"image-20230628100914491\",\"访问/goods/{id}的请求中，id参数值会有变化，热点参数限流会根据参数值分别统计QPS，统计结果：\",\"image-20230628101012945\",\"当id=1的请求触发阈值被限流时，id值不为1的请求不受影响。\",\"配置方式(点击资源中的热点按钮)：\",\"image-20230628101216576\",\"代表的含义是：对hot这个资源的0号参数（第一个参数）做统计，每1秒相同参数值的请求数不能超过2。这种配置是对查询商品这个接口的所有商品一视同仁，QPS都限定为5。而在实际开发中，可能部分商品是热点商品，例如秒杀商品，我们希望这部分商品的QPS限制与其它商品不一样，高一些。那就需要配置热点参数限流的高级选项了：\",\"image-20230628101331468\"]},\"186\":{\"h\":\"案例演示\",\"t\":[\"案例需求：给/api/user/findUserByUserId/{userId}这个资源添加热点参数限流，规则如下：\",\"1、默认的热点参数规则是每1秒请求量不超过2\",\"2、给2这个参数设置例外：每1秒请求量不超过4\",\"3、给3这个参数设置例外：每1秒请求量不超过10\",\"注意事项：热点参数限流对默认的spring mvc资源无效，需要利用@SentinelResource注解标记资源\",\"实现步骤：\",\"1、标记资源\",\"给UserController中的/api/user/findUserByUserId/{userId}资源添加注解：\",\"@SentinelResource(\\\"hot\\\") // 声明资源名称 @GetMapping(value = \\\"/findUserByUserId/{userId}\\\") public User findUserByUserId(@PathVariable(value = \\\"userId\\\") Long userId , @RequestHeader(name = \\\"Truth\\\" , required = false)String header) { log.info(\\\"UserController...findUserByUserId方法执行了... ,header: {} , dateformat: {} \\\" , header , patternProperties.getDateformat()); return userService.findUserByUserId(userId) ; } \",\"2、热点参数限流规则\",\"访问该接口，可以看到我们标记的hot资源出现了\",\"image-20230628101715773\",\"这里不要点击hot后面的按钮，页面有BUG\",\"点击左侧菜单中热点规则菜单：\",\"image-20230628102031276\",\"3、jmeter测试\",\"选择《热点参数限流 QPS1》\",\"image-20220320162420189\",\"这里发起请求的QPS为5。\",\"包含三个请求，参数分别为：101 ， 102 ， 103，运行测试程序，察看结果树：\",\"101\",\"102\",\"103\"]},\"187\":{\"c\":[\"Spring基础\"]},\"188\":{\"c\":[\"Markdown\"]},\"189\":{\"h\":\"Baz\",\"t\":[\"功能详情...\"]},\"190\":{\"h\":\"Bar 功能\"},\"191\":{\"h\":\"介绍\",\"t\":[\"我们支持 bar 功能，...\"]},\"192\":{\"h\":\"详情\",\"t\":[\"baz\",\"...\"]},\"193\":{\"h\":\"Ray\",\"t\":[\"功能详情...\"]},\"194\":{\"h\":\"Foo 功能\"},\"195\":{\"h\":\"介绍\",\"t\":[\"我们支持 foo 功能，...\"]},\"196\":{\"h\":\"详情\",\"t\":[\"ray\",\"...\"]}},\"dirtCount\":0,\"index\":[[\"详情\",{\"0\":{\"192\":1,\"196\":1}}],[\"详情容器\",{\"1\":{\"52\":1}}],[\"声明资源名称\",{\"1\":{\"186\":1}}],[\"声明当前接口是一个访问user\",{\"1\":{\"123\":1}}],[\"规则如下\",{\"1\":{\"186\":1}}],[\"高一些\",{\"1\":{\"185\":1}}],[\"高效性强\",{\"1\":{\"83\":1}}],[\"做统计\",{\"1\":{\"185\":1}}],[\"做自己的业务逻辑\",{\"1\":{\"145\":1}}],[\"代表的含义是\",{\"1\":{\"185\":1}}],[\"代码如下所示\",{\"1\":{\"120\":1,\"154\":3}}],[\"代码实现\",{\"1\":{\"102\":1,\"130\":1}}],[\"代码混乱\",{\"1\":{\"82\":1}}],[\"代码块\",{\"0\":{\"53\":1}}],[\"代码块会自动高亮\",{\"1\":{\"8\":1}}],[\"代码\",{\"0\":{\"32\":1},\"1\":{\"52\":1}}],[\"之前的限流是统计访问某个资源的所有请求\",{\"1\":{\"185\":1}}],[\"再去sentinel查看实时监控的qps曲线\",{\"1\":{\"183\":1}}],[\"再次点击即可缩小\",{\"1\":{\"38\":1}}],[\"已经超过了我们设定的10\",{\"1\":{\"183\":1}}],[\"平滑的qps曲线\",{\"1\":{\"183\":1}}],[\"平均负担压力\",{\"1\":{\"83\":1}}],[\"现在\",{\"1\":{\"183\":1}}],[\"现有代码缺点\",{\"1\":{\"130\":1}}],[\"个请求\",{\"1\":{\"183\":1}}],[\"意味着预期等待时长超过2000ms的请求会被拒绝并抛出异常\",{\"1\":{\"183\":1}}],[\"意味着每200ms处理一个队列中的请求\",{\"1\":{\"183\":1}}],[\"到sentinel控制台查看实时监控\",{\"1\":{\"182\":1}}],[\"大部分请求失败\",{\"1\":{\"182\":1}}],[\"大致有12个\",{\"1\":{\"139\":1}}],[\"刚刚启动时\",{\"1\":{\"182\":1}}],[\"利用排队的流控效果\",{\"1\":{\"183\":1}}],[\"利用warm\",{\"1\":{\"182\":1}}],[\"利用jmeter测试\",{\"1\":{\"176\":1}}],[\"案例演示\",{\"0\":{\"186\":1}}],[\"案例需求\",{\"1\":{\"182\":1,\"183\":1,\"186\":1}}],[\"案例实现\",{\"1\":{\"179\":1,\"180\":1}}],[\"逐渐提高到maxthreshold值\",{\"1\":{\"182\":1}}],[\"逐个修改微服务配置就显得十分的不方便\",{\"1\":{\"148\":1}}],[\"持续指定时长\",{\"1\":{\"182\":1}}],[\"工作特点\",{\"1\":{\"182\":1}}],[\"工作流程\",{\"1\":{\"95\":1}}],[\"冷启动\",{\"1\":{\"182\":1}}],[\"排队等待\",{\"0\":{\"183\":1},\"1\":{\"181\":1,\"183\":1}}],[\"排序的规则是什么呢\",{\"1\":{\"146\":1}}],[\"排序后依次执行每个过滤器\",{\"1\":{\"146\":1}}],[\"预热时长为5秒\",{\"1\":{\"182\":1}}],[\"预热时间为5秒\",{\"1\":{\"182\":1}}],[\"预热时间\",{\"1\":{\"182\":1}}],[\"预热模式\",{\"1\":{\"181\":1}}],[\"预览模式\",{\"0\":{\"34\":1}}],[\"warm\",{\"0\":{\"182\":1},\"1\":{\"181\":1,\"182\":2}}],[\"webflux\",{\"1\":{\"139\":1}}],[\"web\",{\"1\":{\"137\":1,\"180\":1}}],[\"web<\",{\"1\":{\"90\":1}}],[\"weight\",{\"1\":{\"109\":1}}],[\"新的请求会被立即拒绝并抛出flowexception异常\",{\"1\":{\"181\":1}}],[\"达到阈值后\",{\"1\":{\"181\":1}}],[\"达到数十\",{\"1\":{\"148\":1}}],[\"还有一个流控效果选项\",{\"1\":{\"181\":1}}],[\"还不会编写\",{\"1\":{\"47\":1}}],[\"没有进行限流\",{\"1\":{\"180\":1}}],[\"察看结果树\",{\"1\":{\"180\":1,\"183\":1,\"186\":1}}],[\"运行测试程序\",{\"1\":{\"186\":1}}],[\"运行测试用例\",{\"1\":{\"183\":1}}],[\"运行测试\",{\"1\":{\"180\":1}}],[\"运行时环境\",{\"1\":{\"168\":1}}],[\"出现了新的资源\",{\"1\":{\"180\":1}}],[\"订单保存成功\",{\"1\":{\"180\":1}}],[\"两个有竞争关系的资源\",{\"1\":{\"179\":1}}],[\"两次出现异常\",{\"1\":{\"163\":1}}],[\"确实被限流了\",{\"1\":{\"179\":1}}],[\"无需实现业务\",{\"1\":{\"179\":1}}],[\"无需自己使用resttemplate来发送了\",{\"1\":{\"123\":1}}],[\"业务需求是优先支付和更新订单的业务\",{\"1\":{\"179\":1}}],[\"产生竞争\",{\"1\":{\"179\":1}}],[\"查询用户成功\",{\"1\":{\"180\":1}}],[\"查询用户\",{\"1\":{\"180\":3}}],[\"查询和修改操作会争抢数据库锁\",{\"1\":{\"179\":1}}],[\"查看http请求\",{\"1\":{\"179\":1}}],[\"查看效果\",{\"1\":{\"173\":1}}],[\"查看实例分配情况\",{\"1\":{\"107\":1}}],[\"查看详情\",{\"1\":{\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1}}],[\"理解\",{\"1\":{\"178\":1}}],[\"理想的请求执行结果应该如下所示\",{\"1\":{\"176\":1}}],[\"链路模式中\",{\"1\":{\"180\":1}}],[\"链路模式\",{\"0\":{\"180\":1},\"1\":{\"180\":1}}],[\"链路\",{\"1\":{\"178\":1,\"180\":1}}],[\"链接\",{\"1\":{\"40\":1,\"52\":1}}],[\"关闭context整合\",{\"1\":{\"180\":1}}],[\"关联流控模式的使用场景\",{\"1\":{\"179\":1}}],[\"关联模式\",{\"0\":{\"179\":1},\"1\":{\"179\":1}}],[\"关联\",{\"1\":{\"178\":1,\"179\":1}}],[\"关于这些扩展\",{\"1\":{\"50\":1}}],[\"统计结果\",{\"1\":{\"185\":1}}],[\"统计从指定链路访问到本资源的请求\",{\"1\":{\"178\":1}}],[\"统计与当前资源相关的另一个资源\",{\"1\":{\"178\":1,\"179\":1}}],[\"统计当前资源的请求\",{\"1\":{\"178\":1}}],[\"统一配置管理\",{\"0\":{\"148\":1}}],[\"统一日志处理等\",{\"1\":{\"141\":1}}],[\"统一功能处理\",{\"1\":{\"132\":1}}],[\"直接\",{\"1\":{\"178\":1}}],[\"那就需要配置热点参数限流的高级选项了\",{\"1\":{\"185\":1}}],[\"那什么叫做预期等待时长呢\",{\"1\":{\"183\":1}}],[\"那是因为sentinel在统计请求的时候\",{\"1\":{\"176\":1}}],[\"那么\",{\"1\":{\"183\":1}}],[\"那么初始阈值就是\",{\"1\":{\"182\":1}}],[\"那么哪一个配置的优先级较高呢\",{\"1\":{\"156\":1}}],[\"那么此时直接返回异常信息就并不是特别的合理\",{\"1\":{\"129\":1}}],[\"那么此时需要向spring容器中注册一个bean\",{\"1\":{\"120\":1}}],[\"那么此时在进行远程调用的时候\",{\"1\":{\"113\":1}}],[\"那么此时就会直接抛出sockettimeoutexception\",{\"1\":{\"129\":1}}],[\"那么此时就需要去构建服务集群\",{\"1\":{\"106\":1}}],[\"那么此时就可以根据服务的名称从注册中心获取服务的ip地址和端口号了\",{\"1\":{\"101\":1}}],[\"那么此时服务消费方就需要修改代码\",{\"1\":{\"92\":1}}],[\"成功比例越来越高\",{\"1\":{\"182\":1}}],[\"成功的只有3个\",{\"1\":{\"182\":1}}],[\"成功的请求每次只有5个\",{\"1\":{\"176\":1}}],[\"成为基础技术模块\",{\"1\":{\"168\":1}}],[\"点击左侧菜单中热点规则菜单\",{\"1\":{\"186\":1}}],[\"点击资源中的热点按钮\",{\"1\":{\"185\":1}}],[\"点击users资源后面的流控按钮\",{\"1\":{\"180\":1}}],[\"点击高级选项\",{\"1\":{\"178\":1}}],[\"点击查看结果树\",{\"1\":{\"176\":1}}],[\"点击编辑\",{\"1\":{\"109\":1}}],[\"选择\",{\"1\":{\"179\":1,\"180\":1,\"182\":1,\"186\":1}}],[\"选择流控入门\",{\"1\":{\"176\":1}}],[\"选中流控入门\",{\"1\":{\"176\":1}}],[\"选项全局设置\",{\"1\":{\"27\":1}}],[\"导入课前资料提供的测试样例\",{\"1\":{\"176\":1}}],[\"导航栏\",{\"1\":{\"40\":1,\"67\":1}}],[\"课前资料提供了编写好的jmeter测试样例\",{\"1\":{\"176\":1}}],[\"模拟并发请求\",{\"1\":{\"176\":1}}],[\"首先在sentinel控制台添加限流规则\",{\"1\":{\"176\":1}}],[\"首先会访问dispatcherservlet\",{\"1\":{\"175\":1}}],[\"快速失败\",{\"1\":{\"181\":1}}],[\"快速入门测试的就是直接模式\",{\"1\":{\"178\":1}}],[\"快速入门\",{\"0\":{\"176\":1}}],[\"快速生成getter和setter方法\",{\"1\":{\"90\":1,\"130\":1}}],[\"授权\",{\"1\":{\"175\":1}}],[\"热点参数限流规则\",{\"1\":{\"186\":1}}],[\"热点参数限流对默认的spring\",{\"1\":{\"186\":1}}],[\"热点参数限流会根据参数值分别统计qps\",{\"1\":{\"185\":1}}],[\"热点参数限流\",{\"0\":{\"184\":1},\"1\":{\"175\":1,\"186\":1}}],[\"热点\",{\"1\":{\"175\":1}}],[\"降级熔断\",{\"1\":{\"175\":1}}],[\"降级\",{\"1\":{\"175\":1}}],[\"流控效果是指请求达到流控阈值时应该采取的措施\",{\"1\":{\"181\":1}}],[\"流控效果\",{\"0\":{\"181\":1},\"1\":{\"182\":1}}],[\"流控模式简介\",{\"0\":{\"178\":1}}],[\"流控模式\",{\"0\":{\"177\":1},\"1\":{\"179\":1,\"180\":1}}],[\"流控\",{\"1\":{\"175\":2}}],[\"流量控制原理图\",{\"1\":{\"164\":1}}],[\"流量控制\",{\"0\":{\"164\":1,\"174\":1},\"1\":{\"164\":1,\"175\":1}}],[\"流量控制等有着非常重要的作用\",{\"1\":{\"137\":1}}],[\"流量监控\",{\"1\":{\"137\":1,\"141\":1}}],[\"资源添加注解\",{\"1\":{\"186\":1}}],[\"资源\",{\"1\":{\"175\":1}}],[\"资源浪费的时间就越长\",{\"1\":{\"128\":1}}],[\"簇点链路中被监控的每一个接口就是一个资源\",{\"1\":{\"175\":1}}],[\"簇点链路\",{\"1\":{\"175\":1}}],[\"yaml文件\",{\"1\":{\"173\":1}}],[\"yml\",{\"1\":{\"151\":2,\"156\":1}}],[\"yml配置文件中编写基础配置和路由规则\",{\"1\":{\"138\":1}}],[\"yml文件中的sentinel配置\",{\"1\":{\"180\":1}}],[\"yml文件中和nacos配置中心中都定义了相同的配置内容\",{\"1\":{\"156\":1}}],[\"yml文件中添加如下配置\",{\"1\":{\"100\":1}}],[\"yml文件\",{\"1\":{\"90\":1,\"107\":1,\"108\":1,\"113\":1,\"143\":1}}],[\"整合sentinel\",{\"0\":{\"173\":1}}],[\"看不到该服务信息\",{\"1\":{\"172\":1}}],[\"看到如下的注册信息\",{\"1\":{\"100\":1}}],[\"另外\",{\"1\":{\"172\":1}}],[\"另一个是访问\",{\"1\":{\"180\":1}}],[\"另一方可以在配置变更时\",{\"1\":{\"148\":1}}],[\"另一些较差\",{\"1\":{\"109\":1}}],[\"什么都没有\",{\"1\":{\"172\":1}}],[\"发现一片空白\",{\"1\":{\"172\":1}}],[\"发起远程调用\",{\"1\":{\"91\":1,\"102\":1}}],[\"登录后\",{\"1\":{\"172\":1}}],[\"登录校验等\",{\"1\":{\"132\":1}}],[\"访问该接口\",{\"1\":{\"186\":1}}],[\"访问\",{\"1\":{\"180\":3,\"185\":1}}],[\"访问对应的端点\",{\"1\":{\"179\":1}}],[\"访问b时候超过阈值\",{\"1\":{\"179\":1}}],[\"访问spzx\",{\"1\":{\"173\":1}}],[\"访问sentinel\",{\"0\":{\"172\":1}}],[\"访问http\",{\"1\":{\"138\":1,\"172\":1,\"173\":1}}],[\"密码\",{\"1\":{\"171\":1}}],[\"密码加密的文章\",{\"0\":{\"43\":1}}],[\"账户\",{\"1\":{\"171\":1}}],[\"具有的特征\",{\"1\":{\"168\":1}}],[\"具体\",{\"1\":{\"145\":1}}],[\"具体步骤\",{\"1\":{\"129\":1}}],[\"等待时间\",{\"1\":{\"183\":1}}],[\"等应用容器\",{\"1\":{\"168\":1}}],[\"等框架也有较好的支持\",{\"1\":{\"168\":1}}],[\"打开浏览器\",{\"1\":{\"173\":1}}],[\"打开浏览器访问nacos的所提供的后端管理界面\",{\"1\":{\"98\":1}}],[\"打包后可以直接运行\",{\"1\":{\"168\":1}}],[\"能够运行于所有\",{\"1\":{\"168\":1}}],[\"库\",{\"1\":{\"168\":1}}],[\"继续朝着云原生方向演进\",{\"1\":{\"168\":1}}],[\"版本\",{\"1\":{\"168\":1}}],[\"架构下多语言限流的问题\",{\"1\":{\"168\":1}}],[\"场景也推出了\",{\"1\":{\"168\":1}}],[\"场景不多\",{\"1\":{\"109\":1}}],[\"原生版本\",{\"1\":{\"168\":1}}],[\"原生组件\",{\"1\":{\"86\":1}}],[\"推出\",{\"1\":{\"168\":2}}],[\"朝着多语言扩展的方向不断探索\",{\"1\":{\"168\":1}}],[\"覆盖了所有的核心场景\",{\"1\":{\"168\":1}}],[\"诞生\",{\"1\":{\"168\":1}}],[\"随着微服务的流行\",{\"1\":{\"168\":1}}],[\"随着时间推移\",{\"1\":{\"182\":1}}],[\"随着时间推迟\",{\"1\":{\"86\":1}}],[\"随着时间的不断推移服务a的系统资源会被线程耗尽\",{\"1\":{\"159\":1}}],[\"zh\",{\"1\":{\"168\":1}}],[\"zoneddatetime\",{\"1\":{\"139\":4}}],[\"zoom\",{\"1\":{\"27\":1}}],[\"图形化界面\",{\"1\":{\"168\":1}}],[\"图片增强\",{\"0\":{\"60\":1}}],[\"控制台\",{\"1\":{\"168\":2}}],[\"核心库\",{\"1\":{\"168\":2}}],[\"核心源码分析\",{\"1\":{\"146\":1}}],[\"核心源码如下所示\",{\"1\":{\"118\":2}}],[\"临界值\",{\"1\":{\"167\":1}}],[\"临时实例\",{\"1\":{\"114\":1}}],[\"阈值会动态变化\",{\"1\":{\"182\":1}}],[\"阈值一般是一个微服务能承担的最大qps\",{\"1\":{\"182\":1}}],[\"阈值\",{\"0\":{\"167\":1}}],[\"衡量服务器的吞吐量\",{\"1\":{\"166\":1}}],[\"query进入\",{\"1\":{\"180\":1}}],[\"query进入到users的请求\",{\"1\":{\"180\":1}}],[\"queryusers\",{\"1\":{\"180\":4}}],[\"query\",{\"0\":{\"166\":1},\"1\":{\"180\":6}}],[\"querybyid\",{\"1\":{\"123\":2}}],[\"qps1\",{\"1\":{\"186\":1}}],[\"qps都限定为5\",{\"1\":{\"185\":1}}],[\"qps非常平滑\",{\"1\":{\"183\":1}}],[\"qps会变的很平滑\",{\"1\":{\"183\":1}}],[\"qps为15\",{\"1\":{\"183\":1}}],[\"qps为10\",{\"1\":{\"182\":1}}],[\"qps为4\",{\"1\":{\"180\":1}}],[\"qps阈值为2\",{\"1\":{\"180\":1}}],[\"qps<5右键运行\",{\"1\":{\"176\":1}}],[\"qps是10\",{\"1\":{\"176\":1}}],[\"qps不能超过\",{\"1\":{\"176\":1}}],[\"qps\",{\"0\":{\"166\":1},\"1\":{\"183\":1}}],[\"防止宕机\",{\"1\":{\"165\":1}}],[\"防止长时间等待\",{\"1\":{\"128\":1}}],[\"时间过了就会返回兜底信息\",{\"1\":{\"164\":1}}],[\"立马给用户进行返回\",{\"1\":{\"163\":1}}],[\"触发阈值时\",{\"1\":{\"178\":2,\"179\":1}}],[\"触发阈值时对当前资源直接限流\",{\"1\":{\"178\":1}}],[\"触发熔断了以后\",{\"1\":{\"163\":1}}],[\"触发超时以后\",{\"1\":{\"129\":1}}],[\"形成熔断\",{\"1\":{\"163\":1}}],[\"认为服务d有导致雪崩的风险\",{\"1\":{\"163\":1}}],[\"超出则被限流\",{\"1\":{\"180\":1}}],[\"超过了我们设定的阈值2\",{\"1\":{\"180\":1}}],[\"超过了我们设定的阈值\",{\"1\":{\"179\":1}}],[\"超过了5\",{\"1\":{\"176\":1}}],[\"超过五秒之后\",{\"1\":{\"163\":1}}],[\"超时时长设置为5s\",{\"1\":{\"183\":1}}],[\"超时时间越长\",{\"1\":{\"128\":1}}],[\"超时处理原理\",{\"1\":{\"161\":1}}],[\"超时处理\",{\"0\":{\"161\":1},\"1\":{\"161\":1}}],[\"超时机制可以防止用户长时间等待无响应的情况发生\",{\"1\":{\"128\":1}}],[\"超时机制可以帮助及时释放占用的资源\",{\"1\":{\"128\":1}}],[\"超时机制的意义\",{\"1\":{\"128\":1}}],[\"超时机制概述\",{\"1\":{\"128\":1}}],[\"超时配置\",{\"0\":{\"128\":1}}],[\"十次调用中有五次是调用失败\",{\"1\":{\"163\":1}}],[\"制定一个规则\",{\"1\":{\"163\":1}}],[\"都只会发送兜底数据\",{\"1\":{\"163\":1}}],[\"都是将feign的接口抽取到一个独立的模块中\",{\"1\":{\"130\":1}}],[\"都是需要去定义一个feign的接口\",{\"1\":{\"130\":1}}],[\"异常比例如下所示\",{\"1\":{\"163\":1}}],[\"断路器会统计访问某个服务的请求数量\",{\"1\":{\"163\":1}}],[\"断言工厂\",{\"1\":{\"139\":1}}],[\"由断路器统计业务执行的异常比例\",{\"1\":{\"163\":1}}],[\"由网飞公司开发\",{\"1\":{\"86\":1}}],[\"熔断等都是针对簇点链路中的资源来设置的\",{\"1\":{\"175\":1}}],[\"熔断降级\",{\"1\":{\"168\":1}}],[\"熔断五秒\",{\"1\":{\"163\":1}}],[\"熔断需要设置时长\",{\"1\":{\"163\":1}}],[\"熔断不可以无限\",{\"1\":{\"163\":1}}],[\"熔断是在降级的基础上发生的\",{\"1\":{\"163\":1}}],[\"熔断是在降级的基础之上发生的\",{\"1\":{\"163\":1}}],[\"熔断处理\",{\"0\":{\"163\":1},\"1\":{\"163\":1}}],[\"电压过高会进行熔断\",{\"1\":{\"163\":1}}],[\"线程隔离\",{\"1\":{\"162\":1}}],[\"线程等\",{\"1\":{\"128\":1}}],[\"常见的隔离方式\",{\"1\":{\"162\":1}}],[\"常用组件\",{\"1\":{\"86\":1}}],[\"于此类似\",{\"1\":{\"162\":1}}],[\"避免影响\",{\"1\":{\"179\":1}}],[\"避免雪崩\",{\"1\":{\"164\":1}}],[\"避免因瞬间高并发流量而导致服务故障\",{\"1\":{\"164\":1}}],[\"避免服务因流量的突增而故障\",{\"1\":{\"164\":1}}],[\"避免整个船体都被淹没\",{\"1\":{\"162\":1}}],[\"避免资源浪费\",{\"1\":{\"128\":1}}],[\"船舱都会被隔板分离为多个独立空间\",{\"1\":{\"162\":1}}],[\"隔离处理\",{\"0\":{\"162\":1},\"1\":{\"162\":1}}],[\"称为\",{\"1\":{\"161\":1}}],[\"设定超时时间\",{\"1\":{\"161\":1}}],[\"设置阈值1\",{\"1\":{\"179\":1}}],[\"设置等待时间\",{\"1\":{\"164\":1}}],[\"设置响应状态码\",{\"1\":{\"145\":1}}],[\"设置防止如下所示\",{\"1\":{\"128\":1}}],[\"设置请求的超时时间\",{\"1\":{\"128\":1}}],[\"同时用户要查询订单\",{\"1\":{\"179\":1}}],[\"同时对\",{\"1\":{\"168\":1}}],[\"同时针对\",{\"1\":{\"168\":1}}],[\"同理就会导致其他的服务也不能进行访问了\",{\"1\":{\"159\":1}}],[\"同样可以做配置管理来使用\",{\"1\":{\"147\":1}}],[\"最大qps为10\",{\"1\":{\"182\":1,\"183\":1}}],[\"最终的目的\",{\"0\":{\"165\":1}}],[\"最终导致服务a出现了问题\",{\"1\":{\"159\":1}}],[\"最后显示\",{\"1\":{\"25\":1}}],[\"雪崩问题虽然有四种方案\",{\"1\":{\"174\":1}}],[\"雪崩原理\",{\"1\":{\"159\":1}}],[\"雪崩效应\",{\"0\":{\"159\":1}}],[\"初识sentinel\",{\"0\":{\"158\":1}}],[\"先导入的配置\",{\"1\":{\"156\":1}}],[\"先声明一个类\",{\"1\":{\"127\":1}}],[\"后\",{\"1\":{\"182\":1}}],[\"后导入的配置\",{\"1\":{\"156\":1}}],[\"后面跟服务名称\",{\"1\":{\"138\":1}}],[\"方式二\",{\"1\":{\"155\":1}}],[\"方式一\",{\"1\":{\"155\":1}}],[\"方法getqueryparams\",{\"1\":{\"145\":1}}],[\"也是默认的模式\",{\"1\":{\"178\":1}}],[\"也就是3\",{\"1\":{\"182\":1}}],[\"也就是controller中的方法\",{\"1\":{\"175\":1}}],[\"也就是配置热更新\",{\"1\":{\"155\":1}}],[\"也因此积累了大量的流量归整场景以及生产实践\",{\"1\":{\"168\":1}}],[\"也可以通过实体类\",{\"1\":{\"154\":1}}],[\"也可以通过在特定幻灯片添加\",{\"1\":{\"27\":1}}],[\"也可以基于java代码来修改日志级别\",{\"1\":{\"127\":1}}],[\"也可以针对所有服务\",{\"1\":{\"126\":1}}],[\"也可以叫永久实例\",{\"1\":{\"114\":1}}],[\"配合\",{\"1\":{\"154\":1,\"155\":1}}],[\"配置介绍\",{\"0\":{\"185\":1}}],[\"配置流控规则\",{\"1\":{\"179\":1,\"182\":1}}],[\"配置方式\",{\"1\":{\"179\":1,\"180\":1,\"185\":1}}],[\"配置sentinel控制台地址\",{\"1\":{\"173\":1}}],[\"配置控制台\",{\"1\":{\"173\":1}}],[\"配置项\",{\"1\":{\"171\":1}}],[\"配置优先级\",{\"0\":{\"156\":1}}],[\"配置热更新\",{\"0\":{\"155\":1}}],[\"配置到配置中心中\",{\"1\":{\"147\":1}}],[\"配置路由基本的过滤器\",{\"1\":{\"143\":1}}],[\"配置路由信息\",{\"1\":{\"138\":1}}],[\"配置文件中配置\",{\"1\":{\"151\":1}}],[\"配置文件\",{\"1\":{\"138\":1}}],[\"配置文件管理\",{\"1\":{\"83\":1}}],[\"配置自定义重试器\",{\"1\":{\"129\":1}}],[\"配置重试器\",{\"1\":{\"129\":1}}],[\"配置负载均衡算法的使用者\",{\"1\":{\"120\":1}}],[\"配置负载均衡效果\",{\"1\":{\"106\":1}}],[\"配置该实例为非临时实例\",{\"1\":{\"114\":1}}],[\"配置一个服务实例为永久实例\",{\"1\":{\"114\":1}}],[\"配置服务实例所属名称空间\",{\"1\":{\"113\":1}}],[\"配置服务所属集群\",{\"1\":{\"107\":1,\"108\":1}}],[\"配置服务端口号\",{\"1\":{\"90\":1}}],[\"配置order模块远程访问的集群是什么\",{\"1\":{\"106\":1}}],[\"配置所属区域\",{\"1\":{\"106\":1}}],[\"配置nacos注册中心的地址\",{\"1\":{\"100\":1,\"108\":1,\"113\":1}}],[\"配置mybatis的相关信息\",{\"1\":{\"90\":1}}],[\"配置数据库的连接信息\",{\"1\":{\"90\":1,\"151\":1}}],[\"配置中心\",{\"1\":{\"86\":1,\"147\":1}}],[\"配置\",{\"0\":{\"48\":1}}],[\"$\",{\"1\":{\"153\":1,\"154\":1}}],[\"读取自定义配置\",{\"0\":{\"152\":1}}],[\"读取数据的超时时间设置为2s\",{\"1\":{\"128\":1}}],[\"地址并引入服务配置\",{\"1\":{\"151\":1}}],[\"填写配置信息\",{\"1\":{\"150\":1}}],[\"及时通知微服务\",{\"1\":{\"148\":1}}],[\"组织基于\",{\"1\":{\"176\":1}}],[\"组织过滤器链\",{\"1\":{\"146\":1}}],[\"组件\",{\"1\":{\"93\":1}}],[\"合并到一个过滤器链\",{\"1\":{\"146\":1}}],[\"合理的做法\",{\"1\":{\"129\":1}}],[\"遍历map\",{\"1\":{\"145\":1}}],[\"参数分别为\",{\"1\":{\"186\":1}}],[\"参数值是value\",{\"1\":{\"145\":1}}],[\"参数名是可以\",{\"1\":{\"145\":1}}],[\"参数中chain\",{\"1\":{\"145\":1}}],[\"参数中exchage\",{\"1\":{\"145\":1}}],[\"参数传递不太方便\",{\"1\":{\"122\":1}}],[\"判断是否超过qps阈值\",{\"1\":{\"185\":2}}],[\"判断是否超过阈值\",{\"1\":{\"180\":1}}],[\"判断参数是否是username\",{\"1\":{\"145\":1}}],[\"判断请求路径中第一个参数是否是username\",{\"1\":{\"145\":1}}],[\"判断请求的参数是否满足下面条件\",{\"1\":{\"145\":1}}],[\"类似于保险丝\",{\"1\":{\"163\":1}}],[\"类交给spring进行管理\",{\"1\":{\"145\":1}}],[\"类型的过滤器中可以做响应内容\",{\"1\":{\"137\":1}}],[\"类型的过滤器可以做参数校验\",{\"1\":{\"137\":1}}],[\"类型\",{\"1\":{\"125\":1}}],[\"否则拦截\",{\"1\":{\"145\":1}}],[\"区别在于gatewayfilter通过配置定义\",{\"1\":{\"145\":1}}],[\"格式如下\",{\"1\":{\"144\":1}}],[\"格式使用数学公式\",{\"1\":{\"9\":1}}],[\"全部都通过了\",{\"1\":{\"183\":1}}],[\"全局过滤器的作用也是处理一切进入网关的请求和微服务响应\",{\"1\":{\"145\":1}}],[\"全局过滤器\",{\"0\":{\"145\":1},\"1\":{\"142\":1}}],[\"全屏模式\",{\"0\":{\"36\":1}}],[\"针对所有的路由都有效\",{\"1\":{\"142\":2}}],[\"限制业务访问的qps\",{\"1\":{\"164\":1}}],[\"限制请求的流量\",{\"1\":{\"142\":1}}],[\"限流是一种预防措施\",{\"1\":{\"164\":1}}],[\"限流\",{\"1\":{\"132\":1}}],[\"移除请求中的一个请求头\",{\"1\":{\"142\":1}}],[\"名称\",{\"1\":{\"142\":1}}],[\"名为public\",{\"1\":{\"111\":1}}],[\"官网地址\",{\"1\":{\"142\":1,\"168\":1}}],[\"官方地址\",{\"1\":{\"122\":1}}],[\"内置过滤器\",{\"0\":{\"142\":1}}],[\"内容\",{\"1\":{\"49\":1,\"83\":1}}],[\"总结\",{\"1\":{\"139\":1}}],[\"系统负载保护等多个维度保护服务的稳定性\",{\"1\":{\"168\":1}}],[\"系统时间在2023\",{\"1\":{\"139\":1}}],[\"系统的稳定性就越差\",{\"1\":{\"128\":1}}],[\"框架底层会自动读取配置文件中的内容\",{\"1\":{\"139\":1}}],[\"框架底层调用该方法得到一个重试器\",{\"1\":{\"129\":1}}],[\"底层原理\",{\"1\":{\"139\":1}}],[\"底层是过滤器\",{\"1\":{\"136\":1}}],[\"怎么就可以实现路由呢\",{\"1\":{\"139\":1}}],[\"思考问题\",{\"1\":{\"139\":1,\"156\":1}}],[\"得到了结果\",{\"1\":{\"138\":1}}],[\"`规则\",{\"1\":{\"138\":1}}],[\"符合`\",{\"1\":{\"138\":1}}],[\"只统计从\",{\"1\":{\"180\":1}}],[\"只针对从指定链路访问到本资源的请求做统计\",{\"1\":{\"180\":1}}],[\"只针对当前路由有效\",{\"1\":{\"142\":1}}],[\"只会导致部分空间进入\",{\"1\":{\"162\":1}}],[\"只要唯一即可\",{\"1\":{\"138\":1}}],[\"只需要创建自定义的\",{\"1\":{\"125\":1}}],[\"路径匹配\",{\"1\":{\"138\":2}}],[\"路径导航\",{\"1\":{\"40\":1,\"67\":1}}],[\"路由过滤器的顺序执行\",{\"1\":{\"146\":1}}],[\"路由过滤器和默认过滤器会按照order的值进行排序\",{\"1\":{\"146\":1}}],[\"路由过滤器\",{\"0\":{\"143\":1},\"1\":{\"142\":1}}],[\"路由断言工厂\",{\"0\":{\"139\":1}}],[\"路由的目标地址\",{\"1\":{\"138\":1}}],[\"路由id\",{\"1\":{\"138\":1}}],[\"引入sentinel依赖\",{\"1\":{\"173\":1}}],[\"引入spring\",{\"1\":{\"151\":1}}],[\"引入如下依赖\",{\"1\":{\"138\":1}}],[\"引入依赖\",{\"1\":{\"138\":1}}],[\"响应头的修改\",{\"1\":{\"137\":1}}],[\"响应结果的解析器\",{\"1\":{\"125\":1}}],[\"协议转换等\",{\"1\":{\"137\":1}}],[\"权限控制\",{\"1\":{\"141\":1}}],[\"权限校验\",{\"1\":{\"137\":1}}],[\"权重取值范围\",{\"1\":{\"109\":1}}],[\"权重越大则访问频率越高\",{\"1\":{\"109\":1}}],[\"权重值越高\",{\"1\":{\"109\":1}}],[\"权重配置\",{\"0\":{\"109\":1}}],[\"执行顺序越靠前\",{\"1\":{\"146\":1}}],[\"执行业务逻辑\",{\"1\":{\"137\":1}}],[\"执行命令\",{\"1\":{\"98\":1,\"171\":1}}],[\"匹配关系\",{\"0\":{\"135\":1}}],[\"网关\",{\"1\":{\"138\":1}}],[\"网关有很多过滤器\",{\"1\":{\"136\":1}}],[\"网关有多个过滤器\",{\"1\":{\"132\":1}}],[\"网关架构原理\",{\"1\":{\"132\":1}}],[\"叫做过滤链\",{\"1\":{\"132\":1}}],[\"跨域\",{\"1\":{\"132\":1}}],[\"黑名单\",{\"1\":{\"132\":1}}],[\"拦截访问该业务的一切请求\",{\"1\":{\"163\":1}}],[\"拦截请求\",{\"1\":{\"145\":1}}],[\"拦截下来\",{\"1\":{\"132\":1}}],[\"拦截了用户的httprequest请求\",{\"1\":{\"118\":1}}],[\"过滤器执行顺序\",{\"0\":{\"146\":1}}],[\"过滤器简介\",{\"0\":{\"141\":1}}],[\"过滤器之间用虚线分开是因为过滤器可能会在发送代理请求之前\",{\"1\":{\"137\":1}}],[\"过滤器链\",{\"1\":{\"136\":1}}],[\"过滤器\",{\"1\":{\"132\":1,\"141\":1}}],[\"过渡动画\",{\"0\":{\"29\":1}}],[\"789\",{\"1\":{\"144\":1}}],[\"7\",{\"0\":{\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"155\":1,\"156\":1},\"1\":{\"130\":1,\"180\":1}}],[\"7nacos高级特性\",{\"0\":{\"114\":1}}],[\"面向对象\",{\"1\":{\"130\":1}}],[\"面向服务\",{\"1\":{\"83\":1}}],[\"供其他的模块进行使用\",{\"1\":{\"130\":1}}],[\"定义该过滤器的优先级\",{\"1\":{\"145\":1}}],[\"定义一个实体类\",{\"1\":{\"154\":1}}],[\"定义一个类实现globalfilter接口❓全局过滤器接口\",{\"1\":{\"145\":1}}],[\"定义一个新的模块spzx\",{\"1\":{\"130\":2}}],[\"定义全局过滤器\",{\"1\":{\"145\":1}}],[\"定义两个成员变量来决定重试次数\",{\"1\":{\"129\":1}}],[\"定义属性\",{\"1\":{\"89\":1}}],[\"让所有的请求按照先后次序进入到一个队列中进行排队\",{\"1\":{\"181\":1,\"183\":1}}],[\"让其产生簇点链路\",{\"1\":{\"179\":1}}],[\"让feign进行重试\",{\"1\":{\"129\":1}}],[\"让resttemplate具有负载均衡的能力\",{\"1\":{\"103\":1,\"120\":1}}],[\"肯定希望得到一个结果\",{\"1\":{\"129\":1}}],[\"尤其针对查询请求\",{\"1\":{\"129\":1}}],[\"建立连接的超时时间设置为2s\",{\"1\":{\"128\":1}}],[\"优先级顺序\",{\"1\":{\"156\":1}}],[\"优先级越高\",{\"1\":{\"146\":1}}],[\"优化过程图解\",{\"1\":{\"130\":1}}],[\"优化用户体验\",{\"1\":{\"128\":1}}],[\"优点\",{\"1\":{\"82\":1,\"83\":1}}],[\"从一个较小值逐渐增加到最大阈值\",{\"1\":{\"181\":1,\"182\":1}}],[\"从流量控制\",{\"1\":{\"168\":1}}],[\"从nacos配置中心中获取配置信息进行使用\",{\"1\":{\"151\":1}}],[\"从响应结果中移除有一个响应头\",{\"1\":{\"142\":1}}],[\"从而影响整个系统的吞吐量和响应时间\",{\"1\":{\"128\":1}}],[\"从服务列表中选择一个服务实例对象\",{\"1\":{\"118\":1}}],[\"客户端\",{\"1\":{\"168\":1}}],[\"客户端向spring\",{\"1\":{\"137\":1}}],[\"客户端访问\",{\"1\":{\"132\":1}}],[\"客户端可能会一直等待\",{\"1\":{\"128\":1}}],[\"客户端负载均衡\",{\"1\":{\"116\":1}}],[\"调用服务d的服务a的线程就得不到及时的释放\",{\"1\":{\"159\":1}}],[\"调用过滤器链中的filter方法\",{\"1\":{\"146\":1}}],[\"调用优化原理\",{\"1\":{\"130\":1}}],[\"调用时\",{\"1\":{\"128\":1}}],[\"调用http\",{\"1\":{\"91\":1}}],[\"元数据\",{\"1\":{\"126\":1}}],[\"元素产生过渡动画效果\",{\"1\":{\"29\":1}}],[\"元素使其拥有多个动画片段\",{\"1\":{\"23\":1}}],[\"元素上添加属性\",{\"1\":{\"3\":1}}],[\"包括三种\",{\"1\":{\"181\":1}}],[\"包括头信息\",{\"1\":{\"126\":1}}],[\"包含三个请求\",{\"1\":{\"186\":1}}],[\"包含四种不同的级别\",{\"1\":{\"125\":1}}],[\"包含\",{\"1\":{\"52\":1}}],[\"记录所有请求和响应的明细\",{\"1\":{\"126\":1}}],[\"额外记录了请求和响应的头信息\",{\"1\":{\"126\":1}}],[\"仅记录请求的方法\",{\"1\":{\"126\":1}}],[\"而在实际开发中\",{\"1\":{\"185\":1}}],[\"而热点参数限流是分别统计参数值相同的请求\",{\"1\":{\"185\":1}}],[\"而是放入队列\",{\"1\":{\"183\":1}}],[\"而是将多个服务分散的部署到不同的机房中\",{\"1\":{\"106\":1}}],[\"而coldfactor的默认值是3\",{\"1\":{\"182\":1}}],[\"而且很容易出错\",{\"1\":{\"148\":1}}],[\"而globalfilter的逻辑需要自己写代码实现\",{\"1\":{\"145\":1}}],[\"而日志的级别分为四种\",{\"1\":{\"126\":1}}],[\"则可以这样配置\",{\"1\":{\"180\":1}}],[\"则可以将过滤器工厂写到default下\",{\"1\":{\"144\":1}}],[\"则把它放到对应的\",{\"1\":{\"127\":1}}],[\"则是针对某个微服务的配置\",{\"1\":{\"126\":1}}],[\"则该实例永远不会被访问\",{\"1\":{\"109\":1}}],[\"下载地址\",{\"1\":{\"176\":1}}],[\"下载完毕以后就会得到一个jar包\",{\"1\":{\"170\":1}}],[\"下载sentinel控制台\",{\"0\":{\"170\":1}}],[\"下面\",{\"1\":{\"138\":1}}],[\"下面以日志为例来演示如何自定义配置\",{\"1\":{\"125\":1}}],[\"下一篇\",{\"1\":{\"40\":1}}],[\"失败重试机制\",{\"1\":{\"125\":1}}],[\"支持两种方式的配置\",{\"1\":{\"125\":1}}],[\"支持的注解格式\",{\"1\":{\"125\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"60\":1}}],[\"便于通过http请求发送\",{\"1\":{\"125\":1}}],[\"说明qps被限定在3\",{\"1\":{\"182\":1}}],[\"说明\",{\"1\":{\"125\":1,\"142\":1,\"171\":1}}],[\"作用\",{\"1\":{\"125\":1}}],[\"作者设置为\",{\"1\":{\"65\":1}}],[\"作者\",{\"1\":{\"1\":1}}],[\"④\",{\"1\":{\"123\":1,\"126\":1}}],[\"③\",{\"1\":{\"123\":1,\"126\":1}}],[\"②\",{\"1\":{\"123\":1,\"126\":1}}],[\"①\",{\"1\":{\"123\":1,\"126\":1}}],[\"比如现在一下子来了12\",{\"1\":{\"183\":1}}],[\"比如用户支付时需要修改订单状态\",{\"1\":{\"179\":1}}],[\"比如服务器的qps是5\",{\"1\":{\"167\":1}}],[\"比如\",{\"1\":{\"123\":1}}],[\"开发的压力测试工具\",{\"1\":{\"176\":1}}],[\"开发\",{\"1\":{\"168\":1}}],[\"开发环境\",{\"1\":{\"111\":1}}],[\"开源\",{\"1\":{\"168\":1}}],[\"开启openfeign的功能支持\",{\"1\":{\"123\":1}}],[\"加入fegin的依赖\",{\"1\":{\"130\":1}}],[\"加入如下依赖\",{\"1\":{\"130\":1}}],[\"加入openfeign的依赖\",{\"1\":{\"123\":1}}],[\"加密展示\",{\"1\":{\"71\":1,\"78\":1}}],[\"存在的弊端\",{\"1\":{\"122\":1}}],[\"概述\",{\"1\":{\"122\":1,\"145\":1,\"159\":1}}],[\"基本步骤如下\",{\"1\":{\"138\":1}}],[\"基本概念\",{\"0\":{\"81\":1}}],[\"基于\",{\"1\":{\"168\":1}}],[\"基于配置文件修改feign的日志级别可以针对单个服务\",{\"1\":{\"126\":1}}],[\"基于配置文件的方式\",{\"0\":{\"126\":1}}],[\"基于nacos和openfeign组件一起使用\",{\"1\":{\"122\":1}}],[\"用于对软件做压力测试\",{\"1\":{\"176\":1}}],[\"用于提供serviceinstance列表的接口\",{\"1\":{\"120\":1}}],[\"用于获取环境属性配置\",{\"1\":{\"120\":1}}],[\"用户名和密码\",{\"1\":{\"98\":1}}],[\"数百时\",{\"1\":{\"148\":1}}],[\"数学知识\",{\"1\":{\"119\":1}}],[\"数据封装\",{\"1\":{\"91\":1}}],[\"数据独立\",{\"1\":{\"83\":1}}],[\"轮循算法数学原理\",{\"1\":{\"119\":1}}],[\"轮循算法\",{\"1\":{\"119\":1}}],[\"轮循环效果\",{\"1\":{\"106\":1}}],[\"紧跟着调用了roundrobinloadbalancer\",{\"1\":{\"118\":1}}],[\"处理逻辑是固定的\",{\"1\":{\"145\":1}}],[\"处理服务id\",{\"1\":{\"118\":1}}],[\"处于维护状态\",{\"1\":{\"86\":1}}],[\"本例中就是\",{\"1\":{\"118\":1}}],[\"本页面就是一个示例\",{\"1\":{\"40\":1}}],[\"将jar包放到任意非中文目录\",{\"1\":{\"171\":1}}],[\"将故障控制在一定范围\",{\"1\":{\"164\":1}}],[\"将故障控制在一定范围内\",{\"1\":{\"162\":1}}],[\"将错误隔离在可控的范围之内\",{\"1\":{\"162\":1}}],[\"将取路由级别的过滤器和默认过滤器的集合中的元素添加到全局过滤器的集合中\",{\"1\":{\"146\":1}}],[\"将该类纳入到spring容器中\",{\"1\":{\"145\":1}}],[\"将网关在nacos中进行注册\",{\"1\":{\"138\":1}}],[\"将其发送到gateway\",{\"1\":{\"137\":1}}],[\"将其放到启动类的\",{\"1\":{\"127\":1}}],[\"将spzx\",{\"1\":{\"130\":2}}],[\"将userfeginclient\",{\"1\":{\"130\":1}}],[\"将导致资源的浪费和系统的负载增加\",{\"1\":{\"128\":1}}],[\"将会中断该请求并抛出相应的异常\",{\"1\":{\"128\":1}}],[\"将feign包下产生的日志的级别设置为debug\",{\"1\":{\"126\":2}}],[\"将请求参数编码\",{\"1\":{\"125\":1}}],[\"将负载均衡算法应用到指定的服务提供方中\",{\"1\":{\"120\":1}}],[\"将服务提供方的名称传递过去\",{\"1\":{\"117\":1}}],[\"将两个微服务\",{\"1\":{\"100\":1}}],[\"然后测试\",{\"1\":{\"176\":1}}],[\"然后进入controller\",{\"1\":{\"175\":1}}],[\"然后进行放行操作\",{\"1\":{\"145\":1}}],[\"然后进行判断\",{\"1\":{\"139\":1}}],[\"然后再访问sentinel的控制台\",{\"1\":{\"173\":1}}],[\"然后在5秒后逐渐增长到10\",{\"1\":{\"182\":1}}],[\"然后在弹出的表单中\",{\"1\":{\"150\":1}}],[\"然后在gateway\",{\"1\":{\"137\":1}}],[\"然后通过制定的路由工厂将其转换成对应的判断条件\",{\"1\":{\"139\":1}}],[\"然后返回\",{\"1\":{\"137\":1}}],[\"然后声明一个logger\",{\"1\":{\"127\":1}}],[\"然后做了几件事\",{\"1\":{\"118\":1}}],[\"然后发起远程调用\",{\"1\":{\"117\":1}}],[\"然后调用loadbalancerclient中execute方法\",{\"1\":{\"117\":1}}],[\"然后从请求中获取提供方的主机名称\",{\"1\":{\"117\":1}}],[\"然后按照指定的负载均衡算法从服务清单中选择一个服务实例进行访问\",{\"1\":{\"95\":1}}],[\"非临时实例\",{\"1\":{\"114\":1}}],[\"9\",{\"1\":{\"142\":1}}],[\"978038800+08\",{\"1\":{\"139\":1}}],[\"924f\",{\"1\":{\"113\":1}}],[\"9848\",{\"1\":{\"98\":2}}],[\"给usercontroller中的\",{\"1\":{\"186\":1}}],[\"给3这个参数设置例外\",{\"1\":{\"186\":1}}],[\"给2这个参数设置例外\",{\"1\":{\"186\":1}}],[\"给\",{\"1\":{\"176\":1,\"182\":1,\"183\":1,\"186\":1}}],[\"给访问user微服务的所有接口添加truth请求头\",{\"1\":{\"143\":1}}],[\"给所有进入spzx\",{\"1\":{\"143\":1}}],[\"给响应结果中添加一个响应头\",{\"1\":{\"142\":1}}],[\"给当前请求添加一个请求头\",{\"1\":{\"142\":1}}],[\"给微服务添加名称空间的配置\",{\"1\":{\"113\":1}}],[\"给order微服务的application\",{\"1\":{\"108\":1}}],[\"来源于船舱的设计\",{\"1\":{\"162\":1}}],[\"来指定该微服务所属环境\",{\"1\":{\"113\":1}}],[\"来将不同的服务隔离到不同的环境下面\",{\"1\":{\"112\":1}}],[\"来解析\",{\"1\":{\"49\":1}}],[\"才可以确定具体的微服务实例\",{\"1\":{\"111\":1}}],[\"才访问其它集群\",{\"1\":{\"106\":1}}],[\"完整的服务注册数据存储结构如下所示\",{\"1\":{\"111\":1}}],[\"生产环境\",{\"1\":{\"111\":1}}],[\"6过滤器\",{\"0\":{\"140\":1}}],[\"6\",{\"0\":{\"111\":1,\"112\":1,\"113\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":2,\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"146\":3},\"1\":{\"130\":1,\"139\":1,\"180\":1,\"183\":1}}],[\"6nacos高级特性\",{\"0\":{\"110\":1}}],[\"环境隔离\",{\"0\":{\"110\":1}}],[\"找到spzx\",{\"1\":{\"109\":1}}],[\"但第2秒只有1个请求\",{\"1\":{\"183\":1}}],[\"但这种模式阈值会动态变化\",{\"1\":{\"181\":1}}],[\"但限流的目标是\",{\"1\":{\"179\":1}}],[\"但默认情况下nacos的负载均衡算法是同集群内随机挑选\",{\"1\":{\"109\":1}}],[\"但是超出的请求没有被拒绝\",{\"1\":{\"183\":1}}],[\"但是一个服务刚刚启动时\",{\"1\":{\"182\":1}}],[\"但是sentinel默认会给进入spring\",{\"1\":{\"180\":1}}],[\"但是限流是避免服务因突发的流量而发生故障\",{\"1\":{\"174\":1}}],[\"但是如果我们希望拦截请求\",{\"1\":{\"145\":1}}],[\"但是并不是说把所有的服务都部署在一个机房里\",{\"1\":{\"106\":1}}],[\"但是你需要使用相对链接\",{\"1\":{\"66\":1}}],[\"部分实例所在机器性能较好\",{\"1\":{\"109\":1}}],[\"部署项目的时候\",{\"1\":{\"83\":1}}],[\"部署不是很方便\",{\"1\":{\"83\":1}}],[\"部署方便\",{\"1\":{\"82\":1}}],[\"一致保持在10\",{\"1\":{\"183\":1}}],[\"一切资源尚未初始化\",{\"1\":{\"182\":1}}],[\"一次成功\",{\"1\":{\"163\":1}}],[\"一般情况下\",{\"1\":{\"125\":1}}],[\"一般来讲修改权重的概率不大\",{\"1\":{\"109\":1}}],[\"一个根据id查询商品的接口\",{\"1\":{\"185\":1}}],[\"一个http请求是访问\",{\"1\":{\"180\":1}}],[\"一个优先级较低\",{\"1\":{\"179\":1}}],[\"一个优先级较高\",{\"1\":{\"179\":1}}],[\"一个服务的不可用导致整个系统的不可用的现象就被称之为雪崩效应\",{\"1\":{\"159\":1}}],[\"一个微服务往往依赖于多个其它微服务\",{\"1\":{\"159\":1}}],[\"一个拥有\",{\"1\":{\"56\":1}}],[\"一个链接\",{\"1\":{\"6\":1}}],[\"一个简单的幻灯片演示与各种小贴士\",{\"1\":{\"1\":1}}],[\"被访问的概率越大\",{\"1\":{\"109\":1}}],[\"默认都是\",{\"1\":{\"172\":1}}],[\"默认密码\",{\"1\":{\"171\":1}}],[\"默认用户名\",{\"1\":{\"171\":1}}],[\"默认值\",{\"1\":{\"171\":1}}],[\"默认值就能满足我们使用\",{\"1\":{\"125\":1}}],[\"默认过滤器\",{\"0\":{\"144\":1},\"1\":{\"142\":1}}],[\"默认是按照声明顺序从1递增\",{\"1\":{\"146\":1}}],[\"默认是没有\",{\"1\":{\"125\":1}}],[\"默认是springmvc的注解\",{\"1\":{\"125\":1}}],[\"默认的热点参数规则是每1秒请求量不超过2\",{\"1\":{\"186\":1}}],[\"默认的过滤器就没办法实现\",{\"1\":{\"145\":1}}],[\"默认的负载均衡算法\",{\"1\":{\"118\":1}}],[\"默认的类型\",{\"1\":{\"114\":1}}],[\"默认情况下sentinel会监控spring\",{\"1\":{\"175\":1}}],[\"默认情况下\",{\"1\":{\"111\":1,\"180\":1}}],[\"默认效果是轮循机制\",{\"1\":{\"109\":1}}],[\"默认使用的负载均衡算法就是轮询\",{\"1\":{\"103\":1}}],[\"了解\",{\"0\":{\"109\":1},\"1\":{\"109\":1}}],[\"50秒内发完\",{\"1\":{\"180\":1}}],[\"5predicate的使用\",{\"0\":{\"139\":1}}],[\"5\",{\"0\":{\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"128\":1,\"129\":1,\"130\":1,\"145\":1,\"184\":1},\"1\":{\"130\":1,\"138\":1,\"176\":1,\"179\":1,\"180\":1,\"183\":1}}],[\"5更改负载均衡算法\",{\"0\":{\"120\":1}}],[\"5nacos高级特性\",{\"0\":{\"109\":1}}],[\"5<\",{\"1\":{\"89\":1}}],[\"集合\",{\"1\":{\"146\":1}}],[\"集成nacos的负载均衡算法\",{\"1\":{\"108\":1}}],[\"集群流量控制支持\",{\"1\":{\"168\":1}}],[\"集群\",{\"1\":{\"83\":1}}],[\"启动sentinel\",{\"0\":{\"171\":1}}],[\"启动网关服务后\",{\"1\":{\"139\":1}}],[\"启动三个用户微服务实例\",{\"1\":{\"107\":1}}],[\"启动三个服务user微服务实例\",{\"1\":{\"107\":1}}],[\"启动实例2和实例3\",{\"1\":{\"107\":1}}],[\"启动两个微服务\",{\"1\":{\"100\":1}}],[\"添加流控规则\",{\"1\":{\"180\":1,\"183\":1}}],[\"添加两个端点\",{\"1\":{\"180\":1}}],[\"添加下面内容\",{\"1\":{\"173\":1}}],[\"添加路由过滤\",{\"1\":{\"143\":1}}],[\"添加集群配置\",{\"1\":{\"107\":1,\"108\":1}}],[\"添加依赖\",{\"1\":{\"89\":1}}],[\"修改用户数据成功\",{\"1\":{\"179\":1}}],[\"修改用户数据端点\",{\"1\":{\"179\":1}}],[\"修改application\",{\"1\":{\"173\":1}}],[\"修改端口\",{\"1\":{\"171\":1}}],[\"修改gateway服务的application\",{\"1\":{\"143\":1}}],[\"修改配置文件\",{\"1\":{\"138\":1}}],[\"修改日志级别\",{\"1\":{\"125\":1}}],[\"修改orderservice中的远程调用代码\",{\"1\":{\"123\":1}}],[\"修改spzx\",{\"1\":{\"107\":1,\"113\":1}}],[\"修改一个功能\",{\"1\":{\"82\":1}}],[\"重写filter方法\",{\"1\":{\"145\":1}}],[\"重启服务\",{\"1\":{\"179\":1,\"180\":1}}],[\"重启网关\",{\"1\":{\"138\":1}}],[\"重启测试\",{\"1\":{\"138\":1}}],[\"重点配置\",{\"1\":{\"138\":1}}],[\"重试配置\",{\"0\":{\"129\":1}}],[\"重新进行启动\",{\"1\":{\"106\":1}}],[\"重要的内容\",{\"1\":{\"58\":1}}],[\"就点击哪个端点后面的按钮\",{\"1\":{\"179\":1}}],[\"就对\",{\"1\":{\"179\":1}}],[\"就可以看到sentinel的控制台了\",{\"1\":{\"172\":1}}],[\"就可以在nacos的后台管理系统中\",{\"1\":{\"100\":1}}],[\"就不会在通过服务a去访问服务d了\",{\"1\":{\"163\":1}}],[\"就不会访问之前的了\",{\"1\":{\"106\":1}}],[\"就不放行\",{\"1\":{\"145\":1}}],[\"就需要使用到gateway中所提供的过滤器了\",{\"1\":{\"141\":1}}],[\"就是负载均衡算法由客户端提供\",{\"1\":{\"116\":1}}],[\"就会出现如下的错误\",{\"1\":{\"113\":1}}],[\"❌上线下线会重新访问原来的\",{\"1\":{\"106\":1}}],[\"恢复\",{\"1\":{\"106\":1}}],[\"其他的处理方式是一种补救措施\",{\"1\":{\"164\":1}}],[\"其他的微服务引用该依赖包\",{\"1\":{\"130\":1}}],[\"其他服务不受影响\",{\"1\":{\"83\":1}}],[\"其中loadbalancerclientfactory\",{\"1\":{\"120\":1}}],[\"其中一个地区服务器下线就会访问另外一个\",{\"1\":{\"106\":1}}],[\"其实就是服务id\",{\"1\":{\"118\":1}}],[\"其主要原理是通过选择合适的服务实例来实现负载均衡\",{\"1\":{\"116\":1}}],[\"检查配置文件格式\",{\"1\":{\"106\":1}}],[\"测试环境\",{\"1\":{\"111\":1}}],[\"测试\",{\"1\":{\"106\":1}}],[\"❓怎么保证服务的高可用\",{\"1\":{\"106\":1}}],[\"保护服务器\",{\"1\":{\"165\":1}}],[\"保存用户\",{\"1\":{\"180\":1}}],[\"保存参数的信息\",{\"1\":{\"145\":1}}],[\"保存这些注册信息\",{\"1\":{\"95\":1}}],[\"保证集群的高可用\",{\"1\":{\"106\":1}}],[\"例如秒杀商品\",{\"1\":{\"185\":1}}],[\"例如连接\",{\"1\":{\"128\":1}}],[\"例如解析json字符串为java对象\",{\"1\":{\"125\":1}}],[\"例如\",{\"1\":{\"106\":1,\"113\":1,\"130\":1,\"142\":1,\"171\":1,\"175\":1,\"182\":1,\"183\":1,\"185\":1}}],[\"当id=1的请求触发阈值被限流时\",{\"1\":{\"185\":1}}],[\"当某一个请求最大的预期等待时间超过了所设定的超时时间时同样是拒绝并抛出异常\",{\"1\":{\"181\":1,\"183\":1}}],[\"当超过阈值对低优先级的资源进行限流\",{\"1\":{\"179\":1}}],[\"当\",{\"1\":{\"179\":1}}],[\"当访问流量超过阈值时\",{\"1\":{\"179\":1}}],[\"当请求进入微服务时\",{\"1\":{\"175\":1}}],[\"当请求超时时\",{\"1\":{\"128\":1}}],[\"当请求超过设定的超时时间后\",{\"1\":{\"128\":1}}],[\"当在访问服务a的时候\",{\"1\":{\"163\":1}}],[\"当发现访问服务d的请求异常比例过高时\",{\"1\":{\"163\":1}}],[\"当船体破损时\",{\"1\":{\"162\":1}}],[\"当服务d出现了问题了以后\",{\"1\":{\"159\":1}}],[\"当微服务部署的实例越来越多\",{\"1\":{\"148\":1}}],[\"当过滤器的order值一样时\",{\"1\":{\"146\":1}}],[\"当前路由的过滤器\",{\"1\":{\"146\":1}}],[\"当前过滤器写在spzx\",{\"1\":{\"143\":1}}],[\"当sh集群中的user微服务实例出现问题以后\",{\"1\":{\"108\":1}}],[\"当order服务优先访问sh集群中的user微服务实例\",{\"1\":{\"108\":1}}],[\"当本集群内不可用时\",{\"1\":{\"106\":1}}],[\"当我们把微服务都注册到注册中心以后\",{\"1\":{\"101\":1}}],[\"因为每200ms执行一个请求\",{\"1\":{\"183\":1}}],[\"因为还没有监控任何服务\",{\"1\":{\"172\":1}}],[\"因为本地访问速度更快\",{\"1\":{\"106\":1}}],[\"因此响应时间\",{\"1\":{\"183\":1}}],[\"因此需要关闭这种资源整合\",{\"1\":{\"180\":1}}],[\"因此需要设置为一个较为合理的超时时间\",{\"1\":{\"128\":1}}],[\"因此qps为10\",{\"1\":{\"179\":1}}],[\"因此点击它后面的按钮\",{\"1\":{\"179\":1}}],[\"因此当修改订单业务触发阈值时\",{\"1\":{\"179\":1}}],[\"因此spring\",{\"1\":{\"175\":1}}],[\"因此springcloud可以看做是一套微服务的解决方案\",{\"1\":{\"85\":1}}],[\"因此仅仅对访问spzx\",{\"1\":{\"143\":1}}],[\"因此可以借助于\",{\"1\":{\"49\":1}}],[\"因此\",{\"1\":{\"46\":1,\"109\":1}}],[\"应该尽可能访问同集群实例\",{\"1\":{\"106\":1}}],[\"如网络抖动\",{\"1\":{\"129\":1}}],[\"如下表所示\",{\"1\":{\"125\":1}}],[\"如下图所示\",{\"1\":{\"116\":1,\"159\":1,\"162\":1}}],[\"如下所示\",{\"1\":{\"106\":1,\"111\":1,\"112\":1,\"139\":1,\"150\":1,\"153\":1,\"154\":1,\"178\":1}}],[\"如果使用队列模式做流控\",{\"1\":{\"183\":1}}],[\"如果直接将qps跑到最大值\",{\"1\":{\"182\":1}}],[\"如果只希望统计从\",{\"1\":{\"180\":1}}],[\"如果只做降级处理\",{\"1\":{\"163\":1}}],[\"如果超过阈值对从该链路请求进行限流\",{\"1\":{\"180\":1}}],[\"如果超出阈值则会熔断该业务\",{\"1\":{\"163\":1}}],[\"如果测试结果不是上述情况\",{\"1\":{\"176\":1}}],[\"如果服务没有访问\",{\"1\":{\"172\":1}}],[\"如果在application\",{\"1\":{\"156\":1}}],[\"如果不是不能访问\",{\"1\":{\"145\":1}}],[\"如果不是就不能正常访问\",{\"1\":{\"145\":1}}],[\"如果不可用\",{\"1\":{\"95\":1}}],[\"如果同时满足则放行\",{\"1\":{\"145\":1}}],[\"如果抛出异常重试结束\",{\"1\":{\"129\":1}}],[\"如果由于网络暂时不可用导致触发了超时机制\",{\"1\":{\"129\":1}}],[\"如果请求一直处于等待状态而不超时\",{\"1\":{\"128\":1}}],[\"如果没有超时机制\",{\"1\":{\"128\":1}}],[\"如果要修改sentinel的默认端口\",{\"1\":{\"171\":1}}],[\"如果要对所有的路由都生效\",{\"1\":{\"144\":1}}],[\"如果要全局生效\",{\"1\":{\"127\":1}}],[\"如果要自定义时\",{\"1\":{\"125\":1}}],[\"如果是放行\",{\"1\":{\"145\":1}}],[\"如果是正常访问\",{\"1\":{\"145\":1}}],[\"如果是局部生效\",{\"1\":{\"127\":1}}],[\"如果是写服务名称\",{\"1\":{\"126\":1}}],[\"如果是服务器挂了\",{\"1\":{\"106\":1}}],[\"如果想更改默认的负载均衡算法\",{\"1\":{\"120\":1}}],[\"如果想完成上面的需求\",{\"1\":{\"91\":1}}],[\"如果实例宕机\",{\"1\":{\"114\":1}}],[\"如果实例宕机超过一定时间\",{\"1\":{\"114\":1}}],[\"如果权重修改为0\",{\"1\":{\"109\":1}}],[\"如果错误\",{\"1\":{\"106\":1}}],[\"如果你不了解它\",{\"1\":{\"48\":1}}],[\"如果你是一个新手\",{\"1\":{\"47\":1}}],[\"依次调用对应服务\",{\"1\":{\"103\":1}}],[\"更改application\",{\"1\":{\"180\":1}}],[\"更改远程调用代码\",{\"1\":{\"103\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"67\":1}}],[\"更新时间\",{\"1\":{\"40\":1}}],[\"所以我们对流量进行控制\",{\"1\":{\"164\":1}}],[\"所以你无需担心它的长度\",{\"1\":{\"6\":1}}],[\"所有进入的请求都要排队\",{\"1\":{\"183\":1}}],[\"所有模块读取配置中心中的内容\",{\"1\":{\"147\":1}}],[\"所有这些谓词都匹配http请求的不同属性\",{\"1\":{\"139\":1}}],[\"所有这些predicate都与http请求的不同属性匹配\",{\"1\":{\"139\":1}}],[\"所有service\",{\"1\":{\"111\":1}}],[\"所提供的负载均衡器\",{\"1\":{\"103\":1}}],[\"编写启动类\",{\"1\":{\"138\":1}}],[\"编写openfeign的客户端\",{\"1\":{\"123\":1}}],[\"编写一个简易的随机负载均衡算法\",{\"1\":{\"102\":1}}],[\"编辑此页链接\",{\"1\":{\"40\":1}}],[\"获取全局过滤器的集合\",{\"1\":{\"146\":1}}],[\"获取路由级别的过滤器和默认过滤器的集合\",{\"1\":{\"146\":1}}],[\"获取所有的key根据key进行遍历\",{\"1\":{\"145\":1}}],[\"获取请求路径中参数\",{\"1\":{\"145\":1}}],[\"获取请求uri\",{\"1\":{\"118\":1}}],[\"获取请求url\",{\"1\":{\"117\":1}}],[\"获取当前时区时间代码\",{\"1\":{\"139\":1}}],[\"获取了一个具体的负载均衡算法对象\",{\"1\":{\"118\":1}}],[\"获取uri路径的主机名\",{\"1\":{\"118\":1}}],[\"获取服务实例列表\",{\"1\":{\"102\":1}}],[\"获取resttemplate远程调用返回结果\",{\"1\":{\"91\":1}}],[\"根据userid查询用户信息的接口方法\",{\"1\":{\"123\":1}}],[\"根据机房进行配置\",{\"1\":{\"106\":1}}],[\"根据服务的id从nacos注册中心中获取服务地址列表\",{\"1\":{\"118\":1}}],[\"根据服务的名称从注册中心中获取服务地址信息\",{\"1\":{\"102\":1}}],[\"根据服务名称从注册中心中获取服务实例列表\",{\"1\":{\"102\":1}}],[\"根据id查询订单数据\",{\"1\":{\"91\":1,\"102\":1}}],[\"进而避免雪崩\",{\"1\":{\"164\":1}}],[\"进而就可以更改远程调用代码\",{\"1\":{\"101\":1}}],[\"进行限流了\",{\"1\":{\"180\":1}}],[\"进行限流\",{\"1\":{\"179\":1}}],[\"进行排序\",{\"1\":{\"146\":1}}],[\"进行测试\",{\"1\":{\"143\":1}}],[\"进行分时放行\",{\"1\":{\"132\":1}}],[\"进行服务间的\",{\"1\":{\"128\":1}}],[\"进行引用\",{\"1\":{\"66\":2}}],[\"需要利用\",{\"1\":{\"186\":1}}],[\"需要对查询订单业务限流\",{\"1\":{\"179\":1}}],[\"需要输入账号和密码\",{\"1\":{\"172\":1}}],[\"需要进行自定义\",{\"1\":{\"142\":1}}],[\"需要在服务清单中剔除不可用的服务\",{\"1\":{\"95\":1}}],[\"需求\",{\"1\":{\"100\":1,\"108\":1,\"143\":1,\"145\":1,\"176\":1}}],[\"8080页面\",{\"1\":{\"172\":1}}],[\"8080\",{\"1\":{\"171\":1,\"173\":1}}],[\"8\",{\"0\":{\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"181\":1,\"184\":1},\"1\":{\"180\":1}}],[\"8222\",{\"1\":{\"138\":2}}],[\"8848\",{\"1\":{\"98\":3,\"100\":1,\"138\":2,\"151\":1}}],[\"8<\",{\"1\":{\"89\":1,\"90\":1}}],[\"拉取镜像\",{\"1\":{\"98\":1}}],[\"并进行限流操作\",{\"1\":{\"180\":1}}],[\"并连接sentinel的控制台\",{\"1\":{\"173\":1}}],[\"并持续演进\",{\"1\":{\"168\":1}}],[\"并通过逻辑and\",{\"1\":{\"139\":1}}],[\"并加入如下的依赖\",{\"1\":{\"130\":1}}],[\"并且在启动类上添加feign接口的包扫描路径\",{\"1\":{\"130\":1}}],[\"并且会将数据库所对应的实体类也抽取到一个独立的模块中\",{\"1\":{\"130\":1}}],[\"并且配置负载均衡的使用者\",{\"1\":{\"120\":1}}],[\"并且实例会定时上报自身的健康状态给nacos注册中心\",{\"1\":{\"114\":1}}],[\"并且它会自动换行\",{\"1\":{\"6\":1}}],[\"并获取所有服务的实例清单\",{\"1\":{\"95\":1}}],[\"端口号等\",{\"1\":{\"95\":1}}],[\"解决方案\",{\"0\":{\"160\":1},\"1\":{\"106\":1}}],[\"解决传统远程调用所存在的问题\",{\"1\":{\"94\":1}}],[\"解耦合\",{\"1\":{\"83\":1}}],[\"必须使用springboot\",{\"1\":{\"93\":1}}],[\"实体类所对应的依赖\",{\"1\":{\"130\":1}}],[\"实际部署中会出现这样的场景\",{\"1\":{\"109\":1}}],[\"实际的文章内容\",{\"1\":{\"43\":1}}],[\"实例类型\",{\"0\":{\"114\":1}}],[\"实例3\",{\"1\":{\"107\":1}}],[\"实例2\",{\"1\":{\"107\":1}}],[\"实例2和实例3属于bj\",{\"1\":{\"107\":1}}],[\"实例1属于sh\",{\"1\":{\"107\":1}}],[\"实例所属集群分配情况\",{\"1\":{\"107\":1}}],[\"实现配置的热更新有两种方式\",{\"1\":{\"155\":1}}],[\"实现配置的热更新\",{\"1\":{\"148\":1}}],[\"实现过滤器逻辑\",{\"1\":{\"145\":1}}],[\"实现过滤器排序\",{\"1\":{\"145\":1}}],[\"实现来年两个接口\",{\"1\":{\"145\":1}}],[\"实现代码\",{\"1\":{\"145\":1}}],[\"实现getorder方法\",{\"1\":{\"145\":1}}],[\"实现globlefilter里面的方法\",{\"1\":{\"145\":1}}],[\"实现ordered接口定义该过滤器的顺序❓过滤器顺接口\",{\"1\":{\"145\":1}}],[\"实现\",{\"1\":{\"143\":1}}],[\"实现组件复用的目的\",{\"1\":{\"130\":1}}],[\"实现远程调用过程\",{\"1\":{\"122\":1}}],[\"实现步骤\",{\"1\":{\"100\":1,\"186\":1}}],[\"实现微服务\",{\"1\":{\"93\":1}}],[\"缺少负载均衡机制\",{\"1\":{\"92\":1}}],[\"缺点\",{\"1\":{\"82\":1,\"83\":1}}],[\"维护性差\",{\"1\":{\"92\":1}}],[\"维护困难\",{\"1\":{\"82\":1}}],[\"返回的是一种默认值\",{\"1\":{\"163\":1}}],[\"返回值类型\",{\"1\":{\"123\":1}}],[\"返回服务实例\",{\"1\":{\"102\":1}}],[\"返回订单数据\",{\"1\":{\"91\":1,\"102\":1}}],[\"返回顶部按钮\",{\"1\":{\"40\":1,\"67\":1}}],[\"接收返回主句\",{\"1\":{\"91\":1}}],[\"这种配置是对查询商品这个接口的所有商品一视同仁\",{\"1\":{\"185\":1}}],[\"这种兜底方案也将其称之为降级逻辑\",{\"1\":{\"163\":1}}],[\"这种返回就是一种兜底方案\",{\"1\":{\"163\":1}}],[\"这种设计思想\",{\"1\":{\"162\":1}}],[\"这就是熔断的机制\",{\"1\":{\"163\":1}}],[\"这是默认值\",{\"1\":{\"126\":1}}],[\"这是一个有着\",{\"1\":{\"6\":1}}],[\"这是一个\",{\"0\":{\"6\":1}}],[\"这里发起请求的qps为5\",{\"1\":{\"186\":1}}],[\"这里不要点击hot后面的按钮\",{\"1\":{\"186\":1}}],[\"这里用default就是全局配置\",{\"1\":{\"126\":1}}],[\"这里的this\",{\"1\":{\"118\":1}}],[\"这样这个端点就会触发阈值\",{\"1\":{\"179\":1}}],[\"这样的一个调用链就叫做簇点链路\",{\"1\":{\"175\":1}}],[\"这样才能触发sentinel的监控\",{\"1\":{\"173\":1}}],[\"这样\",{\"1\":{\"123\":1}}],[\"这个资源添加热点参数限流\",{\"1\":{\"186\":1}}],[\"这个资源设置限流\",{\"1\":{\"182\":1,\"183\":1}}],[\"这个资源设置流控规则\",{\"1\":{\"176\":1}}],[\"这个就叫做阈值\",{\"1\":{\"167\":1}}],[\"这个值由spring进行指定\",{\"1\":{\"146\":1}}],[\"这个客户端主要是基于springmvc的注解来声明远程调用的信息\",{\"1\":{\"123\":1}}],[\"这个接口\",{\"1\":{\"91\":1}}],[\"47\",{\"1\":{\"144\":1}}],[\"42\",{\"1\":{\"144\":1}}],[\"4gateway初体验\",{\"0\":{\"138\":1}}],[\"4代码优化\",{\"0\":{\"130\":1}}],[\"4补充知识\",{\"0\":{\"119\":1}}],[\"45a9\",{\"1\":{\"113\":1}}],[\"4a88035e\",{\"1\":{\"113\":1}}],[\"4nacos高级特性\",{\"0\":{\"104\":1}}],[\"4\",{\"0\":{\"91\":1,\"92\":1,\"93\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"144\":1,\"156\":1,\"173\":1,\"181\":1},\"1\":{\"90\":1,\"123\":1,\"130\":1,\"138\":1,\"139\":1,\"175\":1,\"179\":1,\"180\":1}}],[\"unify\",{\"1\":{\"180\":1}}],[\"unauthorized\",{\"1\":{\"145\":1}}],[\"uri=lb\",{\"1\":{\"138\":2}}],[\"uri\",{\"1\":{\"138\":2,\"139\":1,\"143\":1,\"144\":1}}],[\"url以及响应状态码和执行时间\",{\"1\":{\"126\":1}}],[\"url\",{\"1\":{\"90\":1}}],[\"users的资源\",{\"1\":{\"180\":1}}],[\"users\",{\"1\":{\"180\":3}}],[\"userservice\",{\"1\":{\"143\":1,\"153\":3,\"154\":3,\"180\":2,\"186\":1}}],[\"user中的usercontroller中的端点\",{\"1\":{\"175\":1}}],[\"user中整合sentinel\",{\"1\":{\"173\":1}}],[\"userapplication\",{\"1\":{\"154\":2}}],[\"user项目的\",{\"1\":{\"151\":1}}],[\"usercontroller\",{\"1\":{\"143\":1,\"153\":2,\"154\":2,\"186\":1}}],[\"user路由下\",{\"1\":{\"143\":1}}],[\"user微服务中\",{\"1\":{\"151\":1}}],[\"user微服务中加入如下依赖\",{\"1\":{\"130\":1}}],[\"user微服务中所定义的实体类\",{\"1\":{\"130\":1}}],[\"user微服务中所对应的实体类抽取到spzx\",{\"1\":{\"130\":1}}],[\"user微服务所对应的服务实例属于public的名称空间\",{\"1\":{\"113\":1}}],[\"user实体类抽取到一个独立的模块中\",{\"1\":{\"130\":1}}],[\"userfeignclient\",{\"1\":{\"123\":4}}],[\"user的任意接口\",{\"1\":{\"173\":1}}],[\"user的接口方法中读取请求头数据\",{\"1\":{\"143\":1}}],[\"user的请求有效\",{\"1\":{\"143\":1}}],[\"user的请求添加一个请求头\",{\"1\":{\"143\":1}}],[\"user的实例列表\",{\"1\":{\"109\":1}}],[\"user的application\",{\"1\":{\"107\":1}}],[\"userid\",{\"1\":{\"91\":1,\"123\":4,\"143\":4,\"153\":4,\"154\":4,\"176\":1,\"179\":1,\"182\":1,\"183\":1,\"186\":6}}],[\"username\",{\"1\":{\"90\":1,\"145\":3,\"171\":1}}],[\"user\",{\"1\":{\"90\":2,\"91\":6,\"100\":2,\"102\":6,\"103\":3,\"118\":3,\"120\":1,\"123\":8,\"126\":1,\"127\":1,\"135\":2,\"138\":10,\"139\":3,\"143\":4,\"144\":3,\"151\":1,\"153\":2,\"154\":2,\"173\":1,\"175\":1,\"176\":1,\"179\":9,\"180\":10,\"182\":1,\"183\":1,\"186\":3}}],[\"up效果\",{\"1\":{\"182\":1}}],[\"up也叫预热模式\",{\"1\":{\"182\":1}}],[\"updateuserbyid\",{\"1\":{\"179\":4}}],[\"updateuserbyid资源被访问的qps超过5时\",{\"1\":{\"179\":1}}],[\"updateuserbyid资源\",{\"1\":{\"179\":1}}],[\"updateuserbyid资源的请求进行统计\",{\"1\":{\"179\":1}}],[\"up\",{\"0\":{\"182\":1},\"1\":{\"19\":1,\"181\":1,\"182\":1}}],[\"jmeter测试\",{\"1\":{\"180\":1,\"182\":1,\"183\":1,\"186\":1}}],[\"jmeter\",{\"1\":{\"176\":2}}],[\"jar\",{\"1\":{\"171\":4,\"176\":2}}],[\"java\",{\"1\":{\"168\":2,\"171\":2,\"176\":2}}],[\"java客户端\",{\"1\":{\"168\":1}}],[\"java代码的方式\",{\"0\":{\"127\":1}}],[\"java<\",{\"1\":{\"89\":1,\"90\":1}}],[\"jdbc\",{\"1\":{\"90\":2}}],[\"now\",{\"1\":{\"139\":1}}],[\"none\",{\"1\":{\"27\":1,\"125\":1,\"126\":1}}],[\"nextint\",{\"1\":{\"102\":1}}],[\"new\",{\"1\":{\"91\":1,\"102\":1,\"103\":1,\"120\":2,\"129\":2,\"146\":2}}],[\"nacos作为配置中心时所对应的依赖\",{\"1\":{\"151\":1}}],[\"nacos作为注册中心的依赖\",{\"1\":{\"100\":1}}],[\"nacos中添加配置\",{\"0\":{\"150\":1}}],[\"nacos中的服务实例存在两种类型\",{\"1\":{\"114\":1}}],[\"nacos入门\",{\"0\":{\"149\":1}}],[\"nacos一方面可以将配置集中管理\",{\"1\":{\"148\":1}}],[\"nacos除了可以做注册中心\",{\"1\":{\"147\":1}}],[\"nacos配置中心的配置\",{\"1\":{\"156\":1}}],[\"nacos配置中心\",{\"0\":{\"147\":1}}],[\"nacos服务发现依赖\",{\"1\":{\"138\":1}}],[\"nacos也是支持多环境隔离配置的\",{\"1\":{\"111\":1}}],[\"nacos提供了权重配置来控制访问频率\",{\"1\":{\"109\":1}}],[\"nacos启动\",{\"1\":{\"98\":1}}],[\"nacos2\",{\"1\":{\"98\":1}}],[\"nacos\",{\"0\":{\"98\":1},\"1\":{\"98\":8,\"100\":2,\"107\":3,\"108\":2,\"109\":1,\"113\":1,\"114\":1,\"138\":3,\"151\":5}}],[\"nacos注册中心会主动询问实例的健康状态\",{\"1\":{\"114\":1}}],[\"nacos注册中心简介\",{\"0\":{\"95\":1}}],[\"nacos注册中心\",{\"0\":{\"94\":1}}],[\"name=spzx\",{\"1\":{\"138\":1}}],[\"name=bj\",{\"1\":{\"107\":2}}],[\"name表示该负载均衡器要应用的服务名称\",{\"1\":{\"120\":1}}],[\"namespace\",{\"1\":{\"111\":1,\"113\":1}}],[\"name\",{\"1\":{\"90\":1,\"98\":1,\"100\":1,\"107\":1,\"108\":1,\"120\":5,\"138\":1,\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"创建启动类\",{\"1\":{\"138\":1}}],[\"创建网关微服务模块\",{\"1\":{\"138\":2}}],[\"创建容器\",{\"1\":{\"98\":1}}],[\"创建resttemplate对象\",{\"1\":{\"91\":1}}],[\"创建子模块\",{\"1\":{\"90\":1}}],[\"创建一个maven父工程\",{\"1\":{\"89\":1}}],[\"删除spzx\",{\"1\":{\"130\":1}}],[\"删除src目录\",{\"1\":{\"89\":1}}],[\"删除线\",{\"1\":{\"6\":1}}],[\"指定访问集群机房\",{\"1\":{\"106\":1}}],[\"指定当前服务默认是哪个机房\",{\"1\":{\"106\":1}}],[\"指定spring\",{\"1\":{\"89\":1}}],[\"指南\",{\"0\":{\"73\":1}}],[\"01\",{\"1\":{\"144\":1}}],[\"00\",{\"1\":{\"139\":1,\"144\":1}}],[\"06\",{\"1\":{\"139\":1}}],[\"07\",{\"1\":{\"139\":2,\"144\":1}}],[\"0~1\",{\"1\":{\"109\":1}}],[\"0\",{\"1\":{\"89\":7,\"109\":1,\"130\":2,\"138\":9,\"139\":1,\"145\":1,\"171\":4}}],[\"步骤如下\",{\"1\":{\"173\":1}}],[\"步骤分析\",{\"1\":{\"145\":1}}],[\"步骤\",{\"1\":{\"89\":1,\"108\":1,\"151\":1,\"176\":1}}],[\"父工程搭建\",{\"0\":{\"89\":1}}],[\"远程调用\",{\"1\":{\"86\":1,\"123\":1}}],[\"⭐\",{\"1\":{\"168\":1}}],[\"⭐设置远程调用的超时时间\",{\"1\":{\"163\":1}}],[\"⭐我们最终的目的\",{\"1\":{\"155\":1}}],[\"⭐sentinel\",{\"1\":{\"86\":1}}],[\"⭐gateway\",{\"1\":{\"86\":1}}],[\"⭐loadbalancer\",{\"1\":{\"86\":1}}],[\"⭐openfeign\",{\"1\":{\"86\":1}}],[\"⭐nacos\",{\"1\":{\"86\":1}}],[\"注入实体类\",{\"1\":{\"154\":1}}],[\"注入resttemplate远程调用工具\",{\"1\":{\"102\":1}}],[\"注意事项\",{\"1\":{\"186\":1}}],[\"注意\",{\"1\":{\"103\":1,\"109\":1,\"176\":2}}],[\"注解\",{\"1\":{\"103\":1}}],[\"注册到nacos中\",{\"1\":{\"100\":1}}],[\"注册中心需要以心跳的方式去检测清单中的服务是否可用\",{\"1\":{\"95\":1}}],[\"注册中心\",{\"1\":{\"86\":1,\"147\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"64\":1}}],[\"go\",{\"1\":{\"168\":1}}],[\"goods\",{\"1\":{\"185\":1}}],[\"good\",{\"1\":{\"144\":1}}],[\"globalfilters\",{\"1\":{\"146\":1}}],[\"globalfilter\",{\"1\":{\"145\":1,\"146\":3}}],[\"gatewayfilterfactories\",{\"1\":{\"146\":1}}],[\"gatewayfilters\",{\"1\":{\"146\":2}}],[\"gatewayfilterchain\",{\"1\":{\"145\":1}}],[\"gatewayfilter\",{\"1\":{\"142\":1}}],[\"gateway提供了31种不同的过滤器\",{\"1\":{\"142\":1}}],[\"gateway包含许多内置的route\",{\"1\":{\"139\":1}}],[\"gateway包括许多内置的route\",{\"1\":{\"139\":1}}],[\"gateway创建route对象时\",{\"1\":{\"139\":1}}],[\"gateway将路由匹配作为spring\",{\"1\":{\"139\":1}}],[\"gatewayapplication\",{\"1\":{\"138\":2}}],[\"gateway<\",{\"1\":{\"138\":1}}],[\"gateway\",{\"1\":{\"138\":12,\"139\":3,\"142\":1,\"143\":1,\"144\":1,\"146\":2}}],[\"gateway发出请求\",{\"1\":{\"137\":1}}],[\"gateway网关底层使用\",{\"1\":{\"132\":1}}],[\"gateway组件\",{\"0\":{\"131\":1}}],[\"gatway是网关组件\",{\"1\":{\"132\":1}}],[\"gatway网关\",{\"1\":{\"86\":1}}],[\"github\",{\"1\":{\"122\":1,\"170\":1}}],[\"getdateformat\",{\"1\":{\"154\":1,\"186\":1}}],[\"getorder\",{\"1\":{\"145\":1}}],[\"getrequiredattribute\",{\"1\":{\"146\":1}}],[\"getrequest\",{\"1\":{\"145\":1}}],[\"getresponse\",{\"1\":{\"145\":2}}],[\"getfilters\",{\"1\":{\"146\":1}}],[\"getfirst\",{\"1\":{\"145\":1}}],[\"getforobject\",{\"1\":{\"91\":1,\"102\":1,\"103\":1}}],[\"getqueryparams\",{\"1\":{\"145\":1}}],[\"getmapping\",{\"1\":{\"123\":1,\"143\":1,\"153\":1,\"154\":1,\"179\":1,\"180\":2,\"186\":1}}],[\"getlazyprovider\",{\"1\":{\"120\":1}}],[\"getproperty\",{\"1\":{\"120\":1}}],[\"getport\",{\"1\":{\"102\":1}}],[\"geturi\",{\"1\":{\"118\":1}}],[\"getuserid\",{\"1\":{\"91\":1,\"102\":1,\"103\":1,\"123\":1}}],[\"get\",{\"1\":{\"102\":1,\"123\":1}}],[\"getinstances\",{\"1\":{\"102\":1}}],[\"gethost\",{\"1\":{\"102\":1,\"118\":1}}],[\"group都在同一个namespace\",{\"1\":{\"111\":1}}],[\"group\",{\"1\":{\"111\":1}}],[\"groupid>\",{\"1\":{\"89\":5,\"90\":4,\"100\":1,\"103\":1,\"123\":1,\"130\":4,\"138\":3,\"151\":1,\"173\":1}}],[\"grow\",{\"1\":{\"21\":1}}],[\"green\",{\"1\":{\"21\":2}}],[\"腾讯组件\",{\"1\":{\"86\":1}}],[\"目前最流行的组件\",{\"1\":{\"86\":1}}],[\"目录\",{\"0\":{\"71\":1,\"78\":1}}],[\"不用实现业务\",{\"1\":{\"180\":1}}],[\"不要点击菜单中的执行按钮来运行\",{\"1\":{\"176\":1}}],[\"不要让其影响到其他的程序的运行\",{\"1\":{\"162\":1}}],[\"不需要额外的\",{\"1\":{\"168\":1}}],[\"不依赖任何框架\",{\"1\":{\"168\":1}}],[\"不再调用执行熔断\",{\"1\":{\"163\":1}}],[\"不再更新\",{\"1\":{\"86\":1}}],[\"不能访问\",{\"1\":{\"135\":1}}],[\"不利于后期代码维护在实际的工作过程中\",{\"1\":{\"130\":1}}],[\"不记录任何日志信息\",{\"1\":{\"126\":1}}],[\"不过会使用ribbon的重试\",{\"1\":{\"125\":1}}],[\"不会无休止等待\",{\"1\":{\"161\":1}}],[\"不会从服务列表剔除\",{\"1\":{\"114\":1}}],[\"不会考虑机器的性能问题\",{\"1\":{\"109\":1}}],[\"不同路由访问不同内容\",{\"1\":{\"134\":1}}],[\"不同模块\",{\"1\":{\"83\":1}}],[\"不同元素可以有相同的动画顺序\",{\"1\":{\"25\":1}}],[\"子框架\",{\"1\":{\"85\":1}}],[\"每1秒请求量不超过10\",{\"1\":{\"186\":1}}],[\"每1秒请求量不超过4\",{\"1\":{\"186\":1}}],[\"每1秒相同参数值的请求数不能超过2\",{\"1\":{\"185\":1}}],[\"每秒处理5个请求\",{\"1\":{\"167\":1}}],[\"每秒的请求数\",{\"1\":{\"164\":1}}],[\"每一种路由工厂的使用spring\",{\"1\":{\"139\":1}}],[\"每一个过滤器的功能都是固定的\",{\"1\":{\"145\":1}}],[\"每一个服务消费方要调用服务提供方\",{\"1\":{\"130\":1}}],[\"每一个服务注册到nacos注册中心都需要提供一个服务名称\",{\"1\":{\"100\":1}}],[\"每一个机房的服务可以看做成是一个集群\",{\"1\":{\"106\":1}}],[\"每一个组件都是用来解决问题架构中所遇到的问题\",{\"1\":{\"85\":1}}],[\"每台服务器放的不同内容\",{\"1\":{\"83\":1}}],[\"每个服务做到对应唯一业务能力\",{\"1\":{\"83\":1}}],[\"每个服务模块独立运行\",{\"1\":{\"83\":1}}],[\"多次调用都是失败\",{\"1\":{\"163\":1}}],[\"多种谓词工厂可以组合\",{\"1\":{\"139\":1}}],[\"多个route\",{\"1\":{\"139\":1}}],[\"多个动画片段\",{\"0\":{\"23\":1}}],[\"多台服务器上面部署不同内容模块\",{\"1\":{\"83\":1}}],[\"多台服务器上部署相同的项目\",{\"1\":{\"83\":1}}],[\"负载均衡组件\",{\"1\":{\"138\":1}}],[\"负载均衡算法\",{\"0\":{\"119\":1}}],[\"负载均衡就是负载请求通过多台服务器进行处理\",{\"1\":{\"92\":1}}],[\"负载均衡\",{\"1\":{\"83\":1,\"86\":1}}],[\"服务端口\",{\"1\":{\"171\":1}}],[\"服务和服务之间的稳定性变得越来越重要\",{\"1\":{\"168\":1}}],[\"服务降级\",{\"1\":{\"161\":1}}],[\"服务间调用关系错综复杂\",{\"1\":{\"159\":1}}],[\"服务间的通讯\",{\"1\":{\"83\":1}}],[\"服务不可用等\",{\"1\":{\"129\":1}}],[\"服务器每秒能处理的请求数量\",{\"1\":{\"166\":1}}],[\"服务器在压力过大的情况下会发生宕机\",{\"1\":{\"164\":1}}],[\"服务器数量=\",{\"1\":{\"119\":1}}],[\"服务器设备性能有差异\",{\"1\":{\"109\":1}}],[\"服务集群\",{\"0\":{\"104\":1}}],[\"服务消费方向服务注册中心咨询服务\",{\"1\":{\"95\":1}}],[\"服务提供方的服务ip地址和端口号可以使用服务提供方的服务名称进行替换\",{\"1\":{\"103\":1}}],[\"服务提供方在启动的时候\",{\"1\":{\"95\":1}}],[\"服务提供唯一标准的接口\",{\"1\":{\"83\":1}}],[\"服务方提供ip地址发生改变\",{\"1\":{\"92\":1}}],[\"服务保护组件\",{\"1\":{\"86\":1}}],[\"服务网关\",{\"1\":{\"86\":1}}],[\"堵路部署和交付\",{\"1\":{\"83\":1}}],[\"团队独立\",{\"1\":{\"83\":1}}],[\"自动支持热更新\",{\"1\":{\"155\":1}}],[\"自治\",{\"1\":{\"83\":1}}],[\"自定义重试器\",{\"1\":{\"129\":1}}],[\"自定义它们\",{\"1\":{\"67\":1}}],[\"自定义对齐\",{\"0\":{\"55\":1}}],[\"自定义标题\",{\"1\":{\"52\":5}}],[\"自定义容器\",{\"0\":{\"52\":1}}],[\"特点\",{\"1\":{\"83\":1,\"163\":1}}],[\"前端访问问题\",{\"1\":{\"83\":1}}],[\"灵活性强\",{\"1\":{\"83\":1}}],[\"容错性高\",{\"1\":{\"83\":1}}],[\"谁修改某个服务\",{\"1\":{\"83\":1}}],[\"相关概念\",{\"0\":{\"175\":1}}],[\"相关信息\",{\"1\":{\"48\":1}}],[\"相同配置部分进行抽取\",{\"1\":{\"148\":1}}],[\"相互独立\",{\"1\":{\"83\":1}}],[\"独立部署\",{\"1\":{\"83\":1}}],[\"按照order的值进行排序\",{\"1\":{\"146\":1}}],[\"按照特定的方式实现特定功能就是算法\",{\"1\":{\"119\":1}}],[\"按照功能拆分成多个独立的服务模块\",{\"1\":{\"83\":1}}],[\"按下\",{\"1\":{\"34\":1,\"36\":1,\"38\":1}}],[\"把一部分的请求统计到了下一秒中导致的\",{\"1\":{\"176\":1}}],[\"把一个完整项目\",{\"1\":{\"83\":1}}],[\"把多个为服务模块中相同配置\",{\"1\":{\"147\":1}}],[\"把之前的缓存删除\",{\"1\":{\"106\":1}}],[\"把项目中所有功能模块全部写在一个工程中\",{\"1\":{\"82\":1}}],[\"微服务中无需重启即可让配置生效\",{\"1\":{\"155\":1}}],[\"微服务需要进行改造\",{\"1\":{\"151\":1}}],[\"微服务集成配置中心\",{\"0\":{\"151\":1}}],[\"微服务互相访问时\",{\"1\":{\"106\":1}}],[\"微服务的管理\",{\"1\":{\"83\":1}}],[\"微服务架构\",{\"1\":{\"83\":1}}],[\"微小服务\",{\"1\":{\"83\":1}}],[\"易于维护\",{\"1\":{\"82\":1}}],[\"结构简单\",{\"1\":{\"82\":1}}],[\"结束\",{\"0\":{\"39\":1}}],[\"风险高\",{\"1\":{\"82\":1}}],[\"拓展性差\",{\"1\":{\"82\":1}}],[\"牵一发动全身\",{\"1\":{\"82\":1}}],[\"单一职责\",{\"1\":{\"83\":1}}],[\"单体架构\",{\"1\":{\"82\":1}}],[\"单词\",{\"1\":{\"56\":1}}],[\"此时qps的曲线这样的\",{\"1\":{\"183\":1}}],[\"此时就需求使用全局过滤器\",{\"1\":{\"145\":1}}],[\"此时order微服务所对应的服务实例就属于新的名称空间\",{\"1\":{\"113\":1}}],[\"此页面应当包含\",{\"1\":{\"67\":1}}],[\"此文字有脚注\",{\"1\":{\"57\":1}}],[\"徽章\",{\"1\":{\"66\":1}}],[\"徽章文字\",{\"1\":{\"66\":1}}],[\"per\",{\"0\":{\"166\":1}}],[\"post\",{\"1\":{\"137\":2}}],[\"port=8090\",{\"1\":{\"171\":1}}],[\"port=8222\",{\"1\":{\"138\":1}}],[\"port=10103\",{\"1\":{\"107\":1}}],[\"port=10101\",{\"1\":{\"107\":1}}],[\"port\",{\"1\":{\"90\":1,\"138\":1,\"171\":1}}],[\"p\",{\"1\":{\"98\":2}}],[\"pull\",{\"1\":{\"98\":1}}],[\"public\",{\"1\":{\"66\":1,\"91\":4,\"102\":3,\"103\":1,\"120\":3,\"123\":4,\"127\":2,\"129\":3,\"130\":2,\"138\":2,\"143\":1,\"145\":3,\"146\":1,\"153\":2,\"154\":5,\"179\":1,\"180\":4,\"186\":1}}],[\"println\",{\"1\":{\"139\":1,\"180\":4}}],[\"private\",{\"1\":{\"91\":2,\"102\":3,\"123\":2,\"129\":2,\"153\":2,\"154\":4}}],[\"preview\",{\"1\":{\"171\":2}}],[\"prefix\",{\"1\":{\"154\":1}}],[\"predicate对象可以赋值给\",{\"1\":{\"139\":1}}],[\"predicate工厂可以进行组合\",{\"1\":{\"139\":1}}],[\"predicate工厂\",{\"1\":{\"139\":1}}],[\"predicate\",{\"1\":{\"139\":2}}],[\"predicates\",{\"1\":{\"138\":4,\"139\":2,\"143\":1,\"144\":1}}],[\"pre\",{\"1\":{\"137\":2}}],[\"property\",{\"1\":{\"120\":2}}],[\"properties>\",{\"1\":{\"89\":1,\"90\":1}}],[\"projectlombok<\",{\"1\":{\"90\":1,\"130\":1}}],[\"project\",{\"1\":{\"89\":1,\"90\":1}}],[\"patternproperties\",{\"1\":{\"154\":5,\"186\":1}}],[\"pattern\",{\"1\":{\"153\":3,\"154\":3}}],[\"path=\",{\"1\":{\"138\":2,\"139\":1,\"143\":1,\"144\":1}}],[\"pathvariable\",{\"1\":{\"123\":1,\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"param\",{\"1\":{\"120\":2}}],[\"parent下创建子模块spzx\",{\"1\":{\"138\":1}}],[\"parent>\",{\"1\":{\"89\":1}}],[\"parent<\",{\"1\":{\"89\":1}}],[\"package\",{\"1\":{\"90\":1}}],[\"password\",{\"1\":{\"90\":1,\"171\":1}}],[\"plugin\",{\"1\":{\"51\":1}}],[\"分为两个部分\",{\"1\":{\"168\":1}}],[\"分为两部分\",{\"1\":{\"168\":1}}],[\"分布式\",{\"1\":{\"83\":1}}],[\"分担服务器访问压力\",{\"1\":{\"83\":1}}],[\"分类为\",{\"1\":{\"65\":1}}],[\"分割垂直幻灯片\",{\"1\":{\"3\":1}}],[\"日志的输出\",{\"1\":{\"137\":1}}],[\"日志输出\",{\"1\":{\"137\":1}}],[\"日志级别为basic\",{\"1\":{\"127\":1}}],[\"日志配置\",{\"0\":{\"125\":1}}],[\"日\",{\"1\":{\"65\":1}}],[\"月\",{\"1\":{\"65\":1}}],[\"年\",{\"1\":{\"65\":1,\"168\":5}}],[\"写作日期为\",{\"1\":{\"65\":1}}],[\"卡片\",{\"0\":{\"61\":1}}],[\"计划\",{\"1\":{\"59\":2}}],[\"任务列表\",{\"0\":{\"59\":1}}],[\"脚注\",{\"0\":{\"57\":1}}],[\"我设置qps的maxthreshold为10\",{\"1\":{\"182\":1}}],[\"我们支持\",{\"1\":{\"191\":1,\"195\":1}}],[\"我们希望这部分商品的qps限制与其它商品不一样\",{\"1\":{\"185\":1}}],[\"我们希望性能好的机器承担更多的用户请求\",{\"1\":{\"109\":1}}],[\"我们是对用户查询\",{\"1\":{\"179\":1}}],[\"我们刚才访问的spzx\",{\"1\":{\"175\":1}}],[\"我们先学习这种模式\",{\"1\":{\"174\":1}}],[\"我们需要做熔断操作\",{\"1\":{\"163\":1}}],[\"我们需要一种统一配置管理方案\",{\"1\":{\"148\":1}}],[\"我们业务系统也可以使用这种思想来防止出现雪崩效应\",{\"1\":{\"162\":1}}],[\"我们可以点击对应资源后面的按钮来设置规则\",{\"1\":{\"175\":1}}],[\"我们可以参考示例代码进行使用\",{\"1\":{\"139\":1}}],[\"我们可以设置权重\",{\"1\":{\"109\":1}}],[\"我们在浏览器访问\",{\"1\":{\"179\":1}}],[\"我们在配置文件中只是配置了一个访问路径的规则\",{\"1\":{\"139\":1}}],[\"我们在spzx\",{\"1\":{\"123\":1,\"173\":1}}],[\"我们就会执行熔断\",{\"1\":{\"163\":1}}],[\"我们就演示下网关的基本路由功能\",{\"1\":{\"138\":1}}],[\"我们就需要在order为服务中向user微服务发起一个http请求\",{\"1\":{\"91\":1}}],[\"我们继续跟入\",{\"1\":{\"118\":1}}],[\"我们也可以创建新的名称空间\",{\"1\":{\"112\":1}}],[\"我们的微服务系统结构如下\",{\"1\":{\"88\":1}}],[\"我在右对齐\",{\"1\":{\"55\":1}}],[\"我是居中的\",{\"1\":{\"55\":1}}],[\"危险容器\",{\"1\":{\"52\":1}}],[\"警告容器\",{\"1\":{\"52\":1}}],[\"提高很高的数据\",{\"1\":{\"163\":1}}],[\"提供更好的用户体验\",{\"1\":{\"128\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"51\":1}}],[\"提供了nacos注册中心\",{\"1\":{\"94\":1}}],[\"提示\",{\"1\":{\"66\":1}}],[\"提示容器\",{\"1\":{\"52\":1}}],[\"与前面的过滤器合并后根据order排序\",{\"1\":{\"146\":1}}],[\"与gatewayfilter的作用一样\",{\"1\":{\"145\":1}}],[\"与语言和技术无关\",{\"1\":{\"83\":1}}],[\"与\",{\"1\":{\"52\":1}}],[\"信息容器\",{\"1\":{\"52\":1}}],[\"void\",{\"1\":{\"129\":1,\"130\":1,\"138\":1,\"154\":1,\"180\":2}}],[\"value注入的变量所在类上添加注解\",{\"1\":{\"155\":1}}],[\"value注解读取自定义配置\",{\"1\":{\"153\":1}}],[\"value\",{\"0\":{\"153\":1},\"1\":{\"120\":1,\"123\":1,\"127\":1,\"143\":2,\"153\":4,\"154\":5,\"179\":1,\"180\":2,\"186\":2}}],[\"variable\",{\"1\":{\"52\":1}}],[\"v2\",{\"1\":{\"98\":2}}],[\"version\",{\"1\":{\"89\":4}}],[\"version>8\",{\"1\":{\"89\":1}}],[\"version>3\",{\"1\":{\"89\":1}}],[\"version>\",{\"1\":{\"89\":9,\"130\":2}}],[\"version>2022\",{\"1\":{\"89\":2}}],[\"vuepress\",{\"0\":{\"50\":1},\"1\":{\"46\":2,\"48\":2,\"49\":1,\"50\":2,\"51\":1,\"66\":1}}],[\"安全的在\",{\"1\":{\"52\":1}}],[\"主要功能为入口流量控制\",{\"1\":{\"168\":1}}],[\"主要功能与配置演示\",{\"0\":{\"70\":1}}],[\"主要从\",{\"1\":{\"46\":1}}],[\"主题包含了一个自定义徽章可以使用\",{\"1\":{\"66\":1}}],[\"主题扩展了更多\",{\"1\":{\"51\":1}}],[\"主题扩展\",{\"0\":{\"51\":1}}],[\"中\",{\"1\":{\"146\":1}}],[\"中设置页面信息\",{\"1\":{\"65\":1}}],[\"中使用\",{\"1\":{\"52\":1}}],[\"中的\",{\"1\":{\"50\":1}}],[\"中很重要的一个概念\",{\"1\":{\"48\":1}}],[\"对hot这个资源的0号参数\",{\"1\":{\"185\":1}}],[\"对超出阈值的请求同样是拒绝并抛出异常\",{\"1\":{\"181\":1}}],[\"对高优先级的资源的流量进行统计\",{\"1\":{\"179\":1}}],[\"对哪个端点限流\",{\"1\":{\"179\":1}}],[\"对a进行限流\",{\"1\":{\"179\":1}}],[\"对指定链路限流\",{\"1\":{\"178\":1}}],[\"对当前资源限流\",{\"1\":{\"178\":1,\"179\":1}}],[\"对请求进行拦截\",{\"1\":{\"132\":1}}],[\"对其他功能产生影响\",{\"1\":{\"82\":1}}],[\"对于服务器来说是更友好的\",{\"1\":{\"183\":1}}],[\"对于\",{\"1\":{\"66\":1}}],[\"对\",{\"1\":{\"50\":1,\"179\":2}}],[\"为了保证每一个服务的高可用\",{\"1\":{\"106\":1}}],[\"为了丰富文档写作\",{\"1\":{\"50\":1}}],[\"为每个\",{\"1\":{\"48\":1}}],[\"isdebugenabled\",{\"1\":{\"146\":1}}],[\"is\",{\"1\":{\"144\":1}}],[\"io\",{\"1\":{\"139\":1,\"142\":1,\"168\":1}}],[\"if\",{\"1\":{\"129\":1,\"145\":1,\"146\":1}}],[\"ip\",{\"1\":{\"95\":1}}],[\"ibatis\",{\"1\":{\"90\":1}}],[\"import\",{\"1\":{\"151\":1}}],[\"implements\",{\"1\":{\"102\":1,\"123\":1,\"129\":1,\"145\":1}}],[\"implement\",{\"1\":{\"91\":1}}],[\"impl\",{\"1\":{\"90\":1}}],[\"image\",{\"1\":{\"83\":4,\"88\":1,\"90\":2,\"91\":1,\"92\":3,\"95\":2,\"97\":1,\"98\":1,\"100\":1,\"106\":2,\"107\":3,\"109\":2,\"111\":2,\"112\":1,\"113\":1,\"116\":1,\"117\":1,\"118\":2,\"122\":2,\"128\":1,\"130\":1,\"137\":1,\"138\":3,\"139\":2,\"141\":1,\"146\":1,\"148\":1,\"150\":2,\"155\":1,\"159\":1,\"161\":1,\"162\":2,\"163\":2,\"164\":1,\"168\":2,\"170\":2,\"172\":2,\"173\":1,\"175\":1,\"176\":6,\"178\":1,\"179\":7,\"180\":9,\"181\":1,\"182\":6,\"183\":6,\"185\":4,\"186\":3}}],[\"id值不为1的请求不受影响\",{\"1\":{\"185\":1}}],[\"id参数值会有变化\",{\"1\":{\"185\":1}}],[\"id=spzx\",{\"1\":{\"138\":2}}],[\"id\",{\"1\":{\"56\":1,\"138\":2,\"139\":1,\"143\":1,\"144\":1,\"185\":1}}],[\"it\",{\"1\":{\"49\":2}}],[\"info\",{\"1\":{\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"instanceindex\",{\"1\":{\"102\":2}}],[\"instances\",{\"1\":{\"102\":3}}],[\"interface\",{\"1\":{\"123\":1}}],[\"int\",{\"1\":{\"102\":2,\"129\":2,\"145\":1}}],[\"index\",{\"1\":{\"25\":1}}],[\"in\",{\"1\":{\"19\":3}}],[\"inline\",{\"1\":{\"7\":1}}],[\"会越来越长\",{\"1\":{\"183\":1}}],[\"会导致链路模式失效\",{\"1\":{\"180\":1}}],[\"会拦截访问服务d的一切请求\",{\"1\":{\"163\":1}}],[\"会继续进行访问\",{\"1\":{\"163\":1}}],[\"会按照\",{\"1\":{\"146\":1}}],[\"会将当前路由过滤器和defaultfilter\",{\"1\":{\"146\":1}}],[\"会返回一个map对象\",{\"1\":{\"145\":1}}],[\"会从服务列表剔除\",{\"1\":{\"114\":1}}],[\"会重新进行访问第一个\",{\"1\":{\"106\":1}}],[\"会向注册中心注册自己服务的详情信息\",{\"1\":{\"95\":1}}],[\"会使用\",{\"1\":{\"49\":1}}],[\"会让文字在不超出幻灯片范围的情况下尽可能大\",{\"1\":{\"12\":1}}],[\"扩展\",{\"0\":{\"49\":1,\"50\":1},\"1\":{\"50\":1}}],[\"是应对服务冷启动的一种方案\",{\"1\":{\"182\":1}}],[\"是默认的处理方式\",{\"1\":{\"181\":1}}],[\"是对不同来源的两个链路做监控\",{\"1\":{\"180\":1}}],[\"是对微服务雪崩问题的预防\",{\"1\":{\"174\":1}}],[\"是限流的一种\",{\"1\":{\"175\":1}}],[\"是修改nacos中的配置后\",{\"1\":{\"155\":1}}],[\"是否需要进行重试取决于该方法是否抛出异常\",{\"1\":{\"129\":1}}],[\"是springcloud公司研发的\",{\"1\":{\"132\":1}}],[\"是spring\",{\"1\":{\"120\":1}}],[\"是\",{\"1\":{\"48\":1,\"176\":1}}],[\"通过如下命令打开jmeter\",{\"1\":{\"176\":1}}],[\"通过界面配置sentinel的控制\",{\"1\":{\"168\":1}}],[\"通过实体类\",{\"1\":{\"155\":1}}],[\"通过这个可以获得request对象\",{\"1\":{\"145\":1}}],[\"通过网关多一层处理保障服务器安全\",{\"1\":{\"132\":1}}],[\"通过设置适当的超时时间\",{\"1\":{\"128\":1}}],[\"通过getlazyprovider方法获取serviceinstancelistsupplier对象\",{\"1\":{\"120\":1}}],[\"通过reactieloadbalancer从服务列表中选择一个服务实例地址\",{\"1\":{\"117\":1}}],[\"通过loadbalancerinterceptor请求拦截器拦截我们的resttemplate请求\",{\"1\":{\"117\":1}}],[\"通过添加添加jvm参数更改服务实例所属集群\",{\"1\":{\"107\":1}}],[\"通过注册中心可以对服务提供方和消费方解耦合\",{\"1\":{\"95\":1}}],[\"通过\",{\"1\":{\"48\":1,\"51\":1,\"153\":1,\"180\":1}}],[\"通过启用\",{\"1\":{\"32\":1}}],[\"演示\",{\"1\":{\"47\":1}}],[\"和用户请求\",{\"1\":{\"118\":1}}],[\"和\",{\"1\":{\"47\":1,\"65\":1}}],[\"和动画\",{\"1\":{\"17\":1}}],[\"请求阈值初始值是\",{\"1\":{\"182\":1}}],[\"请求的目标是\",{\"1\":{\"179\":1}}],[\"请求的权限控制\",{\"1\":{\"175\":1}}],[\"请求了三次\",{\"1\":{\"163\":1}}],[\"请求超过一定时间没有响应就返回错误信息\",{\"1\":{\"161\":1}}],[\"请求超时的原因有很多种\",{\"1\":{\"129\":1}}],[\"请求路由后\",{\"1\":{\"146\":1}}],[\"请求路径\",{\"1\":{\"123\":1}}],[\"请求进入网关会碰到三类过滤器\",{\"1\":{\"146\":1}}],[\"请求转发到uri\",{\"1\":{\"138\":1}}],[\"请求体\",{\"1\":{\"126\":1}}],[\"请求失败的重试机制\",{\"1\":{\"125\":1}}],[\"请求参数中是否有username\",{\"1\":{\"145\":1}}],[\"请求参数编码\",{\"1\":{\"125\":1}}],[\"请求参数\",{\"1\":{\"123\":1}}],[\"请求方式\",{\"1\":{\"123\":1}}],[\"请求次数\",{\"1\":{\"119\":1}}],[\"请使用绝对链接\",{\"1\":{\"66\":1}}],[\"请阅读\",{\"1\":{\"50\":1}}],[\"请先阅读\",{\"1\":{\"47\":1}}],[\"请滚动鼠标滚轮进入下一页\",{\"1\":{\"1\":1}}],[\"介绍\",{\"0\":{\"47\":1,\"191\":1,\"195\":1},\"1\":{\"47\":1,\"48\":1}}],[\"以固定的200ms的间隔执行\",{\"1\":{\"183\":1}}],[\"以解决\",{\"1\":{\"168\":1}}],[\"以流量为切入点\",{\"1\":{\"168\":1}}],[\"以after\",{\"1\":{\"139\":1}}],[\"以提醒用户或采取其他措施\",{\"1\":{\"128\":1}}],[\"以提供可用的服务列表\",{\"1\":{\"120\":1}}],[\"以便\",{\"1\":{\"46\":1}}],[\"以及所有不在\",{\"1\":{\"10\":1}}],[\"展示\",{\"0\":{\"46\":1},\"1\":{\"71\":1,\"78\":1}}],[\"文章标题列表\",{\"1\":{\"67\":1}}],[\"文章加密\",{\"2\":{\"45\":1}}],[\"文件如下\",{\"1\":{\"90\":1}}],[\"文件夹的图片\",{\"1\":{\"66\":1}}],[\"文件放置在一起\",{\"1\":{\"66\":1}}],[\"文件\",{\"1\":{\"46\":1}}],[\"文件生成页面\",{\"1\":{\"46\":1}}],[\"文字结尾应该有深蓝色的\",{\"1\":{\"66\":1}}],[\"文字\",{\"1\":{\"43\":2}}],[\"文字段落\",{\"1\":{\"43\":24}}],[\"文字并包含\",{\"1\":{\"6\":1}}],[\"段落\",{\"1\":{\"43\":2}}],[\"禁用展示\",{\"1\":{\"71\":1,\"78\":1}}],[\"禁用\",{\"2\":{\"42\":1}}],[\"禁用了如下功能\",{\"1\":{\"40\":1}}],[\"页面有bug\",{\"1\":{\"186\":1}}],[\"页面展示\",{\"1\":{\"71\":1,\"78\":1}}],[\"页面结构\",{\"0\":{\"67\":1}}],[\"页面内容\",{\"0\":{\"66\":1}}],[\"页面配置\",{\"0\":{\"64\":1},\"1\":{\"65\":1},\"2\":{\"69\":1}}],[\"页面引入配置\",{\"1\":{\"48\":1}}],[\"页面信息\",{\"0\":{\"65\":1},\"1\":{\"40\":1}}],[\"页脚\",{\"1\":{\"40\":1,\"67\":1}}],[\"评论\",{\"1\":{\"40\":1,\"67\":1}}],[\"上述的过滤器是gateway中提供的默认的过滤器\",{\"1\":{\"145\":1}}],[\"上述代码存在的弊端\",{\"1\":{\"130\":1}}],[\"上海机房内的order微服务应该优先访问同机房的user微服务\",{\"1\":{\"106\":1}}],[\"上下角标\",{\"0\":{\"54\":1}}],[\"上一篇\",{\"1\":{\"40\":1}}],[\"上使用\",{\"1\":{\"38\":1}}],[\"贡献者\",{\"1\":{\"40\":1,\"67\":1}}],[\"侧边栏\",{\"1\":{\"40\":1,\"67\":1}}],[\"即可直接使用\",{\"1\":{\"130\":1}}],[\"即可修改权重\",{\"1\":{\"109\":1}}],[\"即可以向此元素进行放大\",{\"1\":{\"38\":1}}],[\"即可在幻灯片获得焦点时进入全屏模式\",{\"1\":{\"36\":1}}],[\"即可在幻灯片获得焦点时进入预览模式\",{\"1\":{\"34\":1}}],[\"的请求中\",{\"1\":{\"185\":1}}],[\"的历史\",{\"1\":{\"168\":1}}],[\"的超时机制是指在使用\",{\"1\":{\"128\":1}}],[\"的\",{\"1\":{\"56\":1,\"65\":1}}],[\"的同时点击幻灯片的任何元素\",{\"1\":{\"38\":1}}],[\"的段落\",{\"1\":{\"6\":1}}],[\"缩放\",{\"0\":{\"38\":1}}],[\"openfeign日志级别配置\",{\"1\":{\"126\":2}}],[\"openfeign可以支持很多的自定义配置\",{\"1\":{\"125\":1}}],[\"openfeign<\",{\"1\":{\"123\":1,\"130\":1}}],[\"openfeign的使用步骤如下\",{\"1\":{\"123\":1}}],[\"openfeign\",{\"1\":{\"122\":1,\"126\":2,\"128\":1,\"129\":1}}],[\"openfeign组件\",{\"0\":{\"121\":1}}],[\"override\",{\"1\":{\"91\":1,\"102\":1,\"123\":1,\"129\":2,\"145\":2}}],[\"originaluri\",{\"1\":{\"118\":1}}],[\"order的值越小\",{\"1\":{\"146\":1}}],[\"order的application\",{\"1\":{\"113\":1}}],[\"ordered\",{\"1\":{\"145\":1}}],[\"orderapplication\",{\"1\":{\"130\":2}}],[\"order中编写的userfeginclient\",{\"1\":{\"130\":1}}],[\"order服务的pom文件中引入openfeign的依赖\",{\"1\":{\"123\":1}}],[\"order微服务引入spzx\",{\"1\":{\"130\":1}}],[\"order微服务和spzx\",{\"1\":{\"130\":2}}],[\"order微服务在loadbalancer组件中集成nacos\",{\"1\":{\"108\":1}}],[\"order微服务注册的时候需要更改微服务名称\",{\"1\":{\"100\":1}}],[\"orderid\",{\"1\":{\"91\":2,\"102\":2,\"123\":2}}],[\"ordermapper\",{\"1\":{\"91\":3,\"102\":3,\"123\":3}}],[\"orderservice\",{\"1\":{\"91\":1,\"102\":1,\"123\":1}}],[\"orderserviceimpl\",{\"1\":{\"91\":1,\"102\":1,\"123\":1}}],[\"order\",{\"1\":{\"91\":6,\"100\":1,\"102\":6,\"103\":1,\"123\":6,\"126\":2,\"129\":1,\"130\":1,\"135\":1,\"138\":6}}],[\"org\",{\"1\":{\"90\":1,\"146\":1,\"176\":1}}],[\"o\",{\"1\":{\"34\":1}}],[\"out的异常\",{\"1\":{\"129\":1}}],[\"out\",{\"1\":{\"19\":3,\"139\":1,\"180\":2}}],[\"或之后\",{\"1\":{\"137\":1}}],[\"或\",{\"1\":{\"34\":1,\"36\":1}}],[\"err\",{\"1\":{\"180\":2}}],[\"exchange\",{\"1\":{\"145\":5,\"146\":3}}],[\"execute\",{\"1\":{\"118\":1}}],[\"ephemeral\",{\"1\":{\"114\":1}}],[\"e\",{\"1\":{\"98\":1,\"129\":2}}],[\"eurela\",{\"0\":{\"97\":1}}],[\"envoy\",{\"1\":{\"168\":1}}],[\"environment\",{\"1\":{\"120\":4}}],[\"endpoint\",{\"1\":{\"175\":1}}],[\"end\",{\"1\":{\"129\":2}}],[\"encoder\",{\"1\":{\"125\":1}}],[\"enableconfigurationproperties\",{\"1\":{\"154\":1}}],[\"enableconfigurationproperties注解\",{\"1\":{\"154\":1}}],[\"enablefeignclients这个注解中\",{\"1\":{\"127\":1}}],[\"enablefeignclients\",{\"1\":{\"123\":1,\"127\":1,\"130\":1}}],[\"enabled=true\",{\"1\":{\"138\":1}}],[\"enabled\",{\"1\":{\"108\":1,\"138\":1}}],[\"entity\",{\"1\":{\"90\":1}}],[\"enhance\",{\"1\":{\"51\":1}}],[\"esc\",{\"1\":{\"34\":1}}],[\"element\",{\"1\":{\"3\":1}}],[\"+order\",{\"1\":{\"91\":1}}],[\"+\",{\"1\":{\"32\":2,\"102\":5,\"103\":1,\"111\":1,\"146\":1}}],[\"x的版本新增了一个客户端与服务端的grpc的通讯端口号9848\",{\"1\":{\"98\":1}}],[\"xml\",{\"1\":{\"90\":1}}],[\"x\",{\"1\":{\"32\":2}}],[\"语法说明\",{\"1\":{\"179\":1}}],[\"语法\",{\"1\":{\"51\":1}}],[\"语法进行了扩展\",{\"1\":{\"50\":1}}],[\"语法扩展\",{\"1\":{\"49\":1}}],[\"语法来分布高亮特定行\",{\"1\":{\"32\":1}}],[\"语法的各种标记\",{\"1\":{\"4\":1,\"5\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1}}],[\"插件来实现\",{\"1\":{\"49\":1}}],[\"插件\",{\"1\":{\"32\":1}}],[\"插件后\",{\"1\":{\"8\":1,\"9\":1}}],[\"功能详情\",{\"1\":{\"189\":1,\"193\":1}}],[\"功能亮点\",{\"0\":{\"74\":1}}],[\"功能\",{\"0\":{\"30\":1,\"31\":1,\"33\":1,\"35\":1,\"37\":1,\"190\":1,\"194\":1},\"1\":{\"191\":1,\"195\":1}}],[\"可能部分商品是热点商品\",{\"1\":{\"185\":1}}],[\"可能导致服务瞬间宕机\",{\"1\":{\"182\":1}}],[\"可能会存在很多个软件环境\",{\"1\":{\"111\":1}}],[\"可能的值\",{\"1\":{\"27\":1}}],[\"可拓展性好\",{\"1\":{\"83\":1}}],[\"可靠性差\",{\"1\":{\"82\":1}}],[\"可以查看到sentinel的簇点链路规则中\",{\"1\":{\"180\":1}}],[\"可以发现\",{\"1\":{\"179\":1}}],[\"可以选择三种流控模式\",{\"1\":{\"178\":1}}],[\"可以看到我们标记的hot资源出现了\",{\"1\":{\"186\":1}}],[\"可以看到这里200个线程\",{\"1\":{\"180\":1}}],[\"可以看到这里的intercept方法\",{\"1\":{\"118\":1}}],[\"可以看到1000个线程\",{\"1\":{\"179\":1}}],[\"可以看到\",{\"1\":{\"176\":1}}],[\"可以通过下列配置\",{\"1\":{\"171\":1}}],[\"可以通过配置中的\",{\"1\":{\"27\":1}}],[\"可以集中管理所有实例的配置\",{\"1\":{\"148\":1}}],[\"可以对进入网关的请求和微服务返回的响应做处理\",{\"1\":{\"141\":1}}],[\"可以自定义\",{\"1\":{\"138\":1}}],[\"可以及时给出错误提示或进行相应的处理\",{\"1\":{\"128\":1}}],[\"可以避免客户端在请求服务时长时间等待响应而导致的性能问题\",{\"1\":{\"128\":1}}],[\"可以从discoveryclient或者其他注册中心中获取可用的服务实例列表\",{\"1\":{\"120\":1}}],[\"可以启动多个user微服务实例进行负载均衡的测试\",{\"1\":{\"102\":1}}],[\"可以使用不同的语言\",{\"1\":{\"83\":1}}],[\"可以使用不同的数据库\",{\"1\":{\"83\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"46\":1}}],[\"第1秒同时接收到10个请求\",{\"1\":{\"183\":1}}],[\"第12个请求的预期等待时长\",{\"1\":{\"183\":1}}],[\"第6个请求的预期等待时长\",{\"1\":{\"183\":1}}],[\"第四步\",{\"1\":{\"91\":1,\"106\":1}}],[\"第三步\",{\"1\":{\"91\":1,\"106\":1}}],[\"第二部分\",{\"1\":{\"168\":1}}],[\"第二步\",{\"1\":{\"91\":1,\"106\":1}}],[\"第二个显示\",{\"1\":{\"25\":2}}],[\"第一个参数\",{\"1\":{\"185\":1}}],[\"第一个显示\",{\"1\":{\"25\":1}}],[\"第一部分\",{\"1\":{\"168\":1}}],[\"第一步\",{\"1\":{\"91\":1,\"106\":1}}],[\"属性局部设置\",{\"1\":{\"27\":1}}],[\"属性改变元素的动画顺序\",{\"1\":{\"25\":1}}],[\"属性自定义幻灯片背景\",{\"1\":{\"15\":1}}],[\"顺序\",{\"0\":{\"25\":1}}],[\"渐变\",{\"0\":{\"26\":1,\"27\":1,\"28\":1}}],[\"渐出\",{\"1\":{\"23\":1}}],[\"渐入\",{\"1\":{\"23\":1}}],[\"变红\",{\"1\":{\"23\":1}}],[\"tomcat\",{\"1\":{\"168\":1}}],[\"toc\",{\"1\":{\"67\":1}}],[\"timed\",{\"1\":{\"129\":1}}],[\"timeout\",{\"1\":{\"128\":2,\"129\":2,\"183\":1}}],[\"throw\",{\"1\":{\"129\":1}}],[\"this\",{\"1\":{\"118\":1,\"146\":1}}],[\"then\",{\"1\":{\"19\":2}}],[\"transport\",{\"1\":{\"173\":1}}],[\"transition\",{\"1\":{\"27\":3}}],[\"truth\",{\"1\":{\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"truth=atguigu\",{\"1\":{\"143\":1}}],[\"true\",{\"1\":{\"108\":1,\"138\":1}}],[\"type\",{\"1\":{\"90\":1}}],[\"type>\",{\"1\":{\"89\":2}}],[\"target>\",{\"1\":{\"89\":1,\"90\":1}}],[\"target>17<\",{\"1\":{\"89\":1,\"90\":1}}],[\"text\",{\"1\":{\"12\":1}}],[\"tex\",{\"1\":{\"9\":1}}],[\"lb就是负载均衡\",{\"1\":{\"138\":1}}],[\"lb\",{\"1\":{\"138\":2,\"139\":1,\"143\":1,\"144\":1}}],[\"list<gatewayfilter>\",{\"1\":{\"146\":2}}],[\"list<serviceinstance>\",{\"1\":{\"102\":1}}],[\"linux\",{\"1\":{\"38\":1}}],[\"loadbalanced\",{\"1\":{\"103\":2,\"120\":1}}],[\"loadbalancerclient\",{\"1\":{\"120\":1}}],[\"loadbalancerclients\",{\"1\":{\"120\":1}}],[\"loadbalancerclientfactory\",{\"1\":{\"120\":5}}],[\"loadbalancer默认的负载均衡算法是roundrobinloadbalancer\",{\"1\":{\"120\":1}}],[\"loadbalancer是blockingloadbalancerclient类型\",{\"1\":{\"118\":1}}],[\"loadbalancer是spring\",{\"1\":{\"116\":1}}],[\"loadbalancerinterceptor\",{\"1\":{\"118\":1}}],[\"loadbalancer的执行流程\",{\"0\":{\"117\":1}}],[\"loadbalancer\",{\"0\":{\"115\":1},\"1\":{\"108\":1,\"118\":1}}],[\"loadbalancer<\",{\"1\":{\"103\":1,\"138\":1}}],[\"loadbalancer负载均衡\",{\"1\":{\"103\":1}}],[\"long\",{\"1\":{\"91\":1,\"102\":1,\"123\":3,\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"locator\",{\"1\":{\"138\":2}}],[\"locations\",{\"1\":{\"90\":1}}],[\"localhost\",{\"1\":{\"90\":1,\"91\":2,\"100\":1,\"138\":1,\"172\":1,\"173\":2}}],[\"loggerlevel\",{\"1\":{\"126\":2,\"128\":1,\"129\":1}}],[\"logger\",{\"1\":{\"125\":1,\"127\":2,\"146\":2}}],[\"logging\",{\"1\":{\"90\":1,\"126\":2}}],[\"log\",{\"1\":{\"90\":1,\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"logo\",{\"1\":{\"13\":1}}],[\"lombok依赖\",{\"1\":{\"90\":1,\"130\":1}}],[\"level的对象\",{\"1\":{\"127\":1}}],[\"level\",{\"1\":{\"125\":1,\"126\":2,\"127\":2}}],[\"let\",{\"1\":{\"32\":3}}],[\"left\",{\"1\":{\"19\":1}}],[\"dist\",{\"1\":{\"176\":1}}],[\"discoveryclient\",{\"1\":{\"102\":4}}],[\"discovery\",{\"1\":{\"100\":1,\"107\":3,\"108\":1,\"109\":1,\"113\":1,\"114\":1,\"138\":4}}],[\"discovery<\",{\"1\":{\"100\":1,\"138\":1}}],[\"dubbo\",{\"1\":{\"168\":1}}],[\"dashboard\",{\"1\":{\"168\":1,\"171\":4,\"173\":1}}],[\"dateformat\",{\"1\":{\"153\":2,\"154\":3,\"186\":1}}],[\"datasource\",{\"1\":{\"90\":1}}],[\"data\",{\"1\":{\"15\":1,\"25\":1,\"27\":1,\"29\":1,\"154\":1}}],[\"daimakuai\",{\"1\":{\"143\":1,\"144\":1}}],[\"dev\",{\"1\":{\"151\":1}}],[\"denver\",{\"1\":{\"144\":1}}],[\"defaultgatewayfilterchain\",{\"1\":{\"146\":1}}],[\"defaultfilter\",{\"1\":{\"146\":2}}],[\"defaultfeignconfiguration都复制到spzx\",{\"1\":{\"130\":1}}],[\"defaultfeignconfiguration\",{\"1\":{\"127\":3,\"130\":1}}],[\"defaultconfiguration\",{\"1\":{\"127\":1}}],[\"default\",{\"1\":{\"126\":1,\"128\":1,\"129\":1,\"144\":1}}],[\"debug\",{\"1\":{\"126\":2,\"146\":1}}],[\"decoder\",{\"1\":{\"125\":1}}],[\"dependencymanagement>\",{\"1\":{\"89\":1}}],[\"dependency>\",{\"1\":{\"89\":4,\"90\":4,\"100\":1,\"103\":1,\"123\":1,\"130\":4,\"138\":3,\"151\":1,\"173\":1}}],[\"dependencies>\",{\"1\":{\"89\":1,\"90\":1}}],[\"dependencies<\",{\"1\":{\"89\":2}}],[\"dspring\",{\"1\":{\"107\":2}}],[\"dserver\",{\"1\":{\"107\":2,\"171\":1}}],[\"docs\",{\"1\":{\"139\":2,\"142\":2}}],[\"docker\",{\"1\":{\"98\":2}}],[\"docker安装nacos\",{\"1\":{\"98\":1}}],[\"down\",{\"1\":{\"19\":1}}],[\"driver\",{\"1\":{\"90\":2}}],[\"d\",{\"1\":{\"32\":1,\"98\":1}}],[\"动画\",{\"0\":{\"19\":1,\"21\":1}}],[\"动画片段用于高亮或显隐幻灯片中的元素\",{\"1\":{\"17\":1}}],[\"动画片段\",{\"0\":{\"16\":1,\"17\":1,\"18\":1,\"20\":1,\"22\":1,\"24\":1}}],[\"full\",{\"1\":{\"125\":1,\"126\":3,\"128\":1,\"129\":1}}],[\"feign的默认配置都抽取到一个spzx\",{\"1\":{\"130\":1}}],[\"feign一旦请求超时了\",{\"1\":{\"129\":1}}],[\"feign默认的超时配置为\",{\"1\":{\"128\":1}}],[\"feignloglevel\",{\"1\":{\"127\":1}}],[\"feign\",{\"1\":{\"125\":5,\"126\":2,\"128\":3,\"129\":1,\"130\":5}}],[\"feign就可以帮助我们发送http请求\",{\"1\":{\"123\":1}}],[\"feignclientretryer\",{\"1\":{\"129\":3}}],[\"feignclient这个注解中\",{\"1\":{\"127\":1}}],[\"feignclient\",{\"1\":{\"123\":1,\"127\":1}}],[\"feign其作用就是帮助我们优雅的实现http请求的发送\",{\"1\":{\"122\":1}}],[\"feign是一个声明式的http客户端\",{\"1\":{\"122\":1}}],[\"factories\",{\"1\":{\"139\":2,\"142\":1}}],[\"factory路由工厂举例\",{\"1\":{\"139\":1}}],[\"factory的getinstance方法做了两件事情\",{\"1\":{\"118\":1}}],[\"factory从nacos注册中心获取列表以及负载均衡算法实例对象\",{\"1\":{\"117\":1}}],[\"false\",{\"1\":{\"114\":1,\"180\":1,\"186\":1}}],[\"fade\",{\"1\":{\"19\":8,\"27\":1}}],[\"fing\",{\"1\":{\"135\":1}}],[\"find\",{\"1\":{\"135\":1}}],[\"findorderbyorderid\",{\"1\":{\"91\":2,\"102\":2,\"123\":2}}],[\"finduserbyuserid方法执行了\",{\"1\":{\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"finduserbyuserid\",{\"1\":{\"91\":2,\"102\":1,\"103\":1,\"118\":1,\"123\":2,\"138\":2,\"143\":3,\"153\":3,\"154\":3,\"173\":1,\"175\":1,\"176\":1,\"179\":4,\"182\":1,\"183\":1,\"186\":5}}],[\"filteringwebhandler\",{\"1\":{\"146\":1}}],[\"filters\",{\"1\":{\"143\":1,\"144\":1}}],[\"filter在\",{\"1\":{\"137\":1}}],[\"filter\",{\"1\":{\"132\":1,\"145\":2,\"146\":1}}],[\"fit\",{\"1\":{\"12\":1}}],[\"foo\",{\"0\":{\"76\":1,\"194\":1},\"1\":{\"195\":1}}],[\"frontmatter\",{\"1\":{\"40\":1,\"48\":3,\"65\":1,\"67\":1}}],[\"fragment\",{\"1\":{\"17\":1,\"25\":1}}],[\"f11\",{\"1\":{\"36\":1}}],[\"f\",{\"1\":{\"36\":1}}],[\"b不限流\",{\"1\":{\"179\":1}}],[\"binaries\",{\"1\":{\"176\":1}}],[\"bean覆盖默认bean即可\",{\"1\":{\"125\":1}}],[\"bean\",{\"1\":{\"91\":1,\"103\":1,\"120\":2,\"127\":1}}],[\"boot的web开发所需要的起步依赖\",{\"1\":{\"90\":1}}],[\"boot整合的起步依赖\",{\"1\":{\"89\":1,\"90\":1}}],[\"boot<\",{\"1\":{\"89\":2,\"90\":2}}],[\"boot父工程\",{\"1\":{\"89\":1}}],[\"boot\",{\"1\":{\"89\":5,\"90\":2,\"168\":1}}],[\"build\",{\"1\":{\"89\":2,\"90\":2}}],[\"basepackages\",{\"1\":{\"130\":1}}],[\"basic\",{\"1\":{\"125\":1,\"126\":1,\"127\":1}}],[\"baz\",{\"0\":{\"189\":1},\"1\":{\"75\":1,\"192\":1}}],[\"bar\",{\"0\":{\"75\":1,\"190\":1},\"1\":{\"191\":1}}],[\"background\",{\"1\":{\"15\":1}}],[\"b\",{\"1\":{\"32\":1}}],[\"b|c\",{\"1\":{\"32\":1}}],[\"blue\",{\"1\":{\"21\":2}}],[\"blockingloadbalancerclient\",{\"1\":{\"118\":1}}],[\"block\",{\"1\":{\"7\":1}}],[\"背景\",{\"0\":{\"15\":1}}],[\"使相同的\",{\"1\":{\"29\":1}}],[\"使它们填充满幻灯片垂直方向上的剩余空间\",{\"1\":{\"13\":1}}],[\"使用场景\",{\"1\":{\"179\":1}}],[\"使用java代码能实现sentinel使用\",{\"1\":{\"168\":1}}],[\"使用该实体类\",{\"1\":{\"154\":1}}],[\"使用routepredicatefactory创建predicate对象\",{\"1\":{\"139\":1}}],[\"使用resttemplate进行远程调用代码回顾\",{\"1\":{\"122\":1}}],[\"使用feign客户端代替resttemplate\",{\"1\":{\"123\":1}}],[\"使用loadbalance\",{\"1\":{\"109\":1}}],[\"使用步骤\",{\"1\":{\"103\":1}}],[\"使用spring\",{\"1\":{\"103\":1}}],[\"使用到spring\",{\"1\":{\"102\":1}}],[\"使用这些框架\",{\"1\":{\"93\":1}}],[\"使用这些组件可以实现微服务架构\",{\"1\":{\"85\":1}}],[\"使用父工程来管理多个微服务所需的依赖\",{\"1\":{\"88\":1}}],[\"使用大于两台服务器进行部署\",{\"1\":{\"83\":1}}],[\"使用指南\",{\"1\":{\"65\":2},\"2\":{\"41\":1,\"44\":1,\"62\":1,\"68\":1,\"69\":1,\"72\":1,\"79\":1}}],[\"使用\",{\"1\":{\"3\":3}}],[\"帮助你控制注入图片或视频的大小\",{\"1\":{\"13\":1}}],[\"save和\",{\"1\":{\"180\":1}}],[\"save\",{\"1\":{\"180\":5}}],[\"slf4j\",{\"1\":{\"153\":1,\"154\":1}}],[\"slideend\",{\"1\":{\"39\":1}}],[\"slide\",{\"1\":{\"3\":1,\"27\":1}}],[\"slidestart\",{\"1\":{\"0\":1}}],[\"src\",{\"1\":{\"151\":1}}],[\"sorted\",{\"1\":{\"146\":1}}],[\"sort\",{\"1\":{\"146\":1}}],[\"sourceencoding>\",{\"1\":{\"89\":1,\"90\":1}}],[\"sourceencoding>utf\",{\"1\":{\"89\":1,\"90\":1}}],[\"source>\",{\"1\":{\"89\":1,\"90\":1}}],[\"source>17<\",{\"1\":{\"89\":1,\"90\":1}}],[\"system\",{\"1\":{\"139\":1,\"180\":4}}],[\"snapshot<\",{\"1\":{\"130\":2}}],[\"shanghai\",{\"1\":{\"139\":1}}],[\"sh\",{\"1\":{\"107\":1,\"108\":1}}],[\"shrink\",{\"1\":{\"21\":1}}],[\"size\",{\"1\":{\"102\":3}}],[\"spzx\",{\"1\":{\"90\":2,\"91\":1,\"100\":1,\"102\":1,\"103\":1,\"118\":2,\"120\":1,\"123\":1,\"126\":3,\"127\":1,\"129\":1,\"130\":2,\"138\":9,\"139\":2,\"143\":2,\"144\":2,\"151\":1}}],[\"spring基础\",{\"2\":{\"187\":1}}],[\"springapplication\",{\"1\":{\"130\":1,\"138\":1,\"154\":1}}],[\"springframework\",{\"1\":{\"89\":2,\"90\":1,\"103\":1,\"123\":1,\"130\":1,\"138\":2,\"146\":1}}],[\"spring\",{\"1\":{\"86\":2,\"89\":11,\"90\":4,\"100\":1,\"103\":2,\"107\":1,\"108\":2,\"109\":1,\"113\":1,\"114\":1,\"116\":1,\"126\":2,\"128\":1,\"129\":1,\"138\":10,\"139\":7,\"142\":3,\"143\":1,\"144\":1,\"151\":1,\"168\":2,\"173\":1,\"180\":1}}],[\"springcloud<\",{\"1\":{\"130\":2}}],[\"springcloud实现微服务框架\",{\"1\":{\"93\":1}}],[\"springcloud实现微服务架构离不开springboot\",{\"1\":{\"85\":1}}],[\"springcloud远程调用\",{\"1\":{\"90\":1}}],[\"springcloud组件自己研发的组件\",{\"1\":{\"86\":1}}],[\"springcloud包含很多组件\",{\"1\":{\"86\":1}}],[\"springcloud是一系列框架集合\",{\"1\":{\"93\":1}}],[\"springcloud是一系列框架的有序集合\",{\"1\":{\"85\":1}}],[\"springcloud是一系列框架或者组件的集合\",{\"1\":{\"85\":1}}],[\"springcloud里面包含了很多组件和框架\",{\"1\":{\"85\":1}}],[\"springcloud并不是一种技术\",{\"1\":{\"85\":1}}],[\"springcloud初体验\",{\"0\":{\"84\":1}}],[\"springcloud\",{\"0\":{\"80\":1},\"1\":{\"94\":1}}],[\"springbootapplication\",{\"1\":{\"130\":1,\"138\":1,\"154\":1}}],[\"springboot\",{\"0\":{\"77\":1},\"1\":{\"93\":1}}],[\"sentinel只监控controller方法\",{\"1\":{\"180\":1}}],[\"sentinelresource注解标记资源\",{\"1\":{\"186\":1}}],[\"sentinelresource\",{\"1\":{\"180\":2,\"186\":1}}],[\"sentinel<\",{\"1\":{\"173\":1}}],[\"sentinel是懒加载的\",{\"1\":{\"172\":1}}],[\"sentinel管理后台下载地址\",{\"1\":{\"170\":1}}],[\"sentinel入门\",{\"0\":{\"169\":1}}],[\"sentinel\",{\"1\":{\"168\":9,\"170\":1,\"171\":6,\"172\":1,\"173\":2,\"180\":1}}],[\"sentinelguard\",{\"1\":{\"168\":1}}],[\"sentinel介绍\",{\"0\":{\"168\":1}}],[\"sentinel部分\",{\"0\":{\"157\":1}}],[\"seconds\",{\"0\":{\"166\":1}}],[\"setcomplete\",{\"1\":{\"145\":1}}],[\"setstatuscode\",{\"1\":{\"145\":1}}],[\"setuser\",{\"1\":{\"102\":1,\"123\":1}}],[\"service的feign的客户端\",{\"1\":{\"123\":1}}],[\"serviceinstancelistsupplier\",{\"1\":{\"120\":2}}],[\"serviceinstance\",{\"1\":{\"102\":8}}],[\"service\",{\"1\":{\"102\":1,\"123\":1,\"168\":2,\"175\":1}}],[\"serverwebexchangeutils\",{\"1\":{\"146\":1}}],[\"serverwebexchange\",{\"1\":{\"145\":1,\"146\":1}}],[\"server\",{\"1\":{\"90\":1,\"98\":2,\"100\":1,\"138\":4,\"151\":1,\"171\":1}}],[\"seruser\",{\"1\":{\"91\":1}}],[\"semi\",{\"1\":{\"19\":1}}],[\"scope>\",{\"1\":{\"89\":2}}],[\"static\",{\"1\":{\"130\":1,\"138\":1,\"154\":1}}],[\"standalone\",{\"1\":{\"98\":1}}],[\"start++\",{\"1\":{\"129\":1}}],[\"start\",{\"1\":{\"129\":2}}],[\"startup\",{\"1\":{\"98\":1}}],[\"starter<\",{\"1\":{\"89\":1,\"90\":1}}],[\"starter\",{\"1\":{\"89\":1,\"90\":1,\"100\":1,\"123\":1,\"130\":1,\"138\":2,\"151\":2,\"173\":1}}],[\"stdoutimpl\",{\"1\":{\"90\":1}}],[\"stdout\",{\"1\":{\"90\":1}}],[\"stringutils\",{\"1\":{\"145\":1}}],[\"string\",{\"1\":{\"102\":1,\"120\":1,\"130\":1,\"138\":1,\"143\":1,\"145\":1,\"153\":2,\"154\":4,\"179\":1,\"180\":2,\"186\":1}}],[\"strike\",{\"1\":{\"21\":1}}],[\"stretch\",{\"1\":{\"13\":1}}],[\"c++\",{\"1\":{\"168\":1}}],[\"cn\",{\"1\":{\"168\":1}}],[\"customloadbalancerconfiguration\",{\"1\":{\"120\":2}}],[\"current\",{\"1\":{\"21\":3}}],[\"chain\",{\"1\":{\"145\":2}}],[\"characterencoding=utf8\",{\"1\":{\"90\":1}}],[\"choose方法\",{\"1\":{\"118\":1}}],[\"chooseserviceinstance\",{\"1\":{\"102\":2}}],[\"cmd\",{\"1\":{\"98\":1}}],[\"cmd方式进入bin里面\",{\"1\":{\"98\":1}}],[\"cj\",{\"1\":{\"90\":1}}],[\"coldfactor\",{\"1\":{\"182\":1}}],[\"codec\",{\"1\":{\"125\":2}}],[\"combined\",{\"1\":{\"146\":5}}],[\"component\",{\"1\":{\"145\":1}}],[\"compiler\",{\"1\":{\"89\":4,\"90\":4}}],[\"com\",{\"1\":{\"90\":2,\"91\":1,\"122\":1,\"126\":2,\"129\":1,\"130\":1,\"138\":1,\"170\":1}}],[\"context\",{\"1\":{\"180\":1}}],[\"continueorpropagate\",{\"1\":{\"129\":1}}],[\"contract\",{\"1\":{\"125\":1}}],[\"connect\",{\"1\":{\"128\":1,\"129\":1}}],[\"connector\",{\"1\":{\"89\":1,\"90\":1}}],[\"config<\",{\"1\":{\"151\":1}}],[\"config依赖\",{\"1\":{\"151\":1}}],[\"config\",{\"1\":{\"91\":1,\"126\":2,\"128\":1,\"129\":1,\"151\":3}}],[\"configurationproperties注解读取配置信息\",{\"1\":{\"155\":1}}],[\"configurationproperties注解读取自定义配置\",{\"1\":{\"154\":1}}],[\"configurationproperties\",{\"0\":{\"154\":1},\"1\":{\"154\":1}}],[\"configuration\",{\"1\":{\"90\":1,\"91\":1,\"120\":2,\"127\":1}}],[\"concave\",{\"1\":{\"27\":1}}],[\"convex\",{\"1\":{\"27\":1}}],[\"const\",{\"1\":{\"8\":1,\"52\":1}}],[\"clone\",{\"1\":{\"129\":1}}],[\"cloud的官网都给出了具体的示例代码\",{\"1\":{\"139\":1}}],[\"cloud的依赖\",{\"1\":{\"89\":1}}],[\"cloud中用于创建负载均衡器的工厂类\",{\"1\":{\"120\":1}}],[\"cloud中负责客户端负载均衡的模块\",{\"1\":{\"116\":1}}],[\"cloud中所提供的一个组件\",{\"1\":{\"103\":1}}],[\"cloud中所提供的一个服务发现的客户端对象\",{\"1\":{\"102\":1}}],[\"cloud<\",{\"1\":{\"89\":2,\"100\":1,\"103\":1,\"123\":1,\"130\":1,\"138\":3,\"151\":1,\"173\":1}}],[\"cloud\",{\"1\":{\"86\":2,\"89\":9,\"90\":2,\"91\":1,\"100\":3,\"102\":1,\"103\":4,\"107\":4,\"108\":2,\"109\":2,\"113\":2,\"114\":1,\"116\":1,\"118\":2,\"120\":1,\"123\":3,\"126\":5,\"127\":1,\"128\":1,\"129\":2,\"130\":13,\"137\":1,\"138\":26,\"139\":8,\"142\":1,\"143\":7,\"144\":3,\"146\":1,\"151\":6,\"168\":1,\"173\":4,\"175\":1,\"180\":1}}],[\"client\",{\"1\":{\"126\":2,\"128\":1,\"129\":1}}],[\"cluster\",{\"1\":{\"107\":3,\"108\":1}}],[\"classpath\",{\"1\":{\"90\":1}}],[\"class\",{\"0\":{\"19\":1,\"21\":1},\"1\":{\"12\":1,\"13\":1,\"17\":1,\"90\":1,\"91\":3,\"102\":2,\"103\":1,\"120\":4,\"123\":1,\"127\":3,\"129\":1,\"130\":2,\"138\":2,\"145\":1,\"153\":1,\"154\":5}}],[\"ctrl\",{\"1\":{\"38\":1}}],[\"c\",{\"1\":{\"32\":2}}],[\"route\",{\"1\":{\"139\":2,\"146\":5}}],[\"routes\",{\"1\":{\"138\":7,\"139\":1,\"143\":1,\"144\":1}}],[\"roundrobinloadbalancer\",{\"1\":{\"118\":1}}],[\"root\",{\"1\":{\"90\":2}}],[\"randomloadbalancer\",{\"1\":{\"120\":2}}],[\"random\",{\"1\":{\"102\":4}}],[\"ray\",{\"0\":{\"193\":1},\"1\":{\"76\":1,\"196\":1}}],[\"runtimeexception\",{\"1\":{\"129\":1}}],[\"run\",{\"1\":{\"98\":1,\"130\":1,\"138\":1,\"154\":1}}],[\"required\",{\"1\":{\"186\":1}}],[\"requestmapping\",{\"1\":{\"153\":1,\"154\":1}}],[\"requestheader\",{\"1\":{\"143\":1,\"153\":1,\"154\":1,\"186\":1}}],[\"requestratelimiter\",{\"1\":{\"142\":1}}],[\"request\",{\"1\":{\"118\":1,\"139\":1}}],[\"refreshscope\",{\"1\":{\"155\":1}}],[\"reference\",{\"1\":{\"139\":1,\"142\":1}}],[\"restcontroller\",{\"1\":{\"153\":1,\"154\":1}}],[\"resttemplate\",{\"1\":{\"91\":6,\"102\":3,\"103\":4,\"120\":3}}],[\"resttemplateconfiguration\",{\"1\":{\"91\":1,\"120\":1}}],[\"resources\",{\"1\":{\"151\":1}}],[\"removeresponseheader\",{\"1\":{\"142\":1}}],[\"removerequestheader\",{\"1\":{\"142\":1}}],[\"releases\",{\"1\":{\"170\":1}}],[\"release\",{\"1\":{\"142\":1}}],[\"read\",{\"1\":{\"128\":1,\"129\":2}}],[\"reactorloadbalancer<serviceinstance>\",{\"1\":{\"120\":1}}],[\"reactiveloadbalancer\",{\"1\":{\"118\":1}}],[\"retryableexception\",{\"1\":{\"129\":1}}],[\"retryer\",{\"1\":{\"125\":1,\"129\":3}}],[\"return\",{\"1\":{\"91\":2,\"102\":2,\"103\":1,\"120\":3,\"123\":1,\"127\":1,\"129\":1,\"143\":1,\"145\":3,\"146\":1,\"153\":1,\"154\":1,\"179\":1,\"180\":2,\"186\":1}}],[\"red\",{\"1\":{\"21\":2}}],[\"rc2<\",{\"1\":{\"89\":1}}],[\"right\",{\"1\":{\"19\":1}}],[\"r\",{\"1\":{\"12\":1,\"13\":1}}],[\"👆\",{\"1\":{\"12\":1,\"13\":1}}],[\"👇\",{\"1\":{\"2\":1}}],[\"布局与功能禁用\",{\"0\":{\"40\":1}}],[\"布局\",{\"0\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1}}],[\"表格和分割线\",{\"1\":{\"10\":1}}],[\"⚠请注意\",{\"1\":{\"10\":1}}],[\"你需要阅读\",{\"1\":{\"48\":1}}],[\"你需要在元素上添加\",{\"1\":{\"17\":1}}],[\"你应该创建和编写\",{\"1\":{\"46\":1}}],[\"你可以将图片和\",{\"1\":{\"66\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"66\":1}}],[\"你可以标记\",{\"1\":{\"58\":1}}],[\"你可以通过主题选项和页面\",{\"1\":{\"67\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"40\":1}}],[\"你可以通过向特定幻灯片添加\",{\"1\":{\"15\":1}}],[\"你可以对代码块进行高亮\",{\"1\":{\"32\":1}}],[\"你可以在\",{\"1\":{\"65\":1}}],[\"你可以在相邻的幻灯片上添加\",{\"1\":{\"29\":1}}],[\"你可以在幻灯片中使用\",{\"1\":{\"4\":1,\"5\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"46\":1}}],[\"你可以使用\",{\"1\":{\"25\":1,\"32\":1}}],[\"你可以按照顺序包裹一个\",{\"1\":{\"23\":1}}],[\"你也可以使用\",{\"1\":{\"9\":1}}],[\"=path=\",{\"1\":{\"138\":2}}],[\"=>\",{\"1\":{\"32\":1}}],[\"=\",{\"1\":{\"8\":1,\"32\":3,\"52\":1,\"91\":2,\"102\":8,\"120\":4,\"123\":3,\"127\":3,\"129\":2,\"130\":1,\"139\":1,\"143\":3,\"145\":1,\"146\":3,\"153\":4,\"154\":6,\"179\":1,\"180\":2,\"183\":6,\"186\":4}}],[\"a关联b\",{\"1\":{\"179\":1}}],[\"annotationawareordercomparator\",{\"1\":{\"146\":1}}],[\"animate\",{\"1\":{\"29\":1}}],[\"addall\",{\"1\":{\"146\":1}}],[\"addresponseheader\",{\"1\":{\"142\":1}}],[\"addrequestheader=truth\",{\"1\":{\"143\":1,\"144\":1}}],[\"addrequestheader\",{\"1\":{\"142\":1}}],[\"addr=127\",{\"1\":{\"138\":1}}],[\"addr\",{\"1\":{\"100\":1,\"138\":1,\"151\":1}}],[\"auth\",{\"1\":{\"171\":2}}],[\"authorizationfilter\",{\"1\":{\"145\":1}}],[\"autowired\",{\"1\":{\"91\":2,\"102\":3,\"123\":2,\"153\":1,\"154\":2}}],[\"auto\",{\"1\":{\"29\":1}}],[\"america\",{\"1\":{\"144\":1}}],[\"after=2017\",{\"1\":{\"144\":1}}],[\"after=2023\",{\"1\":{\"139\":1}}],[\"asia\",{\"1\":{\"139\":1}}],[\"archive\",{\"1\":{\"176\":1}}],[\"arraylist\",{\"1\":{\"146\":1}}],[\"args\",{\"1\":{\"130\":2,\"138\":2,\"154\":2}}],[\"artifactid>\",{\"1\":{\"89\":5,\"90\":4,\"100\":1,\"103\":1,\"123\":1,\"130\":4,\"138\":3,\"151\":1,\"173\":1}}],[\"abstract\",{\"1\":{\"123\":1}}],[\"acf3\",{\"1\":{\"113\":1}}],[\"applicationname\",{\"1\":{\"102\":2}}],[\"application\",{\"1\":{\"100\":1,\"138\":2,\"151\":1,\"156\":1}}],[\"api依赖\",{\"1\":{\"130\":1}}],[\"api项目中\",{\"1\":{\"130\":1}}],[\"api包中\",{\"1\":{\"130\":1}}],[\"api\",{\"1\":{\"91\":2,\"102\":1,\"103\":1,\"118\":1,\"123\":2,\"130\":2,\"135\":3,\"138\":3,\"139\":1,\"143\":1,\"144\":1,\"153\":1,\"154\":1,\"173\":1,\"175\":1,\"176\":1,\"179\":9,\"180\":10,\"182\":1,\"183\":1,\"186\":2}}],[\"apachejmeter\",{\"1\":{\"176\":1}}],[\"apache\",{\"1\":{\"90\":1,\"176\":3}}],[\"attr\",{\"1\":{\"146\":1}}],[\"attrs\",{\"0\":{\"56\":1}}],[\"atguigu\",{\"1\":{\"90\":1,\"91\":1,\"126\":2,\"129\":1,\"130\":3,\"138\":1}}],[\"alpha\",{\"1\":{\"171\":2}}],[\"aliases\",{\"1\":{\"90\":1}}],[\"alibaba的依赖\",{\"1\":{\"89\":1}}],[\"alibaba\",{\"1\":{\"89\":5,\"94\":1,\"100\":2,\"138\":2,\"151\":3,\"170\":1,\"173\":2}}],[\"alibaba组件\",{\"1\":{\"86\":1}}],[\"alt\",{\"1\":{\"38\":1}}],[\"a\",{\"1\":{\"8\":1,\"32\":2,\"52\":1}}],[\"3gateway工作流程\",{\"0\":{\"137\":1}}],[\"3过滤器\",{\"0\":{\"136\":1}}],[\"3openfeign自定义配置\",{\"0\":{\"124\":1}}],[\"3源码跟踪\",{\"0\":{\"118\":1}}],[\"3微服务配置名称空间\",{\"0\":{\"113\":1}}],[\"3微服务集成nacos\",{\"0\":{\"99\":1}}],[\"3集群访问\",{\"0\":{\"108\":1}}],[\"3其他问题须知\",{\"0\":{\"93\":1}}],[\"3306\",{\"1\":{\"90\":1}}],[\"3子工程搭建\",{\"0\":{\"90\":1}}],[\"30<\",{\"1\":{\"89\":1}}],[\"3springcloud初体验\",{\"0\":{\"87\":1}}],[\"3分布式和集群\",{\"1\":{\"83\":1}}],[\"3\",{\"0\":{\"88\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"96\":1,\"99\":1,\"100\":2,\"101\":2,\"102\":2,\"103\":2,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"125\":1,\"128\":1,\"129\":2,\"143\":1,\"152\":1,\"155\":1,\"168\":1,\"172\":1,\"174\":1,\"175\":1,\"176\":1,\"177\":2,\"181\":1,\"184\":1},\"1\":{\"7\":1,\"32\":1,\"100\":1,\"103\":1,\"118\":1,\"123\":1,\"128\":1,\"129\":1,\"130\":1,\"138\":1,\"142\":1,\"146\":1,\"154\":1,\"173\":1,\"175\":1,\"178\":1,\"179\":1,\"181\":1,\"182\":1,\"186\":2}}],[\"2200ms\",{\"1\":{\"183\":1}}],[\"21之后才可以进行访问\",{\"1\":{\"139\":1}}],[\"21t10\",{\"1\":{\"139\":1}}],[\"23\",{\"1\":{\"139\":1}}],[\"2断言\",{\"0\":{\"135\":1}}],[\"2三个核心概念\",{\"0\":{\"133\":1}}],[\"200\",{\"1\":{\"183\":2}}],[\"2000\",{\"1\":{\"128\":2,\"129\":2,\"183\":1}}],[\"2019\",{\"1\":{\"168\":1}}],[\"2018\",{\"1\":{\"168\":1}}],[\"2017\",{\"1\":{\"168\":1}}],[\"2013\",{\"1\":{\"168\":1}}],[\"2012\",{\"1\":{\"168\":1}}],[\"20t17\",{\"1\":{\"144\":1}}],[\"20220320162420189\",{\"1\":{\"186\":1}}],[\"20220320155202523\",{\"1\":{\"183\":1}}],[\"20220320155103019\",{\"1\":{\"183\":1}}],[\"20220320154801992\",{\"1\":{\"183\":1}}],[\"20220320153646510\",{\"1\":{\"182\":1}}],[\"20220320153522505\",{\"1\":{\"182\":1}}],[\"20220320153409220\",{\"1\":{\"182\":1}}],[\"20220320152944101\",{\"1\":{\"182\":1}}],[\"20220320150559229\",{\"1\":{\"180\":1}}],[\"20220320114459422\",{\"1\":{\"179\":1}}],[\"20220320112142379\",{\"1\":{\"176\":1}}],[\"20220320112040803\",{\"1\":{\"176\":1}}],[\"20220320111955904\",{\"1\":{\"176\":1}}],[\"20220320111824238\",{\"1\":{\"176\":1}}],[\"20210714164856664\",{\"1\":{\"150\":1}}],[\"20231027163905542\",{\"1\":{\"180\":1}}],[\"20231027163806970\",{\"1\":{\"179\":1}}],[\"20231027093301407\",{\"1\":{\"137\":1}}],[\"20231025190315177\",{\"1\":{\"117\":1}}],[\"20231025144200255\",{\"1\":{\"109\":1}}],[\"20231025144212023\",{\"1\":{\"106\":1}}],[\"20231025184553633\",{\"1\":{\"106\":1}}],[\"20231025183451126\",{\"1\":{\"95\":1}}],[\"20231025183404072\",{\"1\":{\"92\":1}}],[\"20231025181951482\",{\"1\":{\"91\":1}}],[\"20231025150218218\",{\"1\":{\"98\":1}}],[\"20231025150223666\",{\"1\":{\"97\":1}}],[\"20231025150229500\",{\"1\":{\"95\":1}}],[\"20231025150235228\",{\"1\":{\"92\":1}}],[\"20231025150240929\",{\"1\":{\"92\":1}}],[\"20231025150247970\",{\"1\":{\"90\":1}}],[\"20231025150254012\",{\"1\":{\"90\":1}}],[\"20231025150259507\",{\"1\":{\"88\":1}}],[\"20231025150343310\",{\"1\":{\"83\":1}}],[\"20231025150331327\",{\"1\":{\"83\":1}}],[\"20231025150319539\",{\"1\":{\"83\":1}}],[\"20231025150308975\",{\"1\":{\"83\":1}}],[\"20230628102031276\",{\"1\":{\"186\":1}}],[\"20230628101715773\",{\"1\":{\"186\":1}}],[\"20230628101331468\",{\"1\":{\"185\":1}}],[\"20230628101216576\",{\"1\":{\"185\":1}}],[\"20230628101012945\",{\"1\":{\"185\":1}}],[\"20230628100914491\",{\"1\":{\"185\":1}}],[\"20230628100313331\",{\"1\":{\"183\":1}}],[\"20230628100049968\",{\"1\":{\"183\":1}}],[\"20230628100019712\",{\"1\":{\"183\":1}}],[\"20230628115300889\",{\"1\":{\"176\":1}}],[\"20230628095925921\",{\"1\":{\"182\":1}}],[\"20230628095505037\",{\"1\":{\"182\":1}}],[\"20230628095109686\",{\"1\":{\"181\":1}}],[\"20230628095013326\",{\"1\":{\"180\":1}}],[\"20230628094857374\",{\"1\":{\"180\":1}}],[\"20230628094814795\",{\"1\":{\"180\":1}}],[\"20230628094713655\",{\"1\":{\"180\":1}}],[\"20230628094648097\",{\"1\":{\"180\":1}}],[\"20230628094433574\",{\"1\":{\"180\":1}}],[\"20230628094306219\",{\"1\":{\"180\":1}}],[\"20230628093300378\",{\"1\":{\"179\":1}}],[\"20230628093126793\",{\"1\":{\"179\":1}}],[\"20230628092751648\",{\"1\":{\"179\":1}}],[\"20230628092515666\",{\"1\":{\"179\":1}}],[\"20230628092034118\",{\"1\":{\"179\":1}}],[\"20230628091856122\",{\"1\":{\"178\":1}}],[\"20230628090407483\",{\"1\":{\"176\":1}}],[\"20230624220603571\",{\"1\":{\"175\":1}}],[\"20230624220303385\",{\"1\":{\"173\":1}}],[\"20230624215704921\",{\"1\":{\"172\":1}}],[\"20230624215635555\",{\"1\":{\"172\":1}}],[\"20230624215403344\",{\"1\":{\"170\":1}}],[\"20230624215112184\",{\"1\":{\"170\":1}}],[\"20230624203730680\",{\"1\":{\"168\":1}}],[\"20230624203655208\",{\"1\":{\"168\":1}}],[\"20230624203508014\",{\"1\":{\"164\":1}}],[\"20230624203409785\",{\"1\":{\"163\":1}}],[\"20230624203334370\",{\"1\":{\"163\":1}}],[\"20230624203256590\",{\"1\":{\"162\":1}}],[\"20230624203222353\",{\"1\":{\"162\":1}}],[\"20230624203153340\",{\"1\":{\"161\":1}}],[\"20230624203044831\",{\"1\":{\"159\":1}}],[\"20230624200928589\",{\"1\":{\"155\":1}}],[\"20230624171530387\",{\"1\":{\"150\":1}}],[\"20230624171403235\",{\"1\":{\"148\":1}}],[\"20230624170925571\",{\"1\":{\"146\":1}}],[\"20230624164230054\",{\"1\":{\"141\":1}}],[\"20230624163811030\",{\"1\":{\"139\":1}}],[\"20230624163155679\",{\"1\":{\"138\":1}}],[\"20230624113033761\",{\"1\":{\"130\":1}}],[\"20230624103625541\",{\"1\":{\"128\":1}}],[\"20230624093650991\",{\"1\":{\"122\":1}}],[\"20230624093622996\",{\"1\":{\"122\":1}}],[\"20230721101903404\",{\"1\":{\"139\":1}}],[\"20230721101439700\",{\"1\":{\"138\":1}}],[\"20230721092532222\",{\"1\":{\"138\":1}}],[\"20230503224702411\",{\"1\":{\"118\":1}}],[\"20230503223822056\",{\"1\":{\"118\":1}}],[\"20230503213502251\",{\"1\":{\"116\":1}}],[\"20230503191655562\",{\"1\":{\"113\":1}}],[\"20230503191050511\",{\"1\":{\"112\":1}}],[\"20230503190738675\",{\"1\":{\"111\":1}}],[\"20230503185847770\",{\"1\":{\"111\":1}}],[\"20230503185416608\",{\"1\":{\"109\":1}}],[\"20230503183721175\",{\"1\":{\"107\":1}}],[\"20230503183655565\",{\"1\":{\"107\":1}}],[\"20230809102346561\",{\"1\":{\"107\":1}}],[\"20230809100204178\",{\"1\":{\"100\":1}}],[\"2020\",{\"1\":{\"65\":1,\"168\":1}}],[\"2openfeign初体验\",{\"0\":{\"123\":1}}],[\"2421acbff67a\",{\"1\":{\"113\":1}}],[\"2创建名称空间\",{\"0\":{\"112\":1}}],[\"2集群配置\",{\"0\":{\"107\":1}}],[\"2方案二\",{\"0\":{\"103\":1}}],[\"2远程调用\",{\"0\":{\"101\":1}}],[\"2注册中心产品\",{\"0\":{\"96\":1}}],[\"2传统方式调用的问题所在\",{\"0\":{\"92\":1}}],[\"2<\",{\"1\":{\"89\":1}}],[\"2springcloud组成\",{\"0\":{\"86\":1}}],[\"2微服务架构\",{\"0\":{\"83\":1}}],[\"2\",{\"0\":{\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":2,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"102\":1,\"103\":1,\"117\":1,\"128\":1,\"134\":1,\"135\":1,\"136\":1,\"142\":1,\"149\":1,\"150\":1,\"151\":2,\"152\":1,\"160\":1,\"169\":1,\"170\":1,\"171\":2,\"172\":1,\"173\":1,\"176\":1},\"1\":{\"7\":1,\"32\":2,\"43\":14,\"59\":1,\"90\":1,\"98\":4,\"100\":1,\"103\":1,\"108\":1,\"114\":1,\"118\":2,\"120\":1,\"123\":1,\"128\":1,\"129\":1,\"130\":1,\"135\":1,\"138\":1,\"142\":3,\"143\":1,\"146\":1,\"151\":1,\"154\":1,\"171\":2,\"173\":1,\"175\":1,\"176\":1,\"178\":1,\"179\":2,\"180\":2,\"181\":1,\"182\":1,\"183\":2,\"186\":2}}],[\"12\",{\"1\":{\"183\":1}}],[\"127\",{\"1\":{\"138\":1}}],[\"1限流\",{\"1\":{\"179\":1}}],[\"1请求限流\",{\"1\":{\"179\":1}}],[\"1秒内运行完\",{\"1\":{\"176\":1}}],[\"103\",{\"1\":{\"186\":2}}],[\"102\",{\"1\":{\"186\":2}}],[\"101\",{\"1\":{\"186\":2}}],[\"10103\",{\"1\":{\"107\":1}}],[\"10101\",{\"1\":{\"107\":1}}],[\"10100\",{\"1\":{\"90\":1,\"91\":2,\"173\":1}}],[\"1000ms\",{\"1\":{\"183\":1}}],[\"100秒\",{\"1\":{\"179\":1}}],[\"10\",{\"1\":{\"182\":1}}],[\"10个线程\",{\"1\":{\"176\":1}}],[\"1调用2直接返回兜底数据\",{\"1\":{\"163\":1}}],[\"1调用2\",{\"1\":{\"163\":1}}],[\"1时\",{\"1\":{\"138\":1}}],[\"1路由\",{\"0\":{\"134\":1}}],[\"1认识gateway\",{\"0\":{\"132\":1}}],[\"1openfeign组件介绍\",{\"0\":{\"122\":1}}],[\"1简介\",{\"0\":{\"116\":1}}],[\"1环境隔离概述\",{\"0\":{\"111\":1}}],[\"1集群概述\",{\"0\":{\"106\":1}}],[\"1服务集群\",{\"0\":{\"105\":1}}],[\"1方案一\",{\"0\":{\"102\":1}}],[\"1准备工作\",{\"0\":{\"100\":1}}],[\"142\",{\"1\":{\"98\":1,\"151\":1}}],[\"136\",{\"1\":{\"98\":1,\"151\":1}}],[\"168\",{\"1\":{\"98\":1,\"151\":1}}],[\"192\",{\"1\":{\"98\":1,\"151\":1}}],[\"19th\",{\"1\":{\"54\":1}}],[\"1传统调用\",{\"0\":{\"91\":1}}],[\"1<\",{\"1\":{\"89\":1}}],[\"1工程结构说明\",{\"0\":{\"88\":1}}],[\"1什么是springcloud\",{\"0\":{\"85\":1}}],[\"1单体架构\",{\"0\":{\"82\":1}}],[\"1\",{\"0\":{\"81\":1,\"82\":1,\"83\":1,\"95\":1,\"106\":1,\"107\":1,\"108\":1,\"125\":1,\"141\":1,\"148\":1,\"150\":1,\"158\":1,\"159\":2,\"160\":1,\"168\":1,\"170\":1,\"175\":1},\"1\":{\"7\":1,\"8\":1,\"32\":2,\"43\":12,\"52\":1,\"57\":1,\"59\":1,\"65\":2,\"83\":1,\"91\":1,\"100\":1,\"103\":1,\"108\":1,\"109\":1,\"114\":1,\"118\":3,\"120\":1,\"123\":1,\"128\":1,\"129\":2,\"130\":1,\"135\":1,\"138\":7,\"142\":1,\"143\":1,\"146\":1,\"151\":1,\"154\":1,\"173\":2,\"175\":1,\"176\":1,\"178\":1,\"179\":3,\"180\":2,\"181\":1,\"182\":1,\"183\":4,\"186\":2}}],[\"项目\",{\"1\":{\"7\":6}}],[\"列表默认为\",{\"1\":{\"7\":1}}],[\"斜体\",{\"1\":{\"6\":1}}],[\"粗体\",{\"1\":{\"6\":1}}],[\"标题和页面信息\",{\"1\":{\"67\":1}}],[\"标题默认会自动转换为大写\",{\"1\":{\"6\":1}}],[\"标签为\",{\"1\":{\"65\":1}}],[\"标记资源\",{\"1\":{\"186\":1}}],[\"标记userservice中的queryusers方法为一个sentinel监控的资源\",{\"1\":{\"180\":1}}],[\"标记\",{\"0\":{\"58\":1}}],[\"标准语法中的内容均不受支持\",{\"1\":{\"10\":1}}],[\"标注水平幻灯片\",{\"1\":{\"3\":1}}],[\"标注幻灯片\",{\"0\":{\"2\":1,\"3\":1}}],[\"mvc资源无效\",{\"1\":{\"186\":1}}],[\"mvc的所有请求设置同一个root资源\",{\"1\":{\"180\":1}}],[\"mvc的每一个端点就是调用链路中的一个资源\",{\"1\":{\"175\":1}}],[\"mvc的每一个端点\",{\"1\":{\"175\":1}}],[\"mesh\",{\"1\":{\"168\":2}}],[\"m\",{\"1\":{\"98\":1}}],[\"mono<void>\",{\"1\":{\"145\":1,\"146\":1}}],[\"model<\",{\"1\":{\"130\":2}}],[\"model\",{\"1\":{\"130\":2}}],[\"mode=standalone\",{\"1\":{\"98\":1}}],[\"more\",{\"1\":{\"64\":1}}],[\"mysql的驱动\",{\"1\":{\"89\":1,\"90\":1}}],[\"mysql\",{\"1\":{\"89\":2,\"90\":2}}],[\"mybatis和spring\",{\"1\":{\"89\":1,\"90\":1}}],[\"mybatis\",{\"1\":{\"89\":3,\"90\":2}}],[\"ms\",{\"1\":{\"65\":1}}],[\"md\",{\"1\":{\"51\":1}}],[\"maxthreshold\",{\"1\":{\"182\":1}}],[\"mapping中找到与请求匹配的路由\",{\"1\":{\"137\":1}}],[\"mapper\",{\"1\":{\"90\":2,\"175\":1}}],[\"main\",{\"1\":{\"130\":1,\"138\":1,\"151\":1,\"154\":1}}],[\"maven\",{\"1\":{\"89\":2,\"90\":2}}],[\"math\",{\"1\":{\"9\":1}}],[\"markdown\",{\"0\":{\"4\":1,\"5\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1},\"1\":{\"4\":1,\"5\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":2,\"46\":2,\"47\":3,\"48\":1,\"49\":3,\"50\":2,\"51\":1,\"52\":1,\"65\":1,\"66\":2,\"71\":1,\"78\":1},\"2\":{\"63\":1,\"188\":1}}],[\"mr\",{\"1\":{\"1\":1}}],[\"hot\",{\"1\":{\"186\":1}}],[\"hope\",{\"1\":{\"1\":1,\"65\":1}}],[\"handle\",{\"1\":{\"146\":1}}],[\"handle方法会加载全局过滤器\",{\"1\":{\"146\":1}}],[\"handlermapper基础框架的一部分\",{\"1\":{\"139\":1}}],[\"handler再通过指定的过滤器链来将请求发送给我们实际的服务执行业务逻辑\",{\"1\":{\"137\":1}}],[\"handler\",{\"1\":{\"137\":2,\"146\":1}}],[\"hastext\",{\"1\":{\"145\":1}}],[\"header\",{\"1\":{\"143\":3,\"153\":3,\"154\":3,\"186\":3}}],[\"headers\",{\"1\":{\"125\":1,\"126\":1}}],[\"http远程调用的结果做解析\",{\"1\":{\"125\":1}}],[\"httpstatus\",{\"1\":{\"145\":1}}],[\"https\",{\"1\":{\"122\":1,\"139\":1,\"142\":1,\"168\":1,\"170\":1,\"176\":1}}],[\"http\",{\"1\":{\"91\":1,\"98\":1,\"102\":1,\"103\":1,\"118\":1,\"128\":1,\"138\":1}}],[\"html\",{\"1\":{\"3\":1,\"23\":1,\"29\":1,\"139\":1,\"142\":1}}],[\"h2o\",{\"1\":{\"54\":1}}],[\"highlight\",{\"1\":{\"8\":1,\"21\":6,\"32\":1}}],[\"h3\",{\"0\":{\"6\":1}}],[\"在流控的高级选项中\",{\"1\":{\"181\":1}}],[\"在弹出的表单中填写下面信息\",{\"1\":{\"180\":1}}],[\"在这两个端点中分别调用userservice中的queryusers方法\",{\"1\":{\"180\":1}}],[\"在jmeter中进行测试\",{\"1\":{\"179\":1}}],[\"在usercontroller中\",{\"1\":{\"180\":1}}],[\"在usercontroller新建一个端点\",{\"1\":{\"179\":1}}],[\"在userservice中添加一个queryusers方法\",{\"1\":{\"180\":1}}],[\"在user模块配置文件添加配置\",{\"1\":{\"106\":1}}],[\"在添加限流规则时\",{\"1\":{\"178\":1}}],[\"在阿里巴巴集团内部迅速发展\",{\"1\":{\"168\":1}}],[\"在部分服务故障时\",{\"1\":{\"164\":1}}],[\"在高并发情况下\",{\"1\":{\"159\":1}}],[\"在微服务系统架构中\",{\"1\":{\"159\":1}}],[\"在gateway中提供了三种级别的类型的过滤器\",{\"1\":{\"142\":1}}],[\"在gateway中提供了很多的路由工厂如下所示\",{\"1\":{\"139\":1}}],[\"在gateway中要实现其他的功能\",{\"1\":{\"141\":1}}],[\"在控制台可以看到如下信息\",{\"1\":{\"139\":1}}],[\"在网关模块中配置文件中\",{\"1\":{\"138\":1}}],[\"在\",{\"1\":{\"137\":1,\"155\":1}}],[\"在spzx\",{\"1\":{\"130\":1,\"138\":1,\"143\":1,\"151\":2}}],[\"在spring容器中注册一个bean\",{\"1\":{\"120\":1}}],[\"在springcloud这个项目中包含很多的组件\",{\"1\":{\"85\":1}}],[\"在basic的基础上\",{\"1\":{\"126\":1}}],[\"在启动类上添加\",{\"1\":{\"123\":1,\"154\":1}}],[\"在loadbalancerclient的choose方法通过reactiveloadbalancer\",{\"1\":{\"117\":1}}],[\"在nacos服务端创建一个配置\",{\"1\":{\"150\":1}}],[\"在nacos是通过namespace来实现多环境的隔离\",{\"1\":{\"111\":1}}],[\"在nacos控制台\",{\"1\":{\"109\":1}}],[\"在实际的开发过程中\",{\"1\":{\"111\":1}}],[\"在实际生产环境中\",{\"1\":{\"106\":1}}],[\"在配置文件中进行权重配置\",{\"1\":{\"109\":1}}],[\"在访问bj集群中的实例\",{\"1\":{\"108\":1}}],[\"在调用端order进行配置\",{\"1\":{\"106\":1}}],[\"在调用端order模块创建user实体类\",{\"1\":{\"91\":1}}],[\"在调用端order模块创建配置类\",{\"1\":{\"91\":1}}],[\"在服务端user进行配置\",{\"1\":{\"106\":1}}],[\"在声明resttemplate的方法上添加\",{\"1\":{\"103\":1}}],[\"在application\",{\"1\":{\"100\":1,\"138\":1}}],[\"在两个子工程中引入如下依赖\",{\"1\":{\"100\":1}}],[\"在注册中心会维护一张服务清单\",{\"1\":{\"95\":1}}],[\"在order微服务中添加依赖\",{\"1\":{\"103\":1}}],[\"在order微服务的spring容器中注册一个resttemplate\",{\"1\":{\"91\":1}}],[\"在order实现类的方法使用resttemplate发起远程调用\",{\"1\":{\"91\":1}}],[\"在resourse目录下面创建一个application\",{\"1\":{\"90\":1}}],[\"在子模块中添加依赖\",{\"1\":{\"90\":1}}],[\"在dependencymanagement标签中所定义的依赖不会被子工程直接进行继承\",{\"1\":{\"89\":1}}],[\"在创建微服务工程的时候都需要先提供一个工程\",{\"1\":{\"88\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"40\":1}}],[\"在你启用\",{\"1\":{\"8\":1,\"9\":1}}],[\"在前一个\",{\"1\":{\"3\":1}}],[\"在幻灯片上添加属性\",{\"1\":{\"3\":1}}],[\"在水平幻灯片中使用\",{\"1\":{\"3\":1}}],[\">=\",{\"1\":{\"129\":1}}],[\">\",{\"1\":{\"3\":2,\"23\":2,\"89\":7,\"90\":4,\"100\":1,\"103\":1,\"123\":1,\"130\":3,\"138\":3,\"146\":2,\"151\":1,\"156\":2,\"173\":1,\"180\":2}}],[\"<artifactid>spzx\",{\"1\":{\"130\":2}}],[\"<artifactid>spring\",{\"1\":{\"89\":3,\"90\":1,\"100\":1,\"103\":1,\"123\":1,\"130\":1,\"138\":3,\"151\":1,\"173\":1}}],[\"<artifactid>lombok<\",{\"1\":{\"90\":1,\"130\":1}}],[\"<artifactid>mybatis\",{\"1\":{\"89\":1,\"90\":1}}],[\"<artifactid>mysql\",{\"1\":{\"89\":1,\"90\":1}}],[\"<groupid>mysql<\",{\"1\":{\"89\":1,\"90\":1}}],[\"<groupid>com\",{\"1\":{\"89\":1,\"100\":1,\"130\":2,\"138\":1,\"151\":1,\"173\":1}}],[\"<groupid>org\",{\"1\":{\"89\":3,\"90\":3,\"103\":1,\"123\":1,\"130\":2,\"138\":2}}],[\"<scope>import<\",{\"1\":{\"89\":2}}],[\"<spring\",{\"1\":{\"89\":2}}],[\"<type>pom<\",{\"1\":{\"89\":2}}],[\"<version>1\",{\"1\":{\"130\":2}}],[\"<version>$\",{\"1\":{\"89\":4}}],[\"<version>3\",{\"1\":{\"89\":1}}],[\"<dependency>\",{\"1\":{\"89\":4,\"90\":4,\"100\":1,\"103\":1,\"123\":1,\"130\":4,\"138\":3,\"151\":1,\"173\":1}}],[\"<dependencymanagement>\",{\"1\":{\"89\":1}}],[\"<dependencies>\",{\"1\":{\"89\":1,\"90\":1}}],[\"<parent>\",{\"1\":{\"89\":1}}],[\"<project\",{\"1\":{\"89\":1,\"90\":1}}],[\"<properties>\",{\"1\":{\"89\":1,\"90\":1}}],[\"<mysql\",{\"1\":{\"89\":1}}],[\"<mybatis\",{\"1\":{\"89\":1}}],[\"<maven\",{\"1\":{\"89\":2,\"90\":2}}],[\"<\",{\"1\":{\"3\":2,\"89\":19,\"90\":10,\"100\":2,\"103\":2,\"123\":2,\"130\":7,\"138\":6,\"151\":2,\"173\":2}}],[\"幻灯片演示\",{\"0\":{\"1\":1}}],[\"幻灯片页\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
